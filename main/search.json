[{"path":"https://insightsengineering.github.io/simIDM/articles/quickstart.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"simIDM: Getting Started","text":"purpose vignette explain use getClinicalTrials(), core function package. getClinicalTrials() can used simulate large number clinical trials endpoints progression-free survival (PFS) overall survival (OS). underlying model survival multistate model initial state, intermediate progression state absorbing death state. multistate model approach advantage naturally accounting correlation PFS OS endpoints (Meller, Beyersmann, Rufibach 2019). OS defined time reach absorbing state death PFS defined time reach absorbing state death intermediate state progression, whichever occurs first. Figure 1 shows multistate model corresponding transition hazards. get started quickly, show simple quick example clinical trial simulation. Figure 1 - Multistate model indermediate state progession absorbing state death","code":"#> Warning in plot.Hist(idHist, stateLabels = stateLabels, box1.row = 2, box1.column = 1, : The dimension of the boxes may depend on the current graphical device #> in the sense that the layout and centering of text may change when you resize the graphical device and call the same plot."},{"path":"https://insightsengineering.github.io/simIDM/articles/quickstart.html","id":"simulation-specifications","dir":"Articles","previous_headings":"","what":"Simulation Specifications","title":"simIDM: Getting Started","text":"getClinicalTrials() simulates trials arbitrary number treatment arms. general, argument specifications tried similar R-package Rpact (Wassmer Pahlke 2021) order user-friendly. illustration, consider trial two arms. number patients per trial must specified. example simulation 30 patients first treatment arm 60 second treatment arm: transition parameters describing transition hazards per treatment arm must passed list getClinicalTrials(). class TransitionParameters contains elements hazards, intervals, weibull_rates family allow describe transition hazards leading exponential, piecewise exponential Weibull distributed survival times. helper functions simIDM package create appropriate transition parameters desired distribution. - exponential_transition(): creates list class TransitionParameters containing hazards, time intervals Weibull rates exponential event times illness-death model. - piecewise_exponential(): creates list class TransitionParameters containing hazards, time intervals Weibull rates piecewise exponential event times illness-death model. - weibull_transition(): creates list class TransitionParameters containing hazards, time intervals Weibull rates Weibull distributed event times illness-death model. example consider constant hazard rates, .e. exponential distributed event times. specification random patient dropouts can passed directly getClinicalTrials(). list elements rate time specifies drop-probability. Random censoring times generated using exponential distribution. dropout$rate specifies drop-probability per dropout$time time units. dropout parameters can specified either one list applied treatment groups separate list treatment group. dropout$rate equal 0, censoring due dropout applied. example expect 10% patients drop-within 12 months per treatment group (take month time unit trial), thus specify: two time-scales need consider simulating multistate data. individual time scale start initial state time 0 study time scale, matches individual time scale study start time (e.g. randomization date) time calendar time patients. can also specified patients enter study staggered manner. Uniformly distributed random variables used generate staggered study entry times. two possibilities specification: Either, length accrual period specified, e.g. 12 month, case staggered entry times generated treatment group using random variables \\(U ~Unif(0, 12)\\). , specified many patients recruited per time unit treatment group. Thus, 10 patients recruited per month, staggered entry times generated using random variables \\(U ~Unif(0, 30/10)\\). list accrual elements accrualParam accrualValue passed getClinicalTrials() describing accrual intensity. accrualParam equal time, accrualValuedescribes length accrual period. accrualParam equal intensity, describes number patients recruited per time unit. accrualValue equal 0, patients start calender time initial state. accrual parameters can specified either one list applied treatment groups separate list treatment group.","code":"nPat <- c(30, 60) library(simIDM)  transitionGroup1 <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) print(transitionGroup1$hazards) #> $h01 #> [1] 1.2 #>  #> $h02 #> [1] 1.5 #>  #> $h12 #> [1] 1.6 transitionGroup2 <- exponential_transition(h01 = 1, h02 = 1.3, h12 = 1.7) print(transitionGroup2$hazards) #> $h01 #> [1] 1 #>  #> $h02 #> [1] 1.3 #>  #> $h12 #> [1] 1.7 transitionbyArm <- list(transitionGroup1, transitionGroup2) dropout <- list(rate = 0.1, time = 12) # first example accrual <- list(param = \"intensity\", value = 12) # second example accrual <- list(param = \"intensity\", value = 3)"},{"path":"https://insightsengineering.github.io/simIDM/articles/quickstart.html","id":"application","dir":"Articles","previous_headings":"","what":"Application","title":"simIDM: Getting Started","text":"now simulate 100 (nRep=100) clinical trials parameters described specified . two options output data presented, one row per patient one row per transition patient. Let’s take look .","code":"simStudies1 <- getClinicalTrials(   nRep = 100, nPat = nPat, seed = 1234, datType = \"1rowTransition\",   transitionByArm = transitionbyArm, dropout = dropout,   accrual = accrual ) #> Simulating 100 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100%  simStudies2 <- getClinicalTrials(   nRep = 100, nPat = nPat, seed = 1234, datType = \"1rowPatient\",   transitionByArm = transitionbyArm, dropout = dropout,   accrual = accrual ) #> Simulating 100 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100%"},{"path":"https://insightsengineering.github.io/simIDM/articles/quickstart.html","id":"output-data","dir":"Articles","previous_headings":"","what":"Output Data","title":"simIDM: Getting Started","text":"get output list nRep elements, containing data set single simulated trial. specification seed ensures, datasets two lists contain study data, presentation different. simStudies1 shows transition times per patient simStudies2 PFS OS times per patient. want simulate one trial, getOneClinicalTrial can also used getDatasetWideFormat can used convert dataset displayed transition time displaying PFS OS times. also possible generate study censors patients pre-specified number events (PFS OS) occurred.","code":"head(simStudies1[[1]], 6) #>   id from to     entry       exit entryAct   exitAct    censAct trt #> 1  1    0  2 0.0000000 0.46787743 1.234711  1.702588 286.171654   1 #> 2  2    0  2 0.0000000 0.26010392 7.971605  8.231709  36.076123   1 #> 3  3    0  2 0.0000000 0.06150124 7.442772  7.504273   8.192422   1 #> 4  4    0  1 0.0000000 0.25964639 9.159742  9.419389 207.649214   1 #> 5  4    1  2 0.2596464 2.13580247 9.419389 11.295545 207.649214   1 #> 6  5    0  2 0.0000000 0.25227459 9.945982 10.198257  54.044011   1 head(simStudies2[[1]], 5) #>   id trt    PFStime CensoredPFS PFSevent     OStime CensoredOS OSevent #> 1  1   1 0.46787743           0        1 0.46787743          0       1 #> 2  2   1 0.26010392           0        1 0.26010392          0       1 #> 3  3   1 0.06150124           0        1 0.06150124          0       1 #> 4  4   1 0.25964639           0        1 2.13580247          0       1 #> 5  5   1 0.25227459           0        1 0.25227459          0       1 #>   recruitTime OStimeCal PFStimeCal #> 1    1.234711  1.702588   1.702588 #> 2    7.971605  8.231709   8.231709 #> 3    7.442772  7.504273   7.504273 #> 4    9.159742 11.295545   9.419389 #> 5    9.945982 10.198257  10.198257 simStudy_Trans <- getOneClinicalTrial(   nPat = nPat, transitionByArm = transitionbyArm,   dropout = dropout,   accrual = accrual )  simStudy_PFSOS <- getDatasetWideFormat(simStudy_Trans) head(simStudy_Trans, 10) #>    id from to     entry       exit entryAct  exitAct   censAct trt #> 1   1    0  2 0.0000000 0.32181077 5.063864 5.385675 335.59100   1 #> 2   2    0  1 0.0000000 0.44263317 8.083607 8.526241  96.83774   1 #> 3   2    1  2 0.4426332 0.70429214 8.526241 8.787899  96.83774   1 #> 4   3    0  2 0.0000000 0.03497509 4.478954 4.513929  74.19954   1 #> 5   4    0  1 0.0000000 0.19827637 5.606922 5.805199  48.06033   1 #> 6   4    1  2 0.1982764 0.93065829 5.805199 6.537580  48.06033   1 #> 7   5    0  2 0.0000000 0.06933912 9.077324 9.146663 119.07514   1 #> 8   6    0  1 0.0000000 0.44623034 8.790901 9.237131  81.78121   1 #> 9   6    1  2 0.4462303 0.44837021 9.237131 9.239271  81.78121   1 #> 10  7    0  1 0.0000000 0.63135991 8.441810 9.073170  97.36028   1 head(simStudy_PFSOS, 10) #>    id trt    PFStime CensoredPFS PFSevent     OStime CensoredOS OSevent #> 1   1   1 0.32181077           0        1 0.32181077          0       1 #> 2   2   1 0.44263317           0        1 0.70429214          0       1 #> 3   3   1 0.03497509           0        1 0.03497509          0       1 #> 4   4   1 0.19827637           0        1 0.93065829          0       1 #> 5   5   1 0.06933912           0        1 0.06933912          0       1 #> 6   6   1 0.44623034           0        1 0.44837021          0       1 #> 7   7   1 0.63135991           0        1 1.69430412          0       1 #> 8   8   1 1.60671207           0        1 1.60671207          0       1 #> 9   9   1 0.22975563           0        1 0.50776145          0       1 #> 10 10   1 0.06312064           0        1 0.06312064          0       1 #>    recruitTime OStimeCal PFStimeCal #> 1    5.0638640  5.385675   5.385675 #> 2    8.0836073  8.787899   8.526241 #> 3    4.4789541  4.513929   4.513929 #> 4    5.6069222  6.537580   5.805199 #> 5    9.0773241  9.146663   9.146663 #> 6    8.7909011  9.239271   9.237131 #> 7    8.4418100 10.136114   9.073170 #> 8    0.4754946  2.082207   2.082207 #> 9    2.8876069  3.395368   3.117363 #> 10   6.6150703  6.678191   6.678191 simStudy_Trans <- getOneClinicalTrial(   nPat = nPat, transitionByArm = transitionbyArm,   dropout = dropout,   accrual = accrual )  simStudy_PFSOS <- getDatasetWideFormat(simStudy_Trans) head(simStudy_Trans, 10) #>    id from to      entry       exit    entryAct   exitAct   censAct trt #> 1   1    0  1 0.00000000 0.06961555 7.780312062 7.8499276 102.95744   1 #> 2   1    1  2 0.06961555 1.04718403 7.849927611 8.8274961 102.95744   1 #> 3   2    0  2 0.00000000 0.26116360 4.626272118 4.8874357  47.17874   1 #> 4   3    0  2 0.00000000 0.15075060 6.508751956 6.6595026 168.99387   1 #> 5   4    0  1 0.00000000 0.56212147 2.690053477 3.2521749  48.75687   1 #> 6   4    1  2 0.56212147 2.41915162 3.252174950 5.1092051  48.75687   1 #> 7   5    0  2 0.00000000 0.01950124 8.332294915 8.3517962 118.78556   1 #> 8   6    0  2 0.00000000 0.47629626 0.024984612 0.5012809 145.10228   1 #> 9   7    0  2 0.00000000 0.64391257 0.003990494 0.6479031  63.08757   1 #> 10  8    0  2 0.00000000 0.56831986 7.120901188 7.6892211 659.17510   1 head(simStudy_PFSOS, 10) #>    id trt    PFStime CensoredPFS PFSevent     OStime CensoredOS OSevent #> 1   1   1 0.06961555           0        1 1.04718403          0       1 #> 2   2   1 0.26116360           0        1 0.26116360          0       1 #> 3   3   1 0.15075060           0        1 0.15075060          0       1 #> 4   4   1 0.56212147           0        1 2.41915162          0       1 #> 5   5   1 0.01950124           0        1 0.01950124          0       1 #> 6   6   1 0.47629626           0        1 0.47629626          0       1 #> 7   7   1 0.64391257           0        1 0.64391257          0       1 #> 8   8   1 0.56831986           0        1 0.56831986          0       1 #> 9   9   1 0.27386179           0        1 0.27386179          0       1 #> 10 10   1 0.41250249           0        1 1.15933490          0       1 #>    recruitTime OStimeCal PFStimeCal #> 1  7.780312062 8.8274961  7.8499276 #> 2  4.626272118 4.8874357  4.8874357 #> 3  6.508751956 6.6595026  6.6595026 #> 4  2.690053477 5.1092051  3.2521749 #> 5  8.332294915 8.3517962  8.3517962 #> 6  0.024984612 0.5012809  0.5012809 #> 7  0.003990494 0.6479031  0.6479031 #> 8  7.120901188 7.6892211  7.6892211 #> 9  5.236761118 5.5106229  5.5106229 #> 10 5.930290024 7.0896249  6.3427925  simStudy_40PFS <- censoringByNumberEvents(data = simStudy_PFSOS, eventNum = 40, typeEvent = \"PFS\") simStudy_30POS <- censoringByNumberEvents(data = simStudy_PFSOS, eventNum = 30, typeEvent = \"PFS\") simStudy_40PFS #>    id trt    PFStime PFSevent     OStime CensoredOS OSevent recruitTime #> 1   2   1 0.26116360        1 0.26116360          0       1 4.626272118 #> 2   3   1 0.15075060        1 0.15075060          0       1 6.508751956 #> 3   4   1 0.56212147        1 2.41915162          0       1 2.690053477 #> 4   6   1 0.47629626        1 0.47629626          0       1 0.024984612 #> 5   7   1 0.64391257        1 0.64391257          0       1 0.003990494 #> 6   9   1 0.27386179        1 0.27386179          0       1 5.236761118 #> 7  10   1 0.41250249        1 0.89799098          1       0 5.930290024 #> 8  12   1 0.62277501        1 0.64594684          0       1 4.695528368 #> 9  13   1 0.12997017        1 0.12997017          0       1 1.509620696 #> 10 14   1 1.04040922        1 1.04040922          0       1 1.242366128 #> 11 15   1 0.02544847        1 0.02544847          0       1 4.443782684 #> 12 17   1 0.57767544        1 0.57767544          0       1 0.823651729 #> 13 18   1 0.09734062        1 0.09734062          0       1 1.893173764 #> 14 19   1 0.16208977        1 0.16208977          0       1 4.184192105 #> 15 21   1 0.14169789        1 0.14169789          0       1 5.848798379 #> 16 22   1 0.04763364        1 0.04763364          0       1 3.433677910 #> 17 23   1 0.45706380        1 0.45706380          0       1 4.143891723 #> 18 24   1 0.09314261        1 0.91309530          0       1 2.018429318 #> 19 25   1 0.56389389        1 0.56389389          0       1 3.687071947 #> 20 26   1 0.47023947        1 0.47023947          0       1 4.227757026 #> 21 27   1 0.22703896        1 0.22703896          0       1 4.133027100 #> 22 29   1 0.46661062        1 0.51297590          0       1 6.289522646 #> 23 38   2 0.15540772        1 0.15540772          0       1 1.464038296 #> 24 40   2 0.04322971        1 0.04322971          1       0 6.785051292 #> 25 41   2 0.54570637        1 0.54570637          0       1 4.364613695 #> 26 43   2 0.24034500        0 0.24034500          1       0 6.587936003 #> 27 44   2 1.63214588        1 1.63214588          0       1 1.881478205 #> 28 45   2 0.58103357        1 0.58103357          0       1 5.467244969 #> 29 54   2 0.34380339        1 0.74697844          0       1 2.132945149 #> 30 59   2 0.09644431        1 0.27138395          0       1 5.442366586 #> 31 61   2 0.45262441        1 1.01968087          0       1 5.125696822 #> 32 62   2 0.05870165        1 0.05870165          0       1 5.439043818 #> 33 65   2 0.49377546        1 0.49377546          0       1 4.180423580 #> 34 68   2 0.12736172        1 0.12736172          0       1 3.157080468 #> 35 74   2 0.07764841        0 0.07764841          1       0 6.750632599 #> 36 76   2 0.60140979        1 0.60140979          0       1 5.403354042 #> 37 79   2 0.03248963        1 0.03248963          0       1 0.871058516 #> 38 82   2 0.19592203        1 0.19592203          0       1 0.017242287 #> 39 83   2 0.06006929        1 1.21931632          0       1 3.657871913 #> 40 86   2 0.11559171        1 0.11559171          0       1 3.960323525 #> 41 88   2 0.09813191        1 1.79531539          0       1 0.935697695 #> 42 89   2 0.51809902        1 0.51809902          0       1 1.062610177 #>    OStimeCal PFStimeCal #> 1  4.8874357  4.8874357 #> 2  6.6595026  6.6595026 #> 3  5.1092051  3.2521749 #> 4  0.5012809  0.5012809 #> 5  0.6479031  0.6479031 #> 6  5.5106229  5.5106229 #> 7  6.8282810  6.3427925 #> 8  5.3414752  5.3183034 #> 9  1.6395909  1.6395909 #> 10 2.2827753  2.2827753 #> 11 4.4692312  4.4692312 #> 12 1.4013272  1.4013272 #> 13 1.9905144  1.9905144 #> 14 4.3462819  4.3462819 #> 15 5.9904963  5.9904963 #> 16 3.4813115  3.4813115 #> 17 4.6009555  4.6009555 #> 18 2.9315246  2.1115719 #> 19 4.2509658  4.2509658 #> 20 4.6979965  4.6979965 #> 21 4.3600661  4.3600661 #> 22 6.8024985  6.7561333 #> 23 1.6194460  1.6194460 #> 24 6.8282810  6.8282810 #> 25 4.9103201  4.9103201 #> 26 6.8282810  6.8282810 #> 27 3.5136241  3.5136241 #> 28 6.0482785  6.0482785 #> 29 2.8799236  2.4767485 #> 30 5.7137505  5.5388109 #> 31 6.1453777  5.5783212 #> 32 5.4977455  5.4977455 #> 33 4.6741990  4.6741990 #> 34 3.2844422  3.2844422 #> 35 6.8282810  6.8282810 #> 36 6.0047638  6.0047638 #> 37 0.9035481  0.9035481 #> 38 0.2131643  0.2131643 #> 39 4.8771882  3.7179412 #> 40 4.0759152  4.0759152 #> 41 2.7310131  1.0338296 #> 42 1.5807092  1.5807092 simStudy_30POS #>    id trt    PFStime PFSevent     OStime CensoredOS OSevent recruitTime #> 1   2   1 0.26116360        1 0.26116360          0       1 4.626272118 #> 2   4   1 0.56212147        1 2.41915162          0       1 2.690053477 #> 3   6   1 0.47629626        1 0.47629626          0       1 0.024984612 #> 4   7   1 0.64391257        1 0.64391257          0       1 0.003990494 #> 5   9   1 0.26098435        0 0.26098435          1       0 5.236761118 #> 6  12   1 0.62277501        1 0.64594684          0       1 4.695528368 #> 7  13   1 0.12997017        1 0.12997017          0       1 1.509620696 #> 8  14   1 1.04040922        1 1.04040922          0       1 1.242366128 #> 9  15   1 0.02544847        1 0.02544847          0       1 4.443782684 #> 10 17   1 0.57767544        1 0.57767544          0       1 0.823651729 #> 11 18   1 0.09734062        1 0.09734062          0       1 1.893173764 #> 12 19   1 0.16208977        1 0.16208977          0       1 4.184192105 #> 13 22   1 0.04763364        1 0.04763364          0       1 3.433677910 #> 14 23   1 0.45706380        1 0.45706380          0       1 4.143891723 #> 15 24   1 0.09314261        1 0.91309530          0       1 2.018429318 #> 16 25   1 0.56389389        1 0.56389389          0       1 3.687071947 #> 17 26   1 0.47023947        1 0.47023947          0       1 4.227757026 #> 18 27   1 0.22703896        1 0.22703896          0       1 4.133027100 #> 19 38   2 0.15540772        1 0.15540772          0       1 1.464038296 #> 20 41   2 0.54570637        1 0.54570637          0       1 4.364613695 #> 21 44   2 1.63214588        1 1.63214588          0       1 1.881478205 #> 22 45   2 0.03050050        0 0.03050050          1       0 5.467244969 #> 23 54   2 0.34380339        1 0.74697844          0       1 2.132945149 #> 24 59   2 0.05537888        0 0.05537888          1       0 5.442366586 #> 25 61   2 0.37204864        0 0.37204864          1       0 5.125696822 #> 26 62   2 0.05870165        1 0.05870165          0       1 5.439043818 #> 27 65   2 0.49377546        1 0.49377546          0       1 4.180423580 #> 28 68   2 0.12736172        1 0.12736172          0       1 3.157080468 #> 29 76   2 0.09439142        0 0.09439142          1       0 5.403354042 #> 30 79   2 0.03248963        1 0.03248963          0       1 0.871058516 #> 31 82   2 0.19592203        1 0.19592203          0       1 0.017242287 #> 32 83   2 0.06006929        1 1.21931632          0       1 3.657871913 #> 33 86   2 0.11559171        1 0.11559171          0       1 3.960323525 #> 34 88   2 0.09813191        1 1.79531539          0       1 0.935697695 #> 35 89   2 0.51809902        1 0.51809902          0       1 1.062610177 #>    OStimeCal PFStimeCal #> 1  4.8874357  4.8874357 #> 2  5.1092051  3.2521749 #> 3  0.5012809  0.5012809 #> 4  0.6479031  0.6479031 #> 5  5.4977455  5.4977455 #> 6  5.3414752  5.3183034 #> 7  1.6395909  1.6395909 #> 8  2.2827753  2.2827753 #> 9  4.4692312  4.4692312 #> 10 1.4013272  1.4013272 #> 11 1.9905144  1.9905144 #> 12 4.3462819  4.3462819 #> 13 3.4813115  3.4813115 #> 14 4.6009555  4.6009555 #> 15 2.9315246  2.1115719 #> 16 4.2509658  4.2509658 #> 17 4.6979965  4.6979965 #> 18 4.3600661  4.3600661 #> 19 1.6194460  1.6194460 #> 20 4.9103201  4.9103201 #> 21 3.5136241  3.5136241 #> 22 5.4977455  5.4977455 #> 23 2.8799236  2.4767485 #> 24 5.4977455  5.4977455 #> 25 5.4977455  5.4977455 #> 26 5.4977455  5.4977455 #> 27 4.6741990  4.6741990 #> 28 3.2844422  3.2844422 #> 29 5.4977455  5.4977455 #> 30 0.9035481  0.9035481 #> 31 0.2131643  0.2131643 #> 32 4.8771882  3.7179412 #> 33 4.0759152  4.0759152 #> 34 2.7310131  1.0338296 #> 35 1.5807092  1.5807092"},{"path":[]},{"path":"https://insightsengineering.github.io/simIDM/articles/trialplanning.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"simIDM: Power and Type I Error Calculations","text":"vignette demonstrates use simIDM trial design planning simple example. show estimate type errors statistical power simulations optimize study design, details can found Erdmann, Beyersmann, Rufibach (2023). Jointly modeling endpoints PFS OS illness-death model two major advantages: - properly account correlation PFS OS, - assumption proportional hazards required. OS defined time reach absorbing state death, PFS defined time reach absorbing state death intermediate state progression, whichever occurs first. Figure 1 shows multistate model corresponding transition hazards. vignette, show estimate type errors statistical power simulations give idea can used plan complex study trials. Figure 1 - Multistate model indermediate state progession absorbing state death","code":"#> Warning in plot.Hist(idHist, stateLabels = stateLabels, box1.row = 2, box1.column = 1, : The dimension of the boxes may depend on the current graphical device #> in the sense that the layout and centering of text may change when you resize the graphical device and call the same plot."},{"path":"https://insightsengineering.github.io/simIDM/articles/trialplanning.html","id":"scenario---pfs-and-os-as-co-primary-endpoints","dir":"Articles","previous_headings":"","what":"Scenario - PFS and OS as Co-primary Endpoints","title":"simIDM: Power and Type I Error Calculations","text":"consider following study design: PFS OS co-primary endpoints one final analysis , .e. successful trial endpoints need significant. Treatment vs. control group, 1:1 randomization ratio Global significance level 5 % standard log-rank test used assess null hypothesis equal survival functions groups PFS OS, respectively. Statistical power detect difference groups 80 % endpoint 5 % drop-within 12 time units Accrual 100 patients per time unit Using multistate model approach implies trial planning based assumptions three transition hazards arm, .e. six hazards total. example scenario, assume six transition hazards constant small effect treatment hazards initial state death. Transition hazards tuned median time PFS event 0.87 time units control arm 1.2 time units treatment arm. Median time OS event 1.76 time units control group 2.1 time units treatment group. Figure 2 shows transition hazards, survival functions, hazard functions hazard ratios endpoints. transition hazards specified follows: package provides functions return values PFS OS survival functions given transition hazards (Constant, Weibull Piecewise Constant) pre-specified time points. also functions PFS survival functions available: PFS, hazard ratio \\(H_0\\) known specification: OS, ratio hazard functions necessarily constant. averaged HR can calculated using avgHRExpOS:","code":"library(simIDM) transitionTrt <- exponential_transition(h01 = 0.3, h02 = 0.28, h12 = 0.5) transitionPl <- exponential_transition(h01 = 0.5, h02 = 0.3, h12 = 0.6)  transitionList <- list(transitionPl, transitionTrt) timepoints <- c(0, 0.1, 0.3, 0.7, 1, 5) # OS Survival function for Constant transition hazards: ExpSurvOS(timepoints, h01 = 0.2, h02 = 0.4, h12 = 0.1) #> [1] 1.0000000 0.9610787 0.8893403 0.7671856 0.6912219 0.2724845 # OS Survival function for Weibull transition hazards: WeibSurvOS(timepoints, h01 = 0.2, h02 = 0.5, h12 = 2.1, p01 = 1.2, p02 = 0.9, p12 = 1) #> [1] 1.00000000 0.93822237 0.83706585 0.66353708 0.55296799 0.03684786 # OS Survival function for Piecewise Constant transition hazards: PWCsurvOS(timepoints,   h01 = c(0.3, 0.5), h02 = c(0.5, 0.8), h12 = c(0.7, 1),   pw01 = c(0, 4), pw02 = c(0, 8), pw12 = c(0, 3) ) #> [1] 1.0000000 0.9509488 0.8584970 0.6954611 0.5910980 0.0394595 timepoints <- c(0, 0.1, 0.3, 0.7, 1, 5) # PFS Survival function for Constant transition hazards: ExpSurvPFS(timepoints, h01 = 0.2, h02 = 0.4) #> [1] 1.00000000 0.94176453 0.83527021 0.65704682 0.54881164 0.04978707 # PFS Survival function for Weibull transition hazards: WeibSurvPFS(timepoints, h01 = 0.2, h02 = 0.5, p01 = 1.2, p02 = 0.9) #> [1] 1.00000000 0.92721907 0.80545180 0.61074857 0.49658530 0.02995439 # PFS Survival function for Piecewise Constant transition hazards: PWCsurvPFS(timepoints,   h01 = c(0.3, 0.5), h02 = c(0.5, 0.8),   pw01 = c(0, 4), pw02 = c(0, 8) ) #> [1] 1.00000000 0.92311635 0.78662786 0.57120906 0.44932896 0.01499558 hTrtPFS <- sum(unlist(transitionTrt$hazards[1:2])) hPlPFS <- sum(unlist(transitionPl$hazards[1:2])) hRatioPFS <- hTrtPFS / hPlPFS hRatioPFS #> [1] 0.725 hRatioOS <- avgHRExpOS(transitionByArm = transitionList, alpha = 0.5, upper = 1000) hRatioOS #> [1] 0.8072368"},{"path":"https://insightsengineering.github.io/simIDM/articles/trialplanning.html","id":"type-i-error---simulation-under-h_0","dir":"Articles","previous_headings":"","what":"Type I Error - Simulation Under \\(H_0\\)","title":"simIDM: Power and Type I Error Calculations","text":"type error can estimated empirically simulating clinical trials \\(H_0\\). achieve , set transition hazards treatment group match control group. , use getClinicalTrials() generate large number simulated trials. use 100 iterations . applications, achieve satisfactory precision estimates type error, higher number (e.g. 10,000) recommended. Using simulation, can now identify critical log-rank test values PFS OS maintain 5% global significance level. Initially, allocate critical values two-sided log-rank test 4% significance level OS endpoint 1% PFS endpoint, effectively splitting global significance level. Bonferroni correction widely used trials co-primary endpoints. Schoenfeld approximation, preliminary sample sizes can computed get idea many events needed achieve 80 % power: Using critical values required number events PFS OS, can now determine global type error empirically counting number trials simulated \\(H_0\\) significant log-rank tests. empirical type error endpoint calculated proportion trials significant log-rank tests, global Type error proportion trials least one PFS OS significant log-rank test. can done using empSignificant: example, global type error rate 3%.","code":"transitionListNull <- list(transitionPl, transitionPl) nRep <- 100 simNull <- getClinicalTrials(   nRep = nRep, nPat = c(800, 800), seed = 1238, datType = \"1rowPatient\",   transitionByArm = transitionListNull,   dropout = list(rate = 0.05, time = 12), accrual = list(param = \"intensity\", value = 100) ) #> Simulating 100 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% alphaOS <- 0.04 alphaPFS <- 0.01 criticalOS <- abs(qnorm(alphaOS / 2)) criticalPFS <- abs(qnorm(alphaPFS / 2)) library(rpact) # Number of PFS events required for 80 % power via Schoenfeld: schoenfeldPFS <- getSampleSizeSurvival(   lambda2 = hPlPFS, hazardRatio = hRatioPFS,   accrualTime = 0, accrualIntensity = 500,   maxNumberOfSubjects = 1000, sided = 1,   alpha = alphaPFS / 2, beta = 0.2 ) eventNumPFS <- ceiling(schoenfeldPFS$eventsFixed) eventNumPFS #> [1] 452  # Number of OS events required for 80 % power via Schoenfeld: schoenfeldOS <- getSampleSizeSurvival(   lambda2 = hPlPFS, hazardRatio = hRatioOS,   accrualTime = 0, accrualIntensity = 500,   maxNumberOfSubjects = 1000, sided = 1,   alpha = alphaOS / 2, beta = 0.2 ) eventNumOS <- ceiling(schoenfeldOS$eventsFixed) eventNumOS #> [1] 732 empSignificant(   simTrials = simNull,   criticalPFS = criticalPFS,   criticalOS = criticalOS,   eventNumPFS = eventNumPFS,   eventNumOS = eventNumOS ) #> $significantPFS #> [1] 0 #>  #> $significantOS #> [1] 0.03 #>  #> $significantAtLeastOne #> [1] 0.03 #>  #> $significantBoth #> [1] 0"},{"path":"https://insightsengineering.github.io/simIDM/articles/trialplanning.html","id":"sample-size-and-power-calculation---simulation-under-h_1","dir":"Articles","previous_headings":"","what":"Sample size and power calculation - simulation under \\(H_1\\)","title":"simIDM: Power and Type I Error Calculations","text":"Next, simulate large number trials \\(H_1\\) compute empirical power: empirical power endpoint proportion simulated trials significant log-rank tests \\(H_1\\). multistate model approach allows us easily estimate interesting metrics, joint power, .e. probability endpoints trial significant, endpoint analyzed planned time-point. example, endpoint OS, number events increased obtain power 80 %. Similarly, can reduce number events simulation shows trial design appears overpowered. also possible derive median time certain number events expected occur many events second endpoint occurred time average.","code":"simH1 <- getClinicalTrials(   nRep = nRep, nPat = c(800, 800), seed = 1238, datType = \"1rowPatient\",   transitionByArm = transitionList,   dropout = list(rate = 0.05, time = 12), accrual = list(param = \"intensity\", value = 100) ) #> Simulating 100 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% empSignificant(   simTrials = simH1,   criticalPFS = criticalPFS,   criticalOS = criticalOS,   eventNumPFS = eventNumPFS,   eventNumOS = eventNumOS ) #> $significantPFS #> [1] 0.83 #>  #> $significantOS #> [1] 0.75 #>  #> $significantAtLeastOne #> [1] 0.9 #>  #> $significantBoth #> [1] 0.68 # median time point for 329 PFS events to have occurred: timePointsPFS <- lapply(simH1, getTimePoint,   eventNum = 329, typeEvent = \"PFS\",   byArm = FALSE ) median(unlist(timePointsPFS)) #> [1] 2.912601  # median time point for 684 OS events to have occurred: timePointsOS <- lapply(simH1, getTimePoint,   eventNum = 684, typeEvent = \"OS\",   byArm = FALSE ) median(unlist(timePointsOS)) #> [1] 5.804041  # mean number of PFS events at time of OS analysis eventsPFS <- lapply(   seq_along(timePointsPFS),   function(t) {     return(sum(simH1[[t]]$OSevent[(simH1[[t]]$OStime + simH1[[t]]$recruitTime)     <= timePointsPFS[[t]]]))   } ) mean(unlist(eventsPFS)) #> [1] 219.31  # mean number of OS events at time of PFS analysis eventsOS <- lapply(   seq_along(timePointsOS),   function(t) {     return(sum(simH1[[t]]$PFSevent[(simH1[[t]]$PFStime + simH1[[t]]$recruitTime)     <= timePointsOS[[t]]]))   } ) mean(unlist(eventsOS)) #> [1] 864.08"},{"path":[]},{"path":"https://insightsengineering.github.io/simIDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexandra Erdmann. Author, maintainer. Kaspar Rufibach. Author. Holger Loewe. Author. Daniel Sabanes Bove. Author. F. Hoffmann-La Roche AG. Copyright holder, funder. University Ulm. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/simIDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Erdmann , Rufibach K, Loewe H, Sabanes Bove D (2023). simIDM: Simulating Oncology Trials using Illness-Death Model. R package version 0.0.5.9019, https://github.com/insightsengineering/simIDM/.","code":"@Manual{,   title = {simIDM: Simulating Oncology Trials using an Illness-Death Model},   author = {Alexandra Erdmann and Kaspar Rufibach and Holger Loewe and Daniel {Sabanes Bove}},   year = {2023},   note = {R package version 0.0.5.9019},   url = {https://github.com/insightsengineering/simIDM/}, }"},{"path":"https://insightsengineering.github.io/simIDM/index.html","id":"simidm","dir":"","previous_headings":"","what":"Simulating Oncology Trials using an Illness-Death Model","title":"Simulating Oncology Trials using an Illness-Death Model","text":"Survival multistate models powerful flexible tool modeling analyzing complex time--event data. three-state illness-death model can used jointly model oncology endpoints progression-free survival (PFS) overall survival (OS). Jointly modeling endpoints PFS OS illness-death model major advantage adequately accounting correlation two endpoints eliminating need strong assumption proportional hazards. package provides tools simulate large number clinical trials endpoints OS PFS based illness-death model, can used trail planning, example. simulation set-allows random event-driven censoring, arbitrary number treatment arms, staggered study entry drop-. Exponentially, Weibull piecewise exponentially distributed survival times can generated. Scope: Simulation illness-death model constant, Weibull piecewise constant transition hazards. Conversion transition times PFS OS survival times. Main Features: Exponentially, Weibull piecewise exponentially distributed survival times. Random censoring event-driven censoring pre-specified number PFS OS events. Arbitrary number treatment arms flexible randomization ratio. Staggered study entry. Derivation PFS OS survival functions transition hazards.","code":""},{"path":"https://insightsengineering.github.io/simIDM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulating Oncology Trials using an Illness-Death Model","text":"GitHub can install current development version GitHub :","code":"if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"insightsengineering/simIDM\")"},{"path":"https://insightsengineering.github.io/simIDM/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Simulating Oncology Trials using an Illness-Death Model","text":"See also quickstart vignette get started trying example: get output list nRep elements, containing data set single simulated trial.","code":"library(simIDM) transitionGroup1 <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) transitionGroup2 <- exponential_transition(h01 = 1, h02 = 1.3, h12 = 1.7)  simStudies <- getClinicalTrials(   nRep = 100, nPat = c(50, 50), seed = 1234, datType = \"1rowPatient\",   transitionByArm = list(transitionGroup1, transitionGroup2), dropout = list(rate = 0.1, time = 12),   accrual = list(param = \"intensity\", value = 12) ) head(simStudies[[1]]) #>   id trt    PFStime CensoredPFS PFSevent    OStime CensoredOS OSevent #> 1  1   1 0.08087899           0        1 2.0330026          0       1 #> 2  2   1 0.84758881           0        1 0.8475888          0       1 #> 3  3   1 0.18276912           0        1 0.1968048          0       1 #> 4  4   1 0.13789870           0        1 1.2899802          0       1 #> 5  5   1 0.06458797           0        1 0.6901351          0       1 #> 6  6   1 0.83894555           0        1 1.0709457          0       1 #>   recruitTime OStimeCal PFStimeCal #> 1   0.8516769  2.884679  0.9325558 #> 2   4.1068045  4.954393  4.9543933 #> 3   2.3596282  2.556433  2.5423973 #> 4   1.1682298  2.458210  1.3061285 #> 5   0.7710655  1.461201  0.8356535 #> 6   3.1585892  4.229535  3.9975347"},{"path":"https://insightsengineering.github.io/simIDM/index.html","id":"citing-simidm","dir":"","previous_headings":"","what":"Citing simIDM","title":"Simulating Oncology Trials using an Illness-Death Model","text":"cite simIDM please see .","code":""},{"path":"https://insightsengineering.github.io/simIDM/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpHazOS.html","id":null,"dir":"Reference","previous_headings":"","what":"OS Hazard Function from Constant Transition Hazards — ExpHazOS","title":"OS Hazard Function from Constant Transition Hazards — ExpHazOS","text":"OS Hazard Function Constant Transition Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpHazOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OS Hazard Function from Constant Transition Hazards — ExpHazOS","text":"","code":"ExpHazOS(t, h01, h02, h12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpHazOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OS Hazard Function from Constant Transition Hazards — ExpHazOS","text":"t (numeric) study time-points. h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition. h12 (positive number) transition hazard 1 2 transition.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpHazOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OS Hazard Function from Constant Transition Hazards — ExpHazOS","text":"returns value OS hazard function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpHazOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OS Hazard Function from Constant Transition Hazards — ExpHazOS","text":"","code":"ExpHazOS(c(1:5), 0.2, 1.1, 0.8) #> [1] 1.0381919 0.9777975 0.9253826 0.8843734 0.8548146"},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpQuantOS.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile function for OS survival function induced by an illness-death model — ExpQuantOS","title":"Quantile function for OS survival function induced by an illness-death model — ExpQuantOS","text":"Quantile function OS survival function induced illness-death model","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpQuantOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile function for OS survival function induced by an illness-death model — ExpQuantOS","text":"","code":"ExpQuantOS(q = 1/2, h01, h02, h12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpQuantOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile function for OS survival function induced by an illness-death model — ExpQuantOS","text":"q (numeric) quantile(s) compute event time (q = 1 / 2 corresponds median). h01 (numeric vector) constant transition hazards 0 1 transition. h02 (numeric vector) constant transition hazards 0 2 transition. h12 (numeric vector) constant transition hazards 1 2 transition.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpQuantOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile function for OS survival function induced by an illness-death model — ExpQuantOS","text":"returns time(s) t OS survival function t equals q.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpQuantOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile function for OS survival function induced by an illness-death model — ExpQuantOS","text":"","code":"ExpQuantOS(1 / 2, 0.2, 0.5, 2.1) #> [1] 1.144539"},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvOS.html","id":null,"dir":"Reference","previous_headings":"","what":"OS Survival Function from Constant Transition Hazards — ExpSurvOS","title":"OS Survival Function from Constant Transition Hazards — ExpSurvOS","text":"OS Survival Function Constant Transition Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OS Survival Function from Constant Transition Hazards — ExpSurvOS","text":"","code":"ExpSurvOS(t, h01, h02, h12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OS Survival Function from Constant Transition Hazards — ExpSurvOS","text":"t (numeric)  study time-points. h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition. h12 (positive number) transition hazard 1 2 transition.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OS Survival Function from Constant Transition Hazards — ExpSurvOS","text":"returns value OS survival function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OS Survival Function from Constant Transition Hazards — ExpSurvOS","text":"","code":"ExpSurvOS(c(1:5), 0.2, 0.4, 0.1) #> [1] 0.6912219 0.5082088 0.3955066 0.3225588 0.2724845"},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvPFS.html","id":null,"dir":"Reference","previous_headings":"","what":"PFS Survival Function from Constant Transition Hazards — ExpSurvPFS","title":"PFS Survival Function from Constant Transition Hazards — ExpSurvPFS","text":"PFS Survival Function Constant Transition Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvPFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PFS Survival Function from Constant Transition Hazards — ExpSurvPFS","text":"","code":"ExpSurvPFS(t, h01, h02)"},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvPFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PFS Survival Function from Constant Transition Hazards — ExpSurvPFS","text":"t (numeric)  study time-points. h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvPFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PFS Survival Function from Constant Transition Hazards — ExpSurvPFS","text":"returns value PFS survival function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/ExpSurvPFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PFS Survival Function from Constant Transition Hazards — ExpSurvPFS","text":"","code":"ExpSurvPFS(c(1:5), 0.2, 0.4) #> [1] 0.54881164 0.30119421 0.16529889 0.09071795 0.04978707"},{"path":"https://insightsengineering.github.io/simIDM/reference/PCWInversionMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Piecewise Exponentially Distributed Event Time — PCWInversionMethod","title":"Single Piecewise Exponentially Distributed Event Time — PCWInversionMethod","text":"returns event time distribution resulting piece-wise constant hazards using inversion method.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PCWInversionMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Piecewise Exponentially Distributed Event Time — PCWInversionMethod","text":"","code":"PCWInversionMethod(haz, pw, LogU)"},{"path":"https://insightsengineering.github.io/simIDM/reference/PCWInversionMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Piecewise Exponentially Distributed Event Time — PCWInversionMethod","text":"haz (numeric) piecewise constant hazard. pw (numeric) time intervals piecewise constant hazard. LogU (numeric) transformed uniformly distributed random variables (log(1-U)).","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PCWInversionMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Piecewise Exponentially Distributed Event Time — PCWInversionMethod","text":"returns one single event time.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PCWInversionMethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single Piecewise Exponentially Distributed Event Time — PCWInversionMethod","text":"","code":"PCWInversionMethod(haz = c(1.1, 0.5, 0.4), pw = c(0, 7, 10), LogU = log(1 - runif(1))) #> [1] 1.585709"},{"path":"https://insightsengineering.github.io/simIDM/reference/PFSOSInteg.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for survPFSOS() — PFSOSInteg","title":"Helper Function for survPFSOS() — PFSOSInteg","text":"Helper Function survPFSOS()","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PFSOSInteg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for survPFSOS() — PFSOSInteg","text":"","code":"PFSOSInteg(u, t, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/PFSOSInteg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for survPFSOS() — PFSOSInteg","text":"u (numeric) variable integration. t (numeric) time value PFS*OS survival function computed. transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PFSOSInteg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for survPFSOS() — PFSOSInteg","text":"Numeric result integrand used calculate PFS*OS survival function.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PFSOSInteg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function for survPFSOS() — PFSOSInteg","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) PFSOSInteg(1, 2, transition) #> [1] 0.01628227"},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvOS.html","id":null,"dir":"Reference","previous_headings":"","what":"OS Survival Function from Piecewise Constant Hazards — PWCsurvOS","title":"OS Survival Function from Piecewise Constant Hazards — PWCsurvOS","text":"OS Survival Function Piecewise Constant Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OS Survival Function from Piecewise Constant Hazards — PWCsurvOS","text":"","code":"PWCsurvOS(t, h01, h02, h12, pw01, pw02, pw12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OS Survival Function from Piecewise Constant Hazards — PWCsurvOS","text":"t (numeric) study time-points. h01 (numeric vector) constant transition hazards 0 1 transition. h02 (numeric vector) constant transition hazards 0 2 transition. h12 (numeric vector) constant transition hazards 1 2 transition. pw01 (numeric vector) time intervals piecewise constant hazards h01. pw02 (numeric vector) time intervals piecewise constant hazards h02. pw12 (numeric vector) time intervals piecewise constant hazards h12.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OS Survival Function from Piecewise Constant Hazards — PWCsurvOS","text":"returns value OS survival function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OS Survival Function from Piecewise Constant Hazards — PWCsurvOS","text":"","code":"PWCsurvOS(1:5, c(0.3, 0.5), c(0.5, 0.8), c(0.7, 1), c(0, 4), c(0, 8), c(0, 3)) #> [1] 0.5910980 0.3359979 0.1859334 0.0868734 0.0394595"},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvPFS.html","id":null,"dir":"Reference","previous_headings":"","what":"PFS Survival Function from Piecewise Constant Hazards — PWCsurvPFS","title":"PFS Survival Function from Piecewise Constant Hazards — PWCsurvPFS","text":"PFS Survival Function Piecewise Constant Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvPFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PFS Survival Function from Piecewise Constant Hazards — PWCsurvPFS","text":"","code":"PWCsurvPFS(t, h01, h02, pw01, pw02)"},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvPFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PFS Survival Function from Piecewise Constant Hazards — PWCsurvPFS","text":"t (numeric) study time-points. h01 (numeric vector) constant transition hazards 0 1 transition. h02 (numeric vector) constant transition hazards 0 2 transition. pw01 (numeric vector) time intervals piecewise constant hazards h01. pw02 (numeric vector) time intervals piecewise constant hazards h02.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvPFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PFS Survival Function from Piecewise Constant Hazards — PWCsurvPFS","text":"returns value PFS survival function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PWCsurvPFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PFS Survival Function from Piecewise Constant Hazards — PWCsurvPFS","text":"","code":"PWCsurvPFS(1:5, c(0.3, 0.5), c(0.5, 0.8), c(0, 4), c(0, 8)) #> [1] 0.44932896 0.20189652 0.09071795 0.04076220 0.01499558"},{"path":"https://insightsengineering.github.io/simIDM/reference/PwcOSInt.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function of PWCsurvOS() — PwcOSInt","title":"Helper Function of PWCsurvOS() — PwcOSInt","text":"Helper Function PWCsurvOS()","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PwcOSInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function of PWCsurvOS() — PwcOSInt","text":"","code":"PwcOSInt(x, t, h01, h02, h12, pw01, pw02, pw12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/PwcOSInt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function of PWCsurvOS() — PwcOSInt","text":"x (numeric)  variable integration. t (numeric) study time-points. h01 (numeric vector) constant transition hazards 0 1 transition. h02 (numeric vector) constant transition hazards 0 2 transition. h12 (numeric vector) constant transition hazards 1 2 transition. pw01 (numeric vector) time intervals piecewise constant hazards h01. pw02 (numeric vector) time intervals piecewise constant hazards h02. pw12 (numeric vector) time intervals piecewise constant hazards h12.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PwcOSInt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function of PWCsurvOS() — PwcOSInt","text":"Numeric results integrand used calculate OS survival function piecewise constant transition hazards, see  PWCsurvOS.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/PwcOSInt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function of PWCsurvOS() — PwcOSInt","text":"","code":"PwcOSInt(1:5, 6, c(0.3, 0.5), c(0.5, 0.8), c(0.7, 1), c(0, 4), c(0, 8), c(0, 3)) #> [1] 0.001654969 0.001497478 0.001354974 0.002758282 0.002758282"},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibOSInteg.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for WeibSurvOS() — WeibOSInteg","title":"Helper Function for WeibSurvOS() — WeibOSInteg","text":"Helper Function WeibSurvOS()","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibOSInteg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for WeibSurvOS() — WeibOSInteg","text":"","code":"WeibOSInteg(x, t, h01, h02, h12, p01, p02, p12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibOSInteg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for WeibSurvOS() — WeibOSInteg","text":"x (numeric)  variable integration. t (numeric)  study time-points. h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition. h12 (positive number) transition hazard 1 2 transition. p01 (positive number) rate parameter Weibull distribution h01. p02 (positive number) rate parameter Weibull distribution h02. p12 (positive number) rate parameter Weibull distribution h12.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibOSInteg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for WeibSurvOS() — WeibOSInteg","text":"Numeric results integrand used calculate OS survival function Weibull transition hazards, see  WeibSurvOS().","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibOSInteg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function for WeibSurvOS() — WeibOSInteg","text":"","code":"WeibOSInteg(1:5, 2:6, 0.2, 0.5, 2.1, 1.2, 0.9, 1) #> [1] 0.060810063 0.034948389 0.018842246 0.009858231 0.005060996"},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvOS.html","id":null,"dir":"Reference","previous_headings":"","what":"OS Survival Function from Weibull Transition Hazards — WeibSurvOS","title":"OS Survival Function from Weibull Transition Hazards — WeibSurvOS","text":"OS Survival Function Weibull Transition Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OS Survival Function from Weibull Transition Hazards — WeibSurvOS","text":"","code":"WeibSurvOS(t, h01, h02, h12, p01, p02, p12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OS Survival Function from Weibull Transition Hazards — WeibSurvOS","text":"t (numeric)  study time-points. h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition. h12 (positive number) transition hazard 1 2 transition. p01 (positive number) rate parameter Weibull distribution h01. p02 (positive number) rate parameter Weibull distribution h02. p12 (positive number) rate parameter Weibull distribution h12.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OS Survival Function from Weibull Transition Hazards — WeibSurvOS","text":"returns value OS survival function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OS Survival Function from Weibull Transition Hazards — WeibSurvOS","text":"","code":"WeibSurvOS(c(1:5), 0.2, 0.5, 2.1, 1.2, 0.9, 1) #> [1] 0.55296799 0.29049137 0.14798085 0.07421549 0.03684786"},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvPFS.html","id":null,"dir":"Reference","previous_headings":"","what":"PFS Survival Function from Weibull Transition Hazards — WeibSurvPFS","title":"PFS Survival Function from Weibull Transition Hazards — WeibSurvPFS","text":"PFS Survival Function Weibull Transition Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvPFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PFS Survival Function from Weibull Transition Hazards — WeibSurvPFS","text":"","code":"WeibSurvPFS(t, h01, h02, p01, p02)"},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvPFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PFS Survival Function from Weibull Transition Hazards — WeibSurvPFS","text":"t (numeric)  study time-points. h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition. p01 (positive number) rate parameter Weibull distribution h01. p02 (positive number) rate parameter Weibull distribution h02.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvPFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PFS Survival Function from Weibull Transition Hazards — WeibSurvPFS","text":"returns value PFS survival function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/WeibSurvPFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PFS Survival Function from Weibull Transition Hazards — WeibSurvPFS","text":"","code":"WeibSurvPFS(c(1:5), 0.2, 0.5, 1.2, 0.9) #> [1] 0.49658530 0.24845033 0.12351703 0.06101061 0.02995439"},{"path":"https://insightsengineering.github.io/simIDM/reference/addStaggeredEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Staggered Study Entry — addStaggeredEntry","title":"Staggered Study Entry — addStaggeredEntry","text":"function adds staggered study entry times simulated data set illness-death model structure.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/addStaggeredEntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Staggered Study Entry — addStaggeredEntry","text":"","code":"addStaggeredEntry(simData, N, accrualParam, accrualValue)"},{"path":"https://insightsengineering.github.io/simIDM/reference/addStaggeredEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Staggered Study Entry — addStaggeredEntry","text":"simData (data.frame) simulated data frame containing entry exit times individual study time scale. See getSimulatedData() details. N (int) number patients. accrualParam (string) possible values 'time' 'intensity'. accrualValue (number) specifies accrual intensity. accrualParam equal time, describes length accrual period. accrualParam equal intensity, describes number patients recruited per time unit.  accrualValue equal 0, patients start calendar time 0 initial state.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/addStaggeredEntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Staggered Study Entry — addStaggeredEntry","text":"returns data set containing single simulated study containing accrual times, .e. staggered study entry. helper function getSimulatedData().","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/addStaggeredEntry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Staggered Study Entry — addStaggeredEntry","text":"","code":"simData <- data.frame(   id = c(1, 1, 2, 3), from = c(0, 1, 0, 0), to = c(1, 2, \"cens\", 2),   entry = c(0, 3, 0, 0),   exit = c(3, 5.3, 5.6, 7.2), censTime = c(6.8, 6.8, 5.6, 9.4) ) addStaggeredEntry(simData, 3, accrualParam = \"time\", accrualValue = 5) #>   id from   to entry exit entryAct   exitAct   censAct #> 1  1    0    1     0  3.0 2.078467  5.078467  8.878467 #> 2  1    1    2     3  5.3 5.078467  7.378467  8.878467 #> 3  2    0 cens     0  5.6 2.324180  7.924180  7.924180 #> 4  3    0    2     0  7.2 3.499778 10.699778 12.899778"},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertion for vector describing intervals — assert_intervals","title":"Assertion for vector describing intervals — assert_intervals","text":"define intervals vector always start 0, contain unique ordered time points.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertion for vector describing intervals — assert_intervals","text":"","code":"assert_intervals(x, y)"},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertion for vector describing intervals — assert_intervals","text":"x check. y (count) required length y.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assertion for vector describing intervals — assert_intervals","text":"Raises error x intervals vector starting 0.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assertion for vector describing intervals — assert_intervals","text":"","code":"assert_intervals(c(0, 5, 7), 3)"},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_positive_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertion for Positive Number — assert_positive_number","title":"Assertion for Positive Number — assert_positive_number","text":"Assertion Positive Number","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_positive_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertion for Positive Number — assert_positive_number","text":"","code":"assert_positive_number(x, zero_ok = FALSE)"},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_positive_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertion for Positive Number — assert_positive_number","text":"x check. zero_ok (flag) whether x can zero .","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_positive_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assertion for Positive Number — assert_positive_number","text":"Raises error x single positive (non-negative) number.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/assert_positive_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assertion for Positive Number — assert_positive_number","text":"","code":"assert_positive_number(3.2) assert_positive_number(0, zero_ok = TRUE)"},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRExpOS.html","id":null,"dir":"Reference","previous_headings":"","what":"Average OS Hazard Ratio from Constant Transition Hazards — avgHRExpOS","title":"Average OS Hazard Ratio from Constant Transition Hazards — avgHRExpOS","text":"Average OS Hazard Ratio Constant Transition Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRExpOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average OS Hazard Ratio from Constant Transition Hazards — avgHRExpOS","text":"","code":"avgHRExpOS(transitionByArm, alpha = 0.5, upper = Inf)"},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRExpOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average OS Hazard Ratio from Constant Transition Hazards — avgHRExpOS","text":"transitionByArm (list) transition parameters treatment group. See exponential_transition(), piecewise_exponential() weibull_transition() details. alpha (number) assigns weights time points, values higher 0.5 assign greater weight earlier times values lower 0.5 assign greater weight later times. upper (number) upper (time) limit integration.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRExpOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average OS Hazard Ratio from Constant Transition Hazards — avgHRExpOS","text":"returns value average hazard ratio.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRExpOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average OS Hazard Ratio from Constant Transition Hazards — avgHRExpOS","text":"","code":"transitionTrt <- exponential_transition(h01 = 0.18, h02 = 0.06, h12 = 0.17) transitionCtl <- exponential_transition(h01 = 0.23, h02 = 0.07, h12 = 0.19) transitionList <- list(transitionCtl, transitionTrt) avgHRExpOS(transitionByArm = transitionList, alpha = 0.5, upper = 100) #> [1] 0.8319853"},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRIntegExpOS.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for avgHRExpOS() — avgHRIntegExpOS","title":"Helper Function for avgHRExpOS() — avgHRIntegExpOS","text":"integrand form OS hazard function intensities h01, h02, h12 time point t multiplied weighted product two OS Survival functions t (one intensities h0 one h1).","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRIntegExpOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for avgHRExpOS() — avgHRIntegExpOS","text":"","code":"avgHRIntegExpOS(x, h01, h02, h12, h0, h1, alpha)"},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRIntegExpOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for avgHRExpOS() — avgHRIntegExpOS","text":"x (numeric) variable integration. h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition. h12 (positive number) transition hazard 1 2 transition. h0 (list) transition parameters first treatment group. h1 (list) transition parameters second treatment group. alpha (number) weight parameter, see avgHRExpOS().","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRIntegExpOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for avgHRExpOS() — avgHRIntegExpOS","text":"returns value integrand used calculate average hazard ratio constant transition hazards, see avgHRExpOS().","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/avgHRIntegExpOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function for avgHRExpOS() — avgHRIntegExpOS","text":"","code":"h0 <- list(h01 = 0.18, h02 = 0.06, h12 = 0.17) h1 <- list(h01 = 0.23, h02 = 0.07, h12 = 0.19) avgHRIntegExpOS(x = 5, h01 = 0.2, h02 = 0.5, h12 = 0.7, h0 = h0, h1 = h1, alpha = 0.5) #> [1] 0.297362"},{"path":"https://insightsengineering.github.io/simIDM/reference/censoringByNumberEvents.html","id":null,"dir":"Reference","previous_headings":"","what":"Event-driven censoring. — censoringByNumberEvents","title":"Event-driven censoring. — censoringByNumberEvents","text":"function censors study pre-specified number events occurred.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/censoringByNumberEvents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event-driven censoring. — censoringByNumberEvents","text":"","code":"censoringByNumberEvents(data, eventNum, typeEvent)"},{"path":"https://insightsengineering.github.io/simIDM/reference/censoringByNumberEvents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event-driven censoring. — censoringByNumberEvents","text":"data (data.frame) illness-death data set 1rowPatient format. eventNum (int) number events. typeEvent (string) type event. Possible values PFS OS.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/censoringByNumberEvents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event-driven censoring. — censoringByNumberEvents","text":"function returns data set censored eventNum typeEvent-events occurred.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/censoringByNumberEvents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event-driven censoring. — censoringByNumberEvents","text":"","code":"transition1 <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 0.8, p02 = 0.9, p12 = 1) transition2 <- weibull_transition(h01 = 1, h02 = 1.3, h12 = 1.7, p01 = 1.1, p02 = 0.9, p12 = 1.1)  simStudy <- getOneClinicalTrial(   nPat = c(20, 20), transitionByArm = list(transition1, transition2),   dropout = list(rate = 0.3, time = 10),   accrual = list(param = \"time\", value = 7) ) simStudyWide <- getDatasetWideFormat(simStudy) censoringByNumberEvents(data = simStudyWide, eventNum = 20, typeEvent = \"PFS\") #>    id trt    PFStime PFSevent     OStime CensoredOS OSevent recruitTime #> 1   2   1 0.56100930        0 0.56100930          1       0   3.2848918 #> 2   4   1 0.46805749        1 2.79469945          0       1   0.9225171 #> 3   5   1 0.20356738        1 0.91462089          0       1   0.9202015 #> 4   7   1 0.08436624        1 0.99750902          0       1   1.4027128 #> 5   9   1 0.14056256        1 0.97034307          0       1   0.1646397 #> 6  10   1 0.04438624        0 0.04438624          1       0   3.8015148 #> 7  12   1 0.26379953        1 0.26379953          0       1   2.0622885 #> 8  13   1 0.53159990        1 0.53159990          0       1   1.2745129 #> 9  14   1 0.02896228        1 0.64071791          0       1   1.2322824 #> 10 17   1 0.08333661        1 0.08333661          0       1   1.7186381 #> 11 18   1 0.30992813        1 1.07025195          0       1   1.0612104 #> 12 19   1 0.02433824        1 0.02433824          0       1   1.7823103 #> 13 22   2 0.33329187        1 0.47563042          1       0   3.3702706 #> 14 24   2 0.18203202        1 0.18203202          0       1   1.2924673 #> 15 26   2 0.01534963        1 0.01534963          0       1   3.0610412 #> 16 27   2 0.32340700        0 0.32340700          1       0   3.5224941 #> 17 28   2 0.09898741        1 0.09898741          0       1   3.0360132 #> 18 31   2 0.32582633        1 0.32582633          0       1   1.8658590 #> 19 34   2 0.02555137        1 0.02555137          0       1   3.8203497 #> 20 36   2 0.02568132        1 0.02568132          0       1   0.1386218 #> 21 37   2 0.24297410        1 0.30065033          0       1   2.0911178 #> 22 38   2 0.88818057        1 0.93989714          0       1   1.4023315 #> 23 39   2 0.01080087        1 0.01080087          0       1   1.8568317 #>    OStimeCal PFStimeCal #> 1  3.8459011  3.8459011 #> 2  3.7172165  1.3905746 #> 3  1.8348224  1.1237689 #> 4  2.4002218  1.4870790 #> 5  1.1349828  0.3052022 #> 6  3.8459011  3.8459011 #> 7  2.3260880  2.3260880 #> 8  1.8061128  1.8061128 #> 9  1.8730003  1.2612446 #> 10 1.8019747  1.8019747 #> 11 2.1314624  1.3711386 #> 12 1.8066485  1.8066485 #> 13 3.8459011  3.7035625 #> 14 1.4744993  1.4744993 #> 15 3.0763908  3.0763908 #> 16 3.8459011  3.8459011 #> 17 3.1350006  3.1350006 #> 18 2.1916853  2.1916853 #> 19 3.8459011  3.8459011 #> 20 0.1643032  0.1643032 #> 21 2.3917681  2.3340919 #> 22 2.3422286  2.2905120 #> 23 1.8676326  1.8676326"},{"path":"https://insightsengineering.github.io/simIDM/reference/corPFSOS.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation of PFS and OS event times for data from the IDM — corPFSOS","title":"Correlation of PFS and OS event times for data from the IDM — corPFSOS","text":"Correlation PFS OS event times data IDM","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/corPFSOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation of PFS and OS event times for data from the IDM — corPFSOS","text":"","code":"corPFSOS(   data,   transition,   bootstrap = TRUE,   bootstrap_n = 100,   bootstrap_level = 0.95 )"},{"path":"https://insightsengineering.github.io/simIDM/reference/corPFSOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation of PFS and OS event times for data from the IDM — corPFSOS","text":"data (data.frame) format produced getOneClinicalTrial(). transition (TransitionParameters object) specifying assumed distribution transition hazards. Initial parameters optimization can specified . See exponential_transition() weibull_transition() details. bootstrap (flag) TRUE computes confidence interval via bootstrap. bootstrap_n (count) number bootstrap samples. bootstrap_level (proportion) confidence level confidence interval.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/corPFSOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation of PFS and OS event times for data from the IDM — corPFSOS","text":"correlation PFS OS.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/corPFSOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation of PFS and OS event times for data from the IDM — corPFSOS","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) data <- getClinicalTrials(   nRep = 10, nPat = c(50), seed = 1234, datType = \"1rowTransition\",   transitionByArm = list(transition), dropout = list(rate = 0.5, time = 12),   accrual = list(param = \"intensity\", value = 7) )[[1]] #> Simulating 10 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% corPFSOS(data, transition) #> $corPFSOS #> [1] 0.580381 #>  #> $lower #>      2.5%  #> 0.1678867  #>  #> $upper #>     97.5%  #> 0.8256186  #>"},{"path":"https://insightsengineering.github.io/simIDM/reference/corTrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation of PFS and OS event times for Different Transition Models — corTrans","title":"Correlation of PFS and OS event times for Different Transition Models — corTrans","text":"Correlation PFS OS event times Different Transition Models","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/corTrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation of PFS and OS event times for Different Transition Models — corTrans","text":"","code":"corTrans(transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/corTrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation of PFS and OS event times for Different Transition Models — corTrans","text":"transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/corTrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation of PFS and OS event times for Different Transition Models — corTrans","text":"correlation PFS OS.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/corTrans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation of PFS and OS event times for Different Transition Models — corTrans","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) corTrans(transition) #> [1] 0.580381"},{"path":"https://insightsengineering.github.io/simIDM/reference/empSignificant.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Significance for a List of Simulated Trials — empSignificant","title":"Empirical Significance for a List of Simulated Trials — empSignificant","text":"function computes four types empirical significance — PFS, OS, -least (significant least one PFS/OS), joint (significant PFS OS) — using log-rank test. Empirical significance calculated proportion significant results simulated trials, ending set number PFS/OS events occur. Critical values PFS OS test significance must specified. trials simulate equal transition hazards across groups (H0), empirical significance estimates type error; simulate differing transition hazards (H1), estimates power.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/empSignificant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Significance for a List of Simulated Trials — empSignificant","text":"","code":"empSignificant(simTrials, criticalPFS, criticalOS, eventNumPFS, eventNumOS)"},{"path":"https://insightsengineering.github.io/simIDM/reference/empSignificant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Significance for a List of Simulated Trials — empSignificant","text":"simTrials (list) simulated trial data sets, see getClinicalTrials(). criticalPFS (positive number) critical value log-rank test PFS. criticalOS (positive number) critical value log-rank test OS. eventNumPFS (integer) number PFS events required trigger PFS analysis. eventNumOS (integer) number OS events required trigger OS analysis.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/empSignificant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical Significance for a List of Simulated Trials — empSignificant","text":"returns values four measures empirical significance.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/empSignificant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical Significance for a List of Simulated Trials — empSignificant","text":"","code":"transition1 <- exponential_transition(h01 = 0.06, h02 = 0.3, h12 = 0.3) transition2 <- exponential_transition(h01 = 0.1, h02 = 0.4, h12 = 0.3) simTrials <- getClinicalTrials(   nRep = 50, nPat = c(800, 800), seed = 1234, datType = \"1rowPatient\",   transitionByArm = list(transition1, transition2), dropout = list(rate = 0.5, time = 12),   accrual = list(param = \"intensity\", value = 7) ) #> Simulating 50 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   2%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |======                                                                |   8%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  16%   |                                                                               |=============                                                         |  18%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  22%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  42%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |==================================                                    |  48%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  52%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |=========================================                             |  58%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  72%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  86%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |===================================================================== |  98%   |                                                                               |======================================================================| 100% empSignificant(   simTrials = simTrials, criticalPFS = 2.4, criticalOS = 2.2,   eventNumPFS = 300, eventNumOS = 500 ) #> $significantPFS #> [1] 0.74 #>  #> $significantOS #> [1] 0.52 #>  #> $significantAtLeastOne #> [1] 0.78 #>  #> $significantBoth #> [1] 0.48 #>"},{"path":"https://insightsengineering.github.io/simIDM/reference/estimateParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Parameters of the Multistate Model Using Clinical Trial Data — estimateParams","title":"Estimate Parameters of the Multistate Model Using Clinical Trial Data — estimateParams","text":"Estimate Parameters Multistate Model Using Clinical Trial Data","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/estimateParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Parameters of the Multistate Model Using Clinical Trial Data — estimateParams","text":"","code":"estimateParams(data, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/estimateParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Parameters of the Multistate Model Using Clinical Trial Data — estimateParams","text":"data (data.frame) format produced getOneClinicalTrial(). transition (TransitionParameters object) specifying assumed distribution transition hazards. Initial parameters optimization can specified . See exponential_transition() weibull_transition() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/estimateParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Parameters of the Multistate Model Using Clinical Trial Data — estimateParams","text":"Returns TransitionParameters object estimated parameters.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/estimateParams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Parameters of the Multistate Model Using Clinical Trial Data — estimateParams","text":"function estimates parameters transition models using clinical trial data. transition object can initialized starting values parameter estimation. uses stats::optim() optimize parameters.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/estimateParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Parameters of the Multistate Model Using Clinical Trial Data — estimateParams","text":"","code":"transition <- exponential_transition(h01 = 2, h02 = 1.4, h12 = 1.6) simData <- getOneClinicalTrial(   nPat = c(30), transitionByArm = list(transition),   dropout = list(rate = 0.3, time = 12),   accrual = list(param = \"time\", value = 1) ) # Initialize transition with desired starting values for optimization: transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) estimate <- estimateParams(simData, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/exponential_transition.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Hazards for Exponential Event Times — exponential_transition","title":"Transition Hazards for Exponential Event Times — exponential_transition","text":"creates list class TransitionParameters containing hazards, time intervals Weibull rates exponential event times illness-death model.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/exponential_transition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Hazards for Exponential Event Times — exponential_transition","text":"","code":"exponential_transition(h01 = 1, h02 = 1, h12 = 1)"},{"path":"https://insightsengineering.github.io/simIDM/reference/exponential_transition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Hazards for Exponential Event Times — exponential_transition","text":"h01 (positive number) transition hazard 0 1 transition. h02 (positive number) transition hazard 0 2 transition. h12 (positive number) transition hazard 1 2 transition.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/exponential_transition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Hazards for Exponential Event Times — exponential_transition","text":"List elements hazards, intervals, weibull_rates family (exponential).","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/exponential_transition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition Hazards for Exponential Event Times — exponential_transition","text":"","code":"exponential_transition(1, 1.6, 0.3) #> $hazards #> $hazards$h01 #> [1] 1 #>  #> $hazards$h02 #> [1] 1.6 #>  #> $hazards$h12 #> [1] 0.3 #>  #>  #> $intervals #> $intervals$pw01 #> [1] 0 #>  #> $intervals$pw02 #> [1] 0 #>  #> $intervals$pw12 #> [1] 0 #>  #>  #> $weibull_rates #> $weibull_rates$p01 #> [1] 1 #>  #> $weibull_rates$p02 #> [1] 1 #>  #> $weibull_rates$p12 #> [1] 1 #>  #>  #> $family #> [1] \"exponential\" #>  #> attr(,\"class\") #> [1] \"ExponentialTransition\" \"TransitionParameters\""},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalOSInteg.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for Computing E(OS^2) — expvalOSInteg","title":"Helper Function for Computing E(OS^2) — expvalOSInteg","text":"Helper Function Computing E(OS^2)","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalOSInteg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for Computing E(OS^2) — expvalOSInteg","text":"","code":"expvalOSInteg(x, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalOSInteg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for Computing E(OS^2) — expvalOSInteg","text":"x (numeric) variable integration. transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalOSInteg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for Computing E(OS^2) — expvalOSInteg","text":"Numeric results integrand used calculate E(OS^2).","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalOSInteg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function for Computing E(OS^2) — expvalOSInteg","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) expvalOSInteg(0.4, transition) #> [1] 0.2177423"},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalPFSInteg.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for Computing E(PFS^2) — expvalPFSInteg","title":"Helper Function for Computing E(PFS^2) — expvalPFSInteg","text":"Helper Function Computing E(PFS^2)","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalPFSInteg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for Computing E(PFS^2) — expvalPFSInteg","text":"","code":"expvalPFSInteg(x, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalPFSInteg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for Computing E(PFS^2) — expvalPFSInteg","text":"x (numeric) variable integration. transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalPFSInteg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for Computing E(PFS^2) — expvalPFSInteg","text":"Numeric results integrand used calculate E(PFS^2).","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/expvalPFSInteg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function for Computing E(PFS^2) — expvalPFSInteg","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) expvalPFSInteg(0.4, transition) #> [1] 0.1358382"},{"path":"https://insightsengineering.github.io/simIDM/reference/getCensoredData.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for censoringByNumberEvents — getCensoredData","title":"Helper function for censoringByNumberEvents — getCensoredData","text":"Helper function censoringByNumberEvents","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getCensoredData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for censoringByNumberEvents — getCensoredData","text":"","code":"getCensoredData(time, event, data)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getCensoredData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for censoringByNumberEvents — getCensoredData","text":"time (numeric)  event times. event (numeric) event indicator. data (data.frame) data frame including patient id id, recruiting time recruitTime individual censoring time censTimeInd.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getCensoredData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for censoringByNumberEvents — getCensoredData","text":"function returns data frame columns: event time, censoring indicator, event indicator event time calendar time.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getCensoredData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for censoringByNumberEvents — getCensoredData","text":"","code":"transition1 <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 0.8, p02 = 0.9, p12 = 1) transition2 <- weibull_transition(h01 = 1, h02 = 1.3, h12 = 1.7, p01 = 1.1, p02 = 0.9, p12 = 1.1)  simStudy <- getOneClinicalTrial(   nPat = c(20, 20), transitionByArm = list(transition1, transition2),   dropout = list(rate = 0.3, time = 10),   accrual = list(param = \"time\", value = 7) ) simStudyWide <- getDatasetWideFormat(simStudy) simStudyWide$censTimeInd <- 5 - simStudyWide$recruitTime NotRecruited <- simStudyWide$id[simStudyWide$censTimeInd < 0] censoredData <- simStudyWide[!(simStudyWide$id %in% NotRecruited), ] getCensoredData(time = censoredData$OStime, event = censoredData$OSevent, data = censoredData) #>           time Censored event   timeCal #> 1  0.785039045        0     1 3.6470730 #> 2  0.264152292        0     1 1.1893622 #> 3  0.114419885        0     1 0.3878959 #> 4  1.000460067        0     1 3.8449832 #> 5  0.090251060        0     1 4.1901475 #> 6  0.057681178        0     1 0.5050084 #> 7  1.864437872        0     1 4.5753707 #> 8  0.505286431        0     1 4.0252529 #> 9  0.216705922        0     1 2.0222081 #> 10 0.021787680        0     1 3.0283585 #> 11 0.269505690        0     1 3.7295752 #> 12 1.979445101        0     1 4.4032408 #> 13 0.706481098        0     1 3.6007674 #> 14 0.154665230        0     1 4.3768401 #> 15 1.513935268        0     1 3.2915008 #> 16 0.653169302        0     1 1.6780308 #> 17 0.008262510        0     1 0.9143437 #> 18 0.810799371        0     1 3.2100054 #> 19 0.549038100        0     1 4.5680621 #> 20 0.407977908        0     1 3.6237299 #> 21 0.325864568        0     1 0.9782198 #> 22 0.036779895        0     1 4.2710633 #> 23 0.000675416        0     1 2.7206341 #> 24 1.276758059        0     1 3.1704302 #> 25 0.012196997        0     1 3.5368427 #> 26 0.929896017        0     1 1.0338115 #> 27 0.051693371        0     1 1.3494330 #> 28 0.012141099        0     1 4.7478093 #> 29 0.823576155        0     1 3.1440231"},{"path":"https://insightsengineering.github.io/simIDM/reference/getClinicalTrials.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of a Large Number of Oncology Clinical Trials — getClinicalTrials","title":"Simulation of a Large Number of Oncology Clinical Trials — getClinicalTrials","text":"Simulation Large Number Oncology Clinical Trials","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getClinicalTrials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of a Large Number of Oncology Clinical Trials — getClinicalTrials","text":"","code":"getClinicalTrials(nRep, ..., seed = 1234, datType = \"1rowTransition\")"},{"path":"https://insightsengineering.github.io/simIDM/reference/getClinicalTrials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of a Large Number of Oncology Clinical Trials — getClinicalTrials","text":"nRep (int) number simulated trials. ... parameters transferred getOneClinicalTrial(), see getOneClinicalTrial() details. seed (int) random seed used simulation. datType (string) possible values 1rowTransition 1rowPatient.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getClinicalTrials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of a Large Number of Oncology Clinical Trials — getClinicalTrials","text":"function returns list nRep simulated data sets format specified datType. See getDatasetWideFormat()  getOneClinicalTrial() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getClinicalTrials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation of a Large Number of Oncology Clinical Trials — getClinicalTrials","text":"","code":"transition1 <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) transition2 <- exponential_transition(h01 = 1, h02 = 1.3, h12 = 1.7) getClinicalTrials(   nRep = 10, nPat = c(20, 20), seed = 1234, datType = \"1rowTransition\",   transitionByArm = list(transition1, transition2), dropout = list(rate = 0.5, time = 12),   accrual = list(param = \"intensity\", value = 7) ) #> Simulating 10 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #> [[1]] #>    id from   to      entry       exit   entryAct   exitAct    censAct trt #> 1   1    0    2 0.00000000 0.08322401 0.40747241 0.4906964 43.7187692   1 #> 2   2    0    1 0.00000000 0.11092520 1.55505644 1.6659816  5.8270303   1 #> 3   2    1    2 0.11092520 0.41401354 1.66598164 1.9690700  5.8270303   1 #> 4   3    0 cens 0.00000000 0.11394908 0.56049901 0.6744481  0.6744481   1 #> 5   4    0    1 0.00000000 0.60996013 2.56737283 3.1773330 32.7383865   1 #> 6   4    1    2 0.60996013 0.65535210 3.17733296 3.2227249 32.7383865   1 #> 7   5    0    1 0.00000000 0.29849750 1.11285653 1.4113540  7.8158932   1 #> 8   5    1    2 0.29849750 0.54012913 1.41135403 1.6529857  7.8158932   1 #> 9   6    0    2 0.00000000 0.38503933 0.88820223 1.2732416  2.4454416   1 #> 10  7    0    2 0.00000000 0.13841152 0.45722475 0.5956363 14.7240045   1 #> 11  8    0    2 0.00000000 0.36014181 2.56053100 2.9206728  6.0683211   1 #> 12  9    0    2 0.00000000 0.14819800 0.47541080 0.6236088 14.9838502   1 #> 13 10    0    1 0.00000000 0.25820375 2.57264170 2.8308455 15.7374700   1 #> 14 10    1    2 0.25820375 0.94827474 2.83084545 3.5209164 15.7374700   1 #> 15 11    0    2 0.00000000 0.41866506 0.38308056 0.8017456 32.9316082   1 #> 16 12    0    2 0.00000000 0.24576717 0.37604038 0.6218076 28.0083608   1 #> 17 13    0    2 0.00000000 0.10356288 0.30082144 0.4043843 29.0161494   1 #> 18 14    0    1 0.00000000 0.53708453 1.46166737 1.9987519 54.3068613   1 #> 19 14    1    2 0.53708453 2.16778248 1.99875190 3.6294499 54.3068613   1 #> 20 15    0    2 0.00000000 0.02838643 0.85771158 0.8860980 31.1660821   1 #> 21 16    0    1 0.00000000 0.13726281 0.07633399 0.2135968  0.6255771   1 #> 22 16    1    2 0.13726281 0.53631783 0.21359680 0.6126518  0.6255771   1 #> 23 17    0    2 0.00000000 0.46787743 0.88470695 1.3525844 16.0669470   1 #> 24 18    0 cens 0.00000000 0.25299805 2.12034188 2.3733399  2.3733399   1 #> 25 19    0    2 0.00000000 0.06150124 0.10130493 0.1628062 31.8705582   1 #> 26 20    0    2 0.00000000 0.25964639 1.61450318 1.8741496 10.6055161   1 #> 27 21    0    2 0.00000000 0.17049279 0.88598333 1.0564761 14.9813150   2 #> 28 22    0    2 0.00000000 0.28546700 2.12162676 2.4070938 37.0902155   2 #> 29 23    0    2 0.00000000 0.19199585 1.82546090 2.0174567 27.0357872   2 #> 30 24    0    1 0.00000000 0.42932971 2.83575996 3.2650897 20.0766849   2 #> 31 24    1    2 0.42932971 0.96937540 3.26508967 3.8051354 20.0766849   2 #> 32 25    0    2 0.00000000 0.58836837 0.36648511 0.9548535 28.5300295   2 #> 33 26    0    2 0.00000000 0.36288447 2.52354165 2.8864261 27.2107916   2 #> 34 27    0    1 0.00000000 1.71832281 2.31452397 4.0328468 14.7782358   2 #> 35 27    1    2 1.71832281 1.76487186 4.03284678 4.0793958 14.7782358   2 #> 36 28    0    2 0.00000000 0.37388717 2.34814622 2.7220334 48.9485729   2 #> 37 29    0    1 0.00000000 0.25135188 2.38486475 2.6362166  3.8466779   2 #> 38 29    1 cens 0.25135188 1.46181315 2.63621663 3.8466779  3.8466779   2 #> 39 30    0    1 0.00000000 0.11284689 2.09352063 2.2063675  5.4433953   2 #> 40 30    1    2 0.11284689 0.12605695 2.20636752 2.2195776  5.4433953   2 #> 41 31    0    1 0.00000000 0.03727395 2.80869721 2.8459712 47.7400238   2 #> 42 31    1    2 0.03727395 1.12158600 2.84597116 3.9302832 47.7400238   2 #> 43 32    0    2 0.00000000 0.82560334 1.82629881 2.6519022  4.8448472   2 #> 44 33    0 cens 0.00000000 0.11270925 1.88787038 2.0005796  2.0005796   2 #> 45 34    0    1 0.00000000 1.92908730 1.50959822 3.4386855 17.3309479   2 #> 46 34    1    2 1.92908730 2.51783752 3.43868553 4.0274357 17.3309479   2 #> 47 35    0    2 0.00000000 0.40045473 0.90712520 1.3075799 25.2441477   2 #> 48 36    0    2 0.00000000 2.90316744 2.19387277 5.0970402 26.1772667   2 #> 49 37    0    2 0.00000000 0.20476656 1.50373855 1.7085051  7.1172466   2 #> 50 38    0    2 0.00000000 0.35215896 2.09229110 2.4444501  5.4766211   2 #> 51 39    0    2 0.00000000 0.24397560 0.87904497 1.1230206  5.4405979   2 #> 52 40    0    2 0.00000000 0.37292766 1.15478072 1.5277084  7.1877786   2 #>  #> [[2]] #>    id from   to      entry        exit  entryAct   exitAct    censAct trt #> 1   1    0    2 0.00000000 0.113470713 1.0085671 1.1220379  36.005705   1 #> 2   2    0    1 0.00000000 0.121433016 2.8027380 2.9241711   5.023407   1 #> 3   2    1    2 0.12143302 2.017062206 2.9241711 4.8198003   5.023407   1 #> 4   3    0    2 0.00000000 0.024933029 1.5396650 1.5645981  10.474959   1 #> 5   4    0    2 0.00000000 0.306669722 1.2686682 1.5753379   3.580949   1 #> 6   5    0    1 0.00000000 0.112701305 2.7124765 2.8251778  10.376796   1 #> 7   5    1    2 0.11270131 0.286786701 2.8251778 2.9992632  10.376796   1 #> 8   6    0    2 0.00000000 0.001217678 1.2928096 1.2940273  18.360778   1 #> 9   7    0    2 0.00000000 0.329785056 0.5446452 0.8744302  48.623381   1 #> 10  8    0    2 0.00000000 0.271879916 2.8331690 3.1050489  15.397319   1 #> 11  9    0    2 0.00000000 0.689620883 1.5670156 2.2566364  19.442459   1 #> 12 10    0    2 0.00000000 0.011112007 2.1966165 2.2077285  27.380735   1 #> 13 11    0    1 0.00000000 0.339153434 2.6097762 2.9489296  18.655615   1 #> 14 11    1    2 0.33915343 0.925554987 2.9489296 3.5353312  18.655615   1 #> 15 12    0    1 0.00000000 0.115758661 1.9488914 2.0646501  12.234253   1 #> 16 12    1    2 0.11575866 1.002394306 2.0646501 2.9512857  12.234253   1 #> 17 13    0    1 0.00000000 0.047602055 1.1635755 1.2111775   3.482006   1 #> 18 13    1    2 0.04760205 0.787029376 1.2111775 1.9506049   3.482006   1 #> 19 14    0    2 0.00000000 0.039312840 1.1645494 1.2038623  43.969894   1 #> 20 15    0    2 0.00000000 0.510728090 0.4173794 0.9281075  28.104000   1 #> 21 16    0    2 0.00000000 0.005959027 0.5619078 0.5678668  15.494744   1 #> 22 17    0    1 0.00000000 0.018787496 0.5491695 0.5679570  32.818580   1 #> 23 17    1    2 0.01878750 0.095444457 0.5679570 0.6446140  32.818580   1 #> 24 18    0    1 0.00000000 0.509938664 1.1668983 1.6768370  20.058654   1 #> 25 18    1    2 0.50993866 1.141412889 1.6768370 2.3083112  20.058654   1 #> 26 19    0    1 0.00000000 0.163696385 0.9949180 1.1586144   7.377779   1 #> 27 19    1    2 0.16369639 0.394728991 1.1586144 1.3896470   7.377779   1 #> 28 20    0    2 0.00000000 0.526957370 2.3844081 2.9113655   5.729975   1 #> 29 21    0    2 0.00000000 0.354918520 1.1883234 1.5432420  35.354131   2 #> 30 22    0    2 0.00000000 0.268112613 2.2186025 2.4867151   4.057648   2 #> 31 23    0    2 0.00000000 0.173935870 2.3080080 2.4819439  20.490825   2 #> 32 24    0    2 0.00000000 0.784650677 2.7637038 3.5483544  22.878374   2 #> 33 25    0    2 0.00000000 1.653583991 0.6168664 2.2704504  14.852909   2 #> 34 26    0    1 0.00000000 0.469706678 2.4771683 2.9468750  11.283897   2 #> 35 26    1    2 0.46970668 0.786725182 2.9468750 3.2638935  11.283897   2 #> 36 27    0    2 0.00000000 0.115660109 1.1911944 1.3068545   3.530013   2 #> 37 28    0    1 0.00000000 0.743637459 1.4657963 2.2094338  22.887217   2 #> 38 28    1    2 0.74363746 1.575873842 2.2094338 3.0416702  22.887217   2 #> 39 29    0    1 0.00000000 0.560799566 2.2141066 2.7749062  22.812513   2 #> 40 29    1    2 0.56079957 1.440325376 2.7749062 3.6544320  22.812513   2 #> 41 30    0    1 0.00000000 1.628128117 0.3786952 2.0068233  65.305047   2 #> 42 30    1    2 1.62812812 2.129508685 2.0068233 2.5082039  65.305047   2 #> 43 31    0    1 0.00000000 0.133929814 1.1768790 1.3108088   4.442713   2 #> 44 31    1    2 0.13392981 0.256939162 1.3108088 1.4338181   4.442713   2 #> 45 32    0 cens 0.00000000 0.410515591 1.8915645 2.3020801   2.302080   2 #> 46 33    0    1 0.00000000 0.290962737 2.5934850 2.8844478   8.395399   2 #> 47 33    1    2 0.29096274 1.126206605 2.8844478 3.7196917   8.395399   2 #> 48 34    0    2 0.00000000 0.158485849 0.9842618 1.1427477   1.524137   2 #> 49 35    0    1 0.00000000 0.218559636 0.3006945 0.5192541   8.732320   2 #> 50 35    1    2 0.21855964 0.275773453 0.5192541 0.5764679   8.732320   2 #> 51 36    0    2 0.00000000 0.619290848 2.6638455 3.2831363  27.433460   2 #> 52 37    0    2 0.00000000 0.046196359 0.5712379 0.6174343   7.803766   2 #> 53 38    0    2 0.00000000 0.237858357 0.1543380 0.3921964   5.995148   2 #> 54 39    0    2 0.00000000 0.466198020 1.2166859 1.6828840  10.501363   2 #> 55 40    0    1 0.00000000 0.152144411 0.9679881 1.1201325 107.536769   2 #> 56 40    1    2 0.15214441 0.724973832 1.1201325 1.6929619 107.536769   2 #>  #> [[3]] #>    id from to        entry         exit  entryAct   exitAct   censAct trt #> 1   1    0  2 0.0000000000 0.0713746063 0.2522126 0.3235872 14.025087   1 #> 2   2    0  2 0.0000000000 0.0792380879 1.8778922 1.9571303  7.538700   1 #> 3   3    0  1 0.0000000000 0.2928811794 0.9488027 1.2416839 10.778614   1 #> 4   3    1  2 0.2928811794 0.9942501388 1.2416839 1.9430528 10.778614   1 #> 5   4    0  1 0.0000000000 0.1849724382 2.3869115 2.5718840 17.653398   1 #> 6   4    1  2 0.1849724382 1.3537912183 2.5718840 3.7407027 17.653398   1 #> 7   5    0  1 0.0000000000 0.3634652036 0.7079238 1.0713890  6.214253   1 #> 8   5    1  2 0.3634652036 1.2209592176 1.0713890 1.9288830  6.214253   1 #> 9   6    0  2 0.0000000000 0.3144854217 1.0388312 1.3533166 22.061282   1 #> 10  7    0  1 0.0000000000 0.0561270364 2.6418532 2.6979803  9.722939   1 #> 11  7    1  2 0.0561270364 1.1620006549 2.6979803 3.8038539  9.722939   1 #> 12  8    0  1 0.0000000000 0.1264685247 1.6086229 1.7350914 12.503362   1 #> 13  8    1  2 0.1264685247 0.2120006042 1.7350914 1.8206235 12.503362   1 #> 14  9    0  1 0.0000000000 0.0002267938 2.3053296 2.3055564  8.326828   1 #> 15  9    1  2 0.0002267938 0.9879803233 2.3055564 3.2933099  8.326828   1 #> 16 10    0  2 0.0000000000 1.1515586052 0.1112250 1.2627836  6.774442   1 #> 17 11    0  1 0.0000000000 0.1888306261 0.1137870 0.3026176  4.033839   1 #> 18 11    1  2 0.1888306261 0.4633866458 0.3026176 0.5771736  4.033839   1 #> 19 12    0  2 0.0000000000 1.3979969773 1.8072656 3.2052626 51.114306   1 #> 20 13    0  1 0.0000000000 0.2655471381 0.6831051 0.9486522 13.008625   1 #> 21 13    1  2 0.2655471381 2.1143492608 0.9486522 2.7974543 13.008625   1 #> 22 14    0  2 0.0000000000 0.2331615993 0.7215000 0.9546616 10.276832   1 #> 23 15    0  1 0.0000000000 0.4765772420 1.7846414 2.2612187  4.747279   1 #> 24 15    1  2 0.4765772420 2.1400280216 2.2612187 3.9246695  4.747279   1 #> 25 16    0  1 0.0000000000 0.0567544109 1.1591137 1.2158681  4.848823   1 #> 26 16    1  2 0.0567544109 0.6177408357 1.2158681 1.7768546  4.848823   1 #> 27 17    0  1 0.0000000000 0.2746114073 2.2813516 2.5559630  4.842559   1 #> 28 17    1  2 0.2746114073 0.3477922345 2.5559630 2.6291439  4.842559   1 #> 29 18    0  1 0.0000000000 0.3044215191 0.3356084 0.6400299 58.498594   1 #> 30 18    1  2 0.3044215191 1.2617436682 0.6400299 1.5973521 58.498594   1 #> 31 19    0  1 0.0000000000 0.3999327490 2.8414208 3.2413536 23.346637   1 #> 32 19    1  2 0.3999327490 0.9754693118 3.2413536 3.8168901 23.346637   1 #> 33 20    0  2 0.0000000000 0.1724586275 1.8567352 2.0291939  6.557996   1 #> 34 21    0  2 0.0000000000 0.2242285109 2.6555759 2.8798044  8.043555   2 #> 35 22    0  1 0.0000000000 0.2127519456 0.1425367 0.3552886  8.711440   2 #> 36 22    1  2 0.2127519456 1.9382209300 0.3552886 2.0807576  8.711440   2 #> 37 23    0  1 0.0000000000 0.0270080114 1.9181645 1.9451725  2.412370   2 #> 38 23    1  2 0.0270080114 0.3069435955 1.9451725 2.2251081  2.412370   2 #> 39 24    0  1 0.0000000000 0.2370481570 2.3586055 2.5956537 23.383883   2 #> 40 24    1  2 0.2370481570 0.4703904213 2.5956537 2.8289959 23.383883   2 #> 41 25    0  1 0.0000000000 0.3482386995 0.9617543 1.3099930  4.815768   2 #> 42 25    1  2 0.3482386995 0.9912434309 1.3099930 1.9529978  4.815768   2 #> 43 26    0  2 0.0000000000 0.7361874439 2.6614874 3.3976748  5.251791   2 #> 44 27    0  2 0.0000000000 0.7908285443 1.3829883 2.1738169 23.326143   2 #> 45 28    0  2 0.0000000000 0.0052921047 2.7029914 2.7082835  5.384365   2 #> 46 29    0  2 0.0000000000 0.3696802097 0.8893163 1.2589965 10.952388   2 #> 47 30    0  2 0.0000000000 0.1560964280 1.7115768 1.8676732 31.264657   2 #> 48 31    0  2 0.0000000000 0.0171506912 2.5434955 2.5606462 14.249264   2 #> 49 32    0  2 0.0000000000 0.1929068099 1.7353244 1.9282312  2.213021   2 #> 50 33    0  1 0.0000000000 0.1353165640 1.2587383 1.3940549 12.698245   2 #> 51 33    1  2 0.1353165640 1.0188601197 1.3940549 2.2775985 12.698245   2 #> 52 34    0  2 0.0000000000 1.5872052891 1.6001704 3.1873756 29.867539   2 #> 53 35    0  2 0.0000000000 1.3125507615 2.6840778 3.9966286  5.584007   2 #> 54 36    0  2 0.0000000000 0.4162046035 2.3843189 2.8005235  9.732216   2 #> 55 37    0  2 0.0000000000 1.4555483033 0.8205429 2.2760912 36.393381   2 #> 56 38    0  1 0.0000000000 0.9147900845 2.4101717 3.3249617 57.913621   2 #> 57 38    1  2 0.9147900845 1.3041337560 3.3249617 3.7143054 57.913621   2 #> 58 39    0  2 0.0000000000 0.0555747869 0.7393658 0.7949406 34.937113   2 #> 59 40    0  2 0.0000000000 0.3943386436 0.9695367 1.3638753  6.705119   2 #>  #> [[4]] #>    id from   to      entry         exit    entryAct   exitAct   censAct trt #> 1   1    0    2 0.00000000 0.2410986442 0.981702251 1.2228009  2.952092   1 #> 2   2    0    1 0.00000000 0.0432759703 0.871870763 0.9151467 33.580123   1 #> 3   2    1    2 0.04327597 1.1319203262 0.915146733 2.0037911 33.580123   1 #> 4   3    0 cens 0.00000000 0.3340910602 2.819007861 3.1530989  3.153099   1 #> 5   4    0    2 0.00000000 0.1286766675 2.640844855 2.7695215  6.324510   1 #> 6   5    0    2 0.00000000 0.6569196895 0.034888646 0.6918083 54.178804   1 #> 7   6    0    2 0.00000000 0.1472025899 0.283570588 0.4307732 10.834122   1 #> 8   7    0    2 0.00000000 0.7662725414 1.546054828 2.3123274 33.788079   1 #> 9   8    0    1 0.00000000 0.0103786084 1.773422543 1.7838012 15.817919   1 #> 10  8    1    2 0.01037861 0.0769419978 1.783801152 1.8503645 15.817919   1 #> 11  9    0    2 0.00000000 0.2876315947 2.267463900 2.5550955  2.667143   1 #> 12 10    0    1 0.00000000 0.2414408720 1.375794810 1.6172357  8.756231   1 #> 13 10    1    2 0.24144087 2.4790636514 1.617235682 3.8548585  8.756231   1 #> 14 11    0    1 0.00000000 0.7788710668 2.306212885 3.0850840 13.233571   1 #> 15 11    1    2 0.77887107 0.7822318384 3.085083951 3.0884447 13.233571   1 #> 16 12    0    1 0.00000000 0.2470910589 2.822382450 3.0694735 60.830550   1 #> 17 12    1    2 0.24709106 0.6777033818 3.069473509 3.5000858 60.830550   1 #> 18 13    0    1 0.00000000 0.0931432113 2.650214293 2.7433575 18.249118   1 #> 19 13    1    2 0.09314321 2.7461783458 2.743357505 5.3963926 18.249118   1 #> 20 14    0    2 0.00000000 0.2635578950 0.775950156 1.0395081  1.192922   1 #> 21 15    0    2 0.00000000 0.0035450488 0.282266245 0.2858113  7.565936   1 #> 22 16    0    2 0.00000000 0.0343161680 0.187464524 0.2217807 14.587169   1 #> 23 17    0    2 0.00000000 0.1420633773 0.535214855 0.6772782 14.072931   1 #> 24 18    0    2 0.00000000 0.2919005722 1.691360939 1.9832615  4.680850   1 #> 25 19    0    1 0.00000000 0.1336806774 0.002465959 0.1361466  4.985135   1 #> 26 19    1    2 0.13368068 0.4954993259 0.136146637 0.4979653  4.985135   1 #> 27 20    0    2 0.00000000 0.4987507578 1.383390286 1.8821410  3.864279   1 #> 28 21    0    2 0.00000000 0.3108055841 1.108384993 1.4191906  6.488981   2 #> 29 22    0    2 0.00000000 0.0296386482 1.115127469 1.1447661 35.599421   2 #> 30 23    0    1 0.00000000 0.1103444532 0.684055658 0.7944001  6.379908   2 #> 31 23    1    2 0.11034445 0.3885954714 0.794400111 1.0726511  6.379908   2 #> 32 24    0    2 0.00000000 0.3786637830 2.255959040 2.6346228  4.078012   2 #> 33 25    0    1 0.00000000 0.1955502860 0.045346345 0.2408966  8.498013   2 #> 34 25    1    2 0.19555029 0.4072976185 0.240896631 0.4526440  8.498013   2 #> 35 26    0    2 0.00000000 1.2602046573 1.139314443 2.3995191 22.935091   2 #> 36 27    0    1 0.00000000 0.0253007462 1.109335964 1.1346367 12.731233   2 #> 37 27    1    2 0.02530075 0.9876996308 1.134636710 2.0970356 12.731233   2 #> 38 28    0    2 0.00000000 0.0001486396 1.307943312 1.3080920 29.748809   2 #> 39 29    0    2 0.00000000 0.1488971253 0.847559424 0.9964565  4.831768   2 #> 40 30    0    2 0.00000000 0.1065229593 2.294964366 2.4014873 51.405341   2 #> 41 31    0    1 0.00000000 0.5072148269 2.489700025 2.9969149  7.602202   2 #> 42 31    1    2 0.50721483 0.8808151622 2.996914852 3.3705152  7.602202   2 #> 43 32    0    2 0.00000000 0.8702256858 2.698787467 3.5690132 87.131527   2 #> 44 33    0    2 0.00000000 0.0131704040 0.779711168 0.7928816  3.457760   2 #> 45 34    0    1 0.00000000 0.5256586610 1.929826306 2.4554850 16.060009   2 #> 46 34    1    2 0.52565866 0.8682492314 2.455484967 2.7980755 16.060009   2 #> 47 35    0    2 0.00000000 0.0793097535 2.032602950 2.1119127  5.859646   2 #> 48 36    0    2 0.00000000 0.6684316624 0.576163331 1.2445950  7.454743   2 #> 49 37    0    2 0.00000000 0.0685444380 1.590595764 1.6591402 17.087538   2 #> 50 38    0    1 0.00000000 0.4902738956 1.781466700 2.2717406 11.826361   2 #> 51 38    1    2 0.49027390 0.5390640410 2.271740596 2.3205307 11.826361   2 #> 52 39    0    1 0.00000000 0.3193638270 0.308769981 0.6281338 38.968055   2 #> 53 39    1    2 0.31936383 0.5944596499 0.628133808 0.9032296 38.968055   2 #> 54 40    0    2 0.00000000 0.5307724009 1.670971908 2.2017443  5.961288   2 #>  #> [[5]] #>    id from   to      entry         exit   entryAct   exitAct   censAct trt #> 1   1    0    1 0.00000000 0.0332999488 1.68885656 1.7221565  6.738915   1 #> 2   1    1    2 0.03329995 2.5591184818 1.72215651 4.2479750  6.738915   1 #> 3   2    0    1 0.00000000 0.2636246081 0.73782300 1.0014476 33.543444   1 #> 4   2    1    2 0.26362461 2.3384513673 1.00144761 3.0762744 33.543444   1 #> 5   3    0    1 0.00000000 0.3192309551 2.16401042 2.4832414 20.955361   1 #> 6   3    1    2 0.31923096 1.3176604081 2.48324138 3.4816708 20.955361   1 #> 7   4    0    1 0.00000000 0.4301024837 1.57584591 2.0059484 10.177052   1 #> 8   4    1    2 0.43010248 0.9177964123 2.00594840 2.4936423 10.177052   1 #> 9   5    0    2 0.00000000 0.1073236999 0.27892951 0.3862532  1.849727   1 #> 10  6    0    1 0.00000000 0.2184061612 0.43001827 0.6484244  2.548339   1 #> 11  6    1    2 0.21840616 0.5986522948 0.64842443 1.0286706  2.548339   1 #> 12  7    0    2 0.00000000 0.2885957510 0.41653084 0.7051266  5.432299   1 #> 13  8    0    1 0.00000000 0.3110182152 2.83019489 3.1412131 50.580754   1 #> 14  8    1    2 0.31101822 0.4591634038 3.14121310 3.2893583 50.580754   1 #> 15  9    0    2 0.00000000 0.9871455450 0.07454948 1.0616950 51.929095   1 #> 16 10    0    2 0.00000000 0.0700754248 1.73352670 1.8036021 11.113885   1 #> 17 11    0    2 0.00000000 0.0148296548 0.29177314 0.3066028  1.619974   1 #> 18 12    0    1 0.00000000 0.0385860797 1.45550172 1.4940878 63.963362   1 #> 19 12    1    2 0.03858608 0.2024578992 1.49408780 1.6579596 63.963362   1 #> 20 13    0    2 0.00000000 0.0057884263 0.53548956 0.5412780  3.274291   1 #> 21 14    0    2 0.00000000 0.9373104972 1.44920540 2.3865159 14.955906   1 #> 22 15    0    2 0.00000000 0.5082140903 1.10050147 1.6087156  2.192451   1 #> 23 16    0    2 0.00000000 0.3444093398 1.68190093 2.0263103 12.540869   1 #> 24 17    0    2 0.00000000 0.1756765585 2.63069727 2.8063738 18.163925   1 #> 25 18    0    2 0.00000000 0.1547321886 1.66730836 1.8220405 10.881232   1 #> 26 19    0    2 0.00000000 0.1469674060 2.32257739 2.4695448 35.240483   1 #> 27 20    0    2 0.00000000 0.3657595210 2.19295156 2.5587111 48.957341   1 #> 28 21    0    1 0.00000000 0.0842679335 0.87288477 0.9571527  4.597237   2 #> 29 21    1    2 0.08426793 0.3594287113 0.95715270 1.2323135  4.597237   2 #> 30 22    0    2 0.00000000 0.2866589560 2.65364068 2.9402996  3.823342   2 #> 31 23    0    1 0.00000000 0.4394935112 0.74593618 1.1854297 15.202827   2 #> 32 23    1    2 0.43949351 0.5647225047 1.18542969 1.3106587 15.202827   2 #> 33 24    0    2 0.00000000 1.8874770545 1.26606557 3.1535426 41.674347   2 #> 34 25    0    1 0.00000000 0.0455841890 2.02184233 2.0674265  5.707270   2 #> 35 25    1    2 0.04558419 0.9429468934 2.06742652 2.9647892  5.707270   2 #> 36 26    0    1 0.00000000 0.5144061244 2.57984162 3.0942477  3.131123   2 #> 37 26    1    2 0.51440612 0.5164233540 3.09424774 3.0962650  3.131123   2 #> 38 27    0    2 0.00000000 0.0005693736 1.46606603 1.4666354 14.926529   2 #> 39 28    0    1 0.00000000 0.6341506733 1.43006866 2.0642193 30.952348   2 #> 40 28    1    2 0.63415067 2.2070719245 2.06421934 3.6371406 30.952348   2 #> 41 29    0    1 0.00000000 0.1676662615 0.14226202 0.3099283 10.298686   2 #> 42 29    1    2 0.16766626 0.8555265340 0.30992828 0.9977886 10.298686   2 #> 43 30    0    2 0.00000000 1.3784311037 0.71254331 2.0909744 56.762391   2 #> 44 31    0    1 0.00000000 0.0945247874 2.25280301 2.3473278 39.718569   2 #> 45 31    1    2 0.09452479 0.2659120726 2.34732780 2.5187151 39.718569   2 #> 46 32    0    2 0.00000000 0.7903920482 0.56618355 1.3565756  6.197933   2 #> 47 33    0    2 0.00000000 0.2906037904 2.51740811 2.8080119 30.479469   2 #> 48 34    0 cens 0.00000000 0.0380374622 1.04090797 1.0789454  1.078945   2 #> 49 35    0    1 0.00000000 0.1882095953 0.77128564 0.9594952  9.422382   2 #> 50 35    1    2 0.18820960 0.8322813046 0.95949524 1.6035669  9.422382   2 #> 51 36    0    2 0.00000000 0.6224154408 1.68564151 2.3080569 32.703041   2 #> 52 37    0    2 0.00000000 0.2146726244 0.47271595 0.6873886 10.841356   2 #> 53 38    0    1 0.00000000 0.2651092776 1.39734224 1.6624515  2.316457   2 #> 54 38    1    2 0.26510928 0.6461735571 1.66245152 2.0435158  2.316457   2 #> 55 39    0    1 0.00000000 0.0493714249 2.75252470 2.8018961  3.225759   2 #> 56 39    1 cens 0.04937142 0.4732346311 2.80189613 3.2257593  3.225759   2 #> 57 40    0    2 0.00000000 1.4296042193 1.65600838 3.0856126 26.743329   2 #>  #> [[6]] #>    id from to      entry       exit   entryAct   exitAct   censAct trt #> 1   1    0  2 0.00000000 0.31910775 0.10926129 0.4283690 10.178046   1 #> 2   2    0  1 0.00000000 0.01456238 2.44170945 2.4562718  5.171734   1 #> 3   2    1  2 0.01456238 0.61010779 2.45627183 3.0518172  5.171734   1 #> 4   3    0  1 0.00000000 0.47985426 1.75172996 2.2315842  3.201626   1 #> 5   3    1  2 0.47985426 0.61941713 2.23158423 2.3711471  3.201626   1 #> 6   4    0  2 0.00000000 0.83961224 1.30566490 2.1452771 10.397126   1 #> 7   5    0  1 0.00000000 0.49698387 0.74485444 1.2418383 27.134699   1 #> 8   5    1  2 0.49698387 1.99454196 1.24183831 2.7393964 27.134699   1 #> 9   6    0  2 0.00000000 0.19243376 0.72422237 0.9166561 22.582336   1 #> 10  7    0  2 0.00000000 0.03179525 0.50714049 0.5389357 11.022942   1 #> 11  8    0  1 0.00000000 0.20416365 1.84802987 2.0521935  2.309456   1 #> 12  8    1  2 0.20416365 0.43953900 2.05219352 2.2875689  2.309456   1 #> 13  9    0  2 0.00000000 0.05128322 0.62200592 0.6732891 29.896489   1 #> 14 10    0  1 0.00000000 0.01149837 0.07194894 0.0834473 37.661026   1 #> 15 10    1  2 0.01149837 0.13835916 0.08344730 0.2103081 37.661026   1 #> 16 11    0  2 0.00000000 0.05026240 1.91903046 1.9692929 27.804553   1 #> 17 12    0  2 0.00000000 0.16370250 0.22680711 0.3905096 18.494981   1 #> 18 13    0  2 0.00000000 0.10434070 0.04368865 0.1480293 17.800040   1 #> 19 14    0  2 0.00000000 0.26904635 0.63565901 0.9047054  5.308293   1 #> 20 15    0  1 0.00000000 0.31049670 0.95780612 1.2683028 23.740501   1 #> 21 15    1  2 0.31049670 1.89948223 1.26830282 2.8572883 23.740501   1 #> 22 16    0  2 0.00000000 0.21911925 0.03557061 0.2546899  5.852499   1 #> 23 17    0  1 0.00000000 0.47667126 0.44388214 0.9205534  3.531466   1 #> 24 17    1  2 0.47667126 0.80841498 0.92055339 1.2522971  3.531466   1 #> 25 18    0  1 0.00000000 0.15177837 0.36651944 0.5182978 12.593604   1 #> 26 18    1  2 0.15177837 0.74597451 0.51829781 1.1124939 12.593604   1 #> 27 19    0  2 0.00000000 0.08614689 0.47998545 0.5661323 25.150757   1 #> 28 20    0  2 0.00000000 1.76177635 2.62927278 4.3910491 39.016045   1 #> 29 21    0  2 0.00000000 0.15946480 0.34028502 0.4997498  6.658468   2 #> 30 22    0  2 0.00000000 0.44978088 2.44249527 2.8922762 84.532024   2 #> 31 23    0  1 0.00000000 0.20918819 0.14674985 0.3559380  4.907253   2 #> 32 23    1  2 0.20918819 0.42430431 0.35593804 0.5710542  4.907253   2 #> 33 24    0  2 0.00000000 0.39083416 1.81531432 2.2061485 13.204293   2 #> 34 25    0  1 0.00000000 0.68843072 1.77008588 2.4585166 19.484967   2 #> 35 25    1  2 0.68843072 0.81487062 2.45851660 2.5849565 19.484967   2 #> 36 26    0  1 0.00000000 0.15525099 0.52802770 0.6832787 12.627945   2 #> 37 26    1  2 0.15525099 1.79260886 0.68327869 2.3206366 12.627945   2 #> 38 27    0  2 0.00000000 0.09586063 0.16295599 0.2588166 66.695923   2 #> 39 28    0  1 0.00000000 0.30831955 1.43571270 1.7440322 35.945748   2 #> 40 28    1  2 0.30831955 1.29014098 1.74403224 2.7258537 35.945748   2 #> 41 29    0  1 0.00000000 0.08108648 0.95544977 1.0365362 23.950632   2 #> 42 29    1  2 0.08108648 0.57561808 1.03653624 1.5310678 23.950632   2 #> 43 30    0  2 0.00000000 0.13831762 2.07038943 2.2087071 29.749732   2 #> 44 31    0  2 0.00000000 0.42418270 2.18038347 2.6045662 21.626253   2 #> 45 32    0  1 0.00000000 0.18123904 2.73575771 2.9169967 23.363804   2 #> 46 32    1  2 0.18123904 1.41826828 2.91699675 4.1540260 23.363804   2 #> 47 33    0  2 0.00000000 0.56909452 0.70177305 1.2708676  2.868643   2 #> 48 34    0  2 0.00000000 0.11168271 0.53987469 0.6515574 16.575232   2 #> 49 35    0  1 0.00000000 0.02020601 2.34231943 2.3625254 11.972886   2 #> 50 35    1  2 0.02020601 0.15266445 2.36252544 2.4949839 11.972886   2 #> 51 36    0  1 0.00000000 1.53043801 1.00569362 2.5361316  4.668653   2 #> 52 36    1  2 1.53043801 1.96501847 2.53613163 2.9707121  4.668653   2 #> 53 37    0  2 0.00000000 0.66566040 1.20887575 1.8745361 12.396305   2 #> 54 38    0  2 0.00000000 0.85031411 2.40114758 3.2514617  6.295855   2 #> 55 39    0  2 0.00000000 0.30552495 1.37017648 1.6757014  2.007219   2 #> 56 40    0  1 0.00000000 0.58891406 0.92306765 1.5119817  4.265156   2 #> 57 40    1  2 0.58891406 0.76281222 1.51198170 1.6858799  4.265156   2 #>  #> [[7]] #>    id from   to      entry       exit  entryAct   exitAct    censAct trt #> 1   1    0    2 0.00000000 0.23713597 1.8252590 2.0623950  7.2744124   1 #> 2   2    0    1 0.00000000 0.03361286 0.3220804 0.3556932  0.9047256   1 #> 3   2    1    2 0.03361286 0.05817040 0.3556932 0.3802508  0.9047256   1 #> 4   3    0    1 0.00000000 0.04966008 1.0339738 1.0836339 20.6272727   1 #> 5   3    1    2 0.04966008 0.36676278 1.0836339 1.4007366 20.6272727   1 #> 6   4    0    2 0.00000000 0.09040027 2.4021185 2.4925187 42.6750138   1 #> 7   5    0    1 0.00000000 0.22420981 2.2287212 2.4529310  4.9269626   1 #> 8   5    1    2 0.22420981 0.39352561 2.4529310 2.6222468  4.9269626   1 #> 9   6    0    2 0.00000000 0.80772762 2.0205934 2.8283211 40.5142418   1 #> 10  7    0    2 0.00000000 0.28840385 2.1401341 2.4285380  6.3574253   1 #> 11  8    0    1 0.00000000 0.96632146 0.5375291 1.5038506  1.5094680   1 #> 12  8    1 cens 0.96632146 0.97193893 1.5038506 1.5094680  1.5094680   1 #> 13  9    0    2 0.00000000 0.10233572 2.3965451 2.4988808  6.6445660   1 #> 14 10    0    1 0.00000000 0.44510154 0.7729241 1.2180256  1.5556914   1 #> 15 10    1    2 0.44510154 0.52567944 1.2180256 1.2986035  1.5556914   1 #> 16 11    0    1 0.00000000 0.26910671 1.0479737 1.3170804  6.7657573   1 #> 17 11    1    2 0.26910671 0.50561139 1.3170804 1.5535851  6.7657573   1 #> 18 12    0    2 0.00000000 0.38798333 0.9737994 1.3617828 21.8140785   1 #> 19 13    0    2 0.00000000 0.11064259 0.7776597 0.8883023  4.7940685   1 #> 20 14    0    1 0.00000000 0.64966795 1.6443023 2.2939703 26.6493531   1 #> 21 14    1    2 0.64966795 0.72907323 2.2939703 2.3733756 26.6493531   1 #> 22 15    0    1 0.00000000 0.11141290 2.5282248 2.6396377 14.5591124   1 #> 23 15    1    2 0.11141290 0.41776148 2.6396377 2.9459863 14.5591124   1 #> 24 16    0    1 0.00000000 0.04579814 1.0394231 1.0852212 86.8895340   1 #> 25 16    1    2 0.04579814 1.89557262 1.0852212 2.9349957 86.8895340   1 #> 26 17    0    2 0.00000000 0.20111616 1.9874431 2.1885592  3.6354171   1 #> 27 18    0    2 0.00000000 0.86074021 2.2738236 3.1345638 38.3980915   1 #> 28 19    0    2 0.00000000 0.43166341 1.9995116 2.4311750 17.7034800   1 #> 29 20    0    2 0.00000000 0.10260895 1.0996593 1.2022682 14.5118318   1 #> 30 21    0    1 0.00000000 0.67923401 2.6836286 3.3628626  6.7755020   2 #> 31 21    1    2 0.67923401 1.07105513 3.3628626 3.7546837  6.7755020   2 #> 32 22    0    2 0.00000000 0.05203213 2.3159447 2.3679768 79.5504088   2 #> 33 23    0    2 0.00000000 0.75551079 0.8507753 1.6062861 49.2751438   2 #> 34 24    0    2 0.00000000 0.63510684 1.8113438 2.4464506 39.6676240   2 #> 35 25    0    1 0.00000000 0.48921432 0.9809311 1.4701454 26.5694130   2 #> 36 25    1    2 0.48921432 2.45155438 1.4701454 3.4324855 26.5694130   2 #> 37 26    0    1 0.00000000 0.39119775 1.5670086 1.9582064  7.9505087   2 #> 38 26    1    2 0.39119775 2.15036802 1.9582064 3.7173767  7.9505087   2 #> 39 27    0    1 0.00000000 1.11466023 0.7542657 1.8689259 14.6302708   2 #> 40 27    1    2 1.11466023 1.13410502 1.8689259 1.8883707 14.6302708   2 #> 41 28    0    1 0.00000000 0.70358296 0.7639384 1.4675213  9.4135827   2 #> 42 28    1    2 0.70358296 0.71726813 1.4675213 1.4812065  9.4135827   2 #> 43 29    0    2 0.00000000 0.23476457 1.9724856 2.2072501 69.1746629   2 #> 44 30    0    1 0.00000000 0.74149200 1.6560837 2.3975757  4.3833475   2 #> 45 30    1    2 0.74149200 0.98027502 2.3975757 2.6363588  4.3833475   2 #> 46 31    0    2 0.00000000 0.05022066 1.8977037 1.9479244 31.5020746   2 #> 47 32    0    2 0.00000000 0.21947915 1.1621516 1.3816307  5.0432077   2 #> 48 33    0    2 0.00000000 0.19349331 1.2919865 1.4854799 22.3093186   2 #> 49 34    0    2 0.00000000 0.01571694 1.5578480 1.5735649  9.0207176   2 #> 50 35    0    2 0.00000000 0.15020660 0.3271609 0.4773675 53.3337255   2 #> 51 36    0    1 0.00000000 0.13716677 0.8047313 0.9418981  2.8809992   2 #> 52 36    1    2 0.13716677 0.30948268 0.9418981 1.1142140  2.8809992   2 #> 53 37    0    2 0.00000000 0.43057446 0.7329241 1.1634986 15.6320572   2 #> 54 38    0    2 0.00000000 0.50425350 2.5219844 3.0262379 36.3868541   2 #> 55 39    0    2 0.00000000 0.08381527 2.3990472 2.4828625 23.4604056   2 #> 56 40    0    2 0.00000000 2.51112154 2.4440377 4.9551593 24.3227898   2 #>  #> [[8]] #>    id from   to      entry        exit   entryAct   exitAct   censAct trt #> 1   1    0    2 0.00000000 0.310151741 2.84740783 3.1575596  6.799396   1 #> 2   2    0    2 0.00000000 0.290583550 1.05786567 1.3484492 20.449987   1 #> 3   3    0    2 0.00000000 0.179078147 0.42956313 0.6086413  1.776445   1 #> 4   4    0    2 0.00000000 0.607344411 1.54870156 2.1560460 22.581290   1 #> 5   5    0    2 0.00000000 0.690308459 1.22065822 1.9109667 29.577431   1 #> 6   6    0    1 0.00000000 0.228614953 0.66040333 0.8890183  5.246746   1 #> 7   6    1    2 0.22861495 0.400316945 0.88901828 1.0607203  5.246746   1 #> 8   7    0    2 0.00000000 0.374055349 2.45552026 2.8295756 30.105786   1 #> 9   8    0    2 0.00000000 0.288647331 0.03679664 0.3254440  1.383316   1 #> 10  9    0    2 0.00000000 0.642159267 1.81051897 2.4526782 48.063579   1 #> 11 10    0    2 0.00000000 0.806135471 1.06170914 1.8678446  6.202371   1 #> 12 11    0    1 0.00000000 0.532134809 1.21627317 1.7484080  6.845063   1 #> 13 11    1    2 0.53213481 1.180460735 1.74840798 2.3967339  6.845063   1 #> 14 12    0    1 0.00000000 0.285471354 1.95139218 2.2368635 10.648473   1 #> 15 12    1    2 0.28547135 0.453937538 2.23686353 2.4053297 10.648473   1 #> 16 13    0    2 0.00000000 0.751004535 0.27517552 1.0261801 10.811445   1 #> 17 14    0    2 0.00000000 0.094866684 2.15611031 2.2509770 24.160941   1 #> 18 15    0    2 0.00000000 0.371633829 1.11501013 1.4866440  5.075530   1 #> 19 16    0    1 0.00000000 0.392599439 1.64107276 2.0336722  3.763091   1 #> 20 16    1    2 0.39259944 1.571951523 2.03367220 3.2130243  3.763091   1 #> 21 17    0    2 0.00000000 0.400110984 1.21917438 1.6192854 41.195136   1 #> 22 18    0    2 0.00000000 0.054794669 0.09584648 0.1506412 10.896583   1 #> 23 19    0    1 0.00000000 0.488007314 1.33546237 1.8234697  1.919626   1 #> 24 19    1 cens 0.48800731 0.584163149 1.82346968 1.9196255  1.919626   1 #> 25 20    0    2 0.00000000 0.027827071 0.69781666 0.7256437 42.566845   1 #> 26 21    0    1 0.00000000 0.048617845 2.46607093 2.5146888  3.072793   2 #> 27 21    1    2 0.04861784 0.245911354 2.51468878 2.7119823  3.072793   2 #> 28 22    0    1 0.00000000 0.515465728 2.13648268 2.6519484 94.831941   2 #> 29 22    1    2 0.51546573 0.915497643 2.65194841 3.0519803 94.831941   2 #> 30 23    0    2 0.00000000 0.045939544 2.68641602 2.7323556 51.506097   2 #> 31 24    0    2 0.00000000 1.280302943 2.62921805 3.9095210 44.704811   2 #> 32 25    0    1 0.00000000 0.072163515 0.45600299 0.5281665 16.113644   2 #> 33 25    1    2 0.07216352 0.186729417 0.52816651 0.6427324 16.113644   2 #> 34 26    0 cens 0.00000000 0.045812317 2.50435107 2.5501634  2.550163   2 #> 35 27    0    1 0.00000000 0.037493647 2.04327457 2.0807682 10.265634   2 #> 36 27    1    2 0.03749365 1.215557261 2.08076822 3.2588318 10.265634   2 #> 37 28    0    1 0.00000000 0.466083809 1.27092170 1.7370055 49.292839   2 #> 38 28    1    2 0.46608381 0.546674699 1.73700550 1.8175964 49.292839   2 #> 39 29    0    2 0.00000000 0.284626623 0.94074121 1.2253678 15.704232   2 #> 40 30    0    2 0.00000000 0.007240986 0.84237828 0.8496193 54.110630   2 #> 41 31    0    2 0.00000000 1.456656721 1.33771461 2.7943713  9.215072   2 #> 42 32    0    2 0.00000000 0.082568450 0.40090744 0.4834759  5.165432   2 #> 43 33    0    1 0.00000000 0.268202326 2.72797024 2.9961726 31.217419   2 #> 44 33    1    2 0.26820233 0.343085594 2.99617257 3.0710558 31.217419   2 #> 45 34    0    1 0.00000000 0.357882220 1.40741485 1.7652971  7.693002   2 #> 46 34    1    2 0.35788222 1.365384767 1.76529707 2.7727996  7.693002   2 #> 47 35    0 cens 0.00000000 0.268598086 2.69017703 2.9587751  2.958775   2 #> 48 36    0    1 0.00000000 0.101104472 1.16579979 1.2669043 20.762987   2 #> 49 36    1    2 0.10110447 0.238665014 1.26690426 1.4044648 20.762987   2 #> 50 37    0    2 0.00000000 0.063105582 0.63017737 0.6932830  2.153837   2 #> 51 38    0    2 0.00000000 0.144081977 1.60599765 1.7500796 26.860895   2 #> 52 39    0    2 0.00000000 0.231100226 1.25628551 1.4873857 16.291715   2 #> 53 40    0    1 0.00000000 0.102080034 0.77976737 0.8818474  9.791589   2 #> 54 40    1    2 0.10208003 0.206078978 0.88184740 0.9858463  9.791589   2 #>  #> [[9]] #>    id from   to        entry         exit   entryAct   exitAct   censAct trt #> 1   1    0    2 0.0000000000 0.4712528662 1.38305888 1.8543117  2.088719   1 #> 2   2    0    2 0.0000000000 0.0341122078 0.97511271 1.0092249  9.123580   1 #> 3   3    0    2 0.0000000000 0.4149434796 0.55369880 0.9686423 28.400391   1 #> 4   4    0    2 0.0000000000 0.6252475457 0.44336996 1.0686175  9.530231   1 #> 5   5    0    2 0.0000000000 0.1227371627 1.20022698 1.3229641 27.315522   1 #> 6   6    0    1 0.0000000000 0.0126862462 2.61196249 2.6246487  7.648715   1 #> 7   6    1    2 0.0126862462 1.5717055030 2.62464874 4.1836680  7.648715   1 #> 8   7    0    2 0.0000000000 0.0095227525 1.72300653 1.7325293 14.825508   1 #> 9   8    0    2 0.0000000000 0.2171286421 1.09755303 1.3146817  3.813328   1 #> 10  9    0    2 0.0000000000 0.2272809958 0.18417977 0.4114608 27.089509   1 #> 11 10    0    1 0.0000000000 0.4180034979 2.02245093 2.4404544 14.643702   1 #> 12 10    1    2 0.4180034979 0.8225176567 2.44045443 2.8449686 14.643702   1 #> 13 11    0    1 0.0000000000 0.0165026856 2.18116616 2.1976688  2.521556   1 #> 14 11    1 cens 0.0165026856 0.3403900350 2.19766885 2.5215562  2.521556   1 #> 15 12    0    2 0.0000000000 0.0246163610 1.81814737 1.8427637  3.607772   1 #> 16 13    0    2 0.0000000000 0.3864389662 1.70708903 2.0935280 17.729165   1 #> 17 14    0    2 0.0000000000 0.9313199102 2.21380388 3.1451238  7.671797   1 #> 18 15    0    1 0.0000000000 0.3863041907 2.52990502 2.9162092 15.249421   1 #> 19 15    1    2 0.3863041907 0.4025894051 2.91620921 2.9324944 15.249421   1 #> 20 16    0    2 0.0000000000 0.0771254657 2.06071420 2.1378397 24.035245   1 #> 21 17    0    2 0.0000000000 0.0608738581 2.39412308 2.4549969  7.491855   1 #> 22 18    0    1 0.0000000000 0.1354568749 0.62091639 0.7563733 42.477157   1 #> 23 18    1    2 0.1354568749 0.8619044766 0.75637326 1.4828209 42.477157   1 #> 24 19    0    1 0.0000000000 0.2571425530 0.84374007 1.1008826 48.242116   1 #> 25 19    1    2 0.2571425530 1.8901489506 1.10088262 2.7338890 48.242116   1 #> 26 20    0    1 0.0000000000 0.3081903494 2.74545841 3.0536488  3.250680   1 #> 27 20    1 cens 0.3081903494 0.5052217977 3.05364876 3.2506802  3.250680   1 #> 28 21    0    2 0.0000000000 0.2784890690 0.82290229 1.1013914 17.114072   2 #> 29 22    0    2 0.0000000000 0.3579176343 1.85399571 2.2119133 61.382354   2 #> 30 23    0    2 0.0000000000 1.1656533053 0.14321663 1.3088699 28.955028   2 #> 31 24    0    1 0.0000000000 0.1296996545 1.68012329 1.8098229 22.426566   2 #> 32 24    1    2 0.1296996545 0.1533290307 1.80982294 1.8334523 22.426566   2 #> 33 25    0    2 0.0000000000 0.6495941597 0.23753713 0.8871313 19.770969   2 #> 34 26    0    1 0.0000000000 0.0132166817 0.71495343 0.7281701  2.984517   2 #> 35 26    1    2 0.0132166817 0.6345325786 0.72817011 1.3494860  2.984517   2 #> 36 27    0    1 0.0000000000 0.0008818818 2.16831094 2.1691928 13.508095   2 #> 37 27    1    2 0.0008818818 0.2667189755 2.16919282 2.4350299 13.508095   2 #> 38 28    0    1 0.0000000000 0.4529311732 2.04225701 2.4951882  9.380537   2 #> 39 28    1    2 0.4529311732 0.6866900240 2.49518819 2.7289470  9.380537   2 #> 40 29    0    2 0.0000000000 0.1772835591 1.53481023 1.7120938  9.495196   2 #> 41 30    0    2 0.0000000000 0.1941817385 1.63206007 1.8262418 26.035616   2 #> 42 31    0    1 0.0000000000 0.0308302014 0.35660841 0.3874386 10.551045   2 #> 43 31    1    2 0.0308302014 0.4907436594 0.38743861 0.8473521 10.551045   2 #> 44 32    0    1 0.0000000000 0.0740600793 2.15357481 2.2276349  4.416589   2 #> 45 32    1    2 0.0740600793 0.1101340874 2.22763489 2.2637089  4.416589   2 #> 46 33    0    2 0.0000000000 0.5565792588 1.95045550 2.5070348  7.962846   2 #> 47 34    0    1 0.0000000000 0.0458368413 0.26345926 0.3092961  2.618997   2 #> 48 34    1    2 0.0458368413 0.2517980122 0.30929610 0.5152573  2.618997   2 #> 49 35    0    2 0.0000000000 0.1734901939 0.05170118 0.2251914  5.526203   2 #> 50 36    0    2 0.0000000000 1.2244407660 0.63219546 1.8566362 13.584287   2 #> 51 37    0    2 0.0000000000 0.7366868504 2.82826551 3.5649524 21.853652   2 #> 52 38    0    2 0.0000000000 0.4807117816 1.21027421 1.6909860 15.876691   2 #> 53 39    0    1 0.0000000000 0.4954691576 2.66994815 3.1654173  4.208202   2 #> 54 39    1    2 0.4954691576 0.5979886068 3.16541731 3.2679368  4.208202   2 #> 55 40    0    1 0.0000000000 0.3353758096 2.37495290 2.7103287 25.889694   2 #> 56 40    1    2 0.3353758096 0.5801868097 2.71032871 2.9551397 25.889694   2 #>  #> [[10]] #>    id from   to      entry       exit  entryAct   exitAct   censAct trt #> 1   1    0    2 0.00000000 0.36486251 0.7307464 1.0956089  4.311449   1 #> 2   2    0    2 0.00000000 0.72797665 0.3975393 1.1255159 27.974739   1 #> 3   3    0    2 0.00000000 0.05176356 1.4919859 1.5437495 18.339192   1 #> 4   4    0    1 0.00000000 0.47081912 0.8351729 1.3059921 10.525492   1 #> 5   4    1    2 0.47081912 0.47274349 1.3059921 1.3079164 10.525492   1 #> 6   5    0    1 0.00000000 0.00108168 2.8368515 2.8379332 12.242199   1 #> 7   5    1    2 0.00108168 0.97213778 2.8379332 3.8089893 12.242199   1 #> 8   6    0    2 0.00000000 0.42425732 0.7896894 1.2139467  6.993115   1 #> 9   7    0    2 0.00000000 0.22947801 1.6417992 1.8712772 23.432124   1 #> 10  8    0    1 0.00000000 0.62842411 1.7501951 2.3786192 43.814127   1 #> 11  8    1    2 0.62842411 1.30797638 2.3786192 3.0581715 43.814127   1 #> 12  9    0    1 0.00000000 0.09565990 0.4674800 0.5631399  8.338261   1 #> 13  9    1    2 0.09565990 0.73217961 0.5631399 1.1996596  8.338261   1 #> 14 10    0    1 0.00000000 0.28165594 1.4690742 1.7507301  2.458164   1 #> 15 10    1    2 0.28165594 0.61521628 1.7507301 2.0842904  2.458164   1 #> 16 11    0    2 0.00000000 0.32437014 2.7757701 3.1001402  8.220130   1 #> 17 12    0 cens 0.00000000 0.50272923 1.1150273 1.6177565  1.617757   1 #> 18 13    0    1 0.00000000 0.08175658 0.9442993 1.0260559  2.351395   1 #> 19 13    1    2 0.08175658 0.93597639 1.0260559 1.8802757  2.351395   1 #> 20 14    0    2 0.00000000 0.21832411 2.4607367 2.6790608 18.224221   1 #> 21 15    0    2 0.00000000 0.57085086 0.5809910 1.1518418 24.840938   1 #> 22 16    0    2 0.00000000 0.74476018 2.2087991 2.9535593 14.840138   1 #> 23 17    0    1 0.00000000 0.26544720 0.3033039 0.5687510 19.441766   1 #> 24 17    1    2 0.26544720 0.37534484 0.5687510 0.6786487 19.441766   1 #> 25 18    0    1 0.00000000 0.84428717 1.7122593 2.5565464 31.410514   1 #> 26 18    1    2 0.84428717 0.87849712 2.5565464 2.5907564 31.410514   1 #> 27 19    0    2 0.00000000 0.48067579 0.7149038 1.1955796 20.583463   1 #> 28 20    0    2 0.00000000 0.04306470 1.5771965 1.6202612 36.350843   1 #> 29 21    0    1 0.00000000 0.02016253 1.7171818 1.7373443  9.824775   2 #> 30 21    1    2 0.02016253 0.47052947 1.7373443 2.1877113  9.824775   2 #> 31 22    0    1 0.00000000 0.53639734 1.4663219 2.0027192 10.790572   2 #> 32 22    1    2 0.53639734 0.77034763 2.0027192 2.2366695 10.790572   2 #> 33 23    0    2 0.00000000 0.30599137 1.6790901 1.9850815  4.933431   2 #> 34 24    0    2 0.00000000 0.50274840 0.5745566 1.0773051  4.433750   2 #> 35 25    0    2 0.00000000 0.58849542 2.7953137 3.3838091 26.470819   2 #> 36 26    0    2 0.00000000 0.65169959 1.2948226 1.9465222  8.987117   2 #> 37 27    0    1 0.00000000 0.70027756 2.8019015 3.5021790 13.541888   2 #> 38 27    1    2 0.70027756 1.08742852 3.5021790 3.8893300 13.541888   2 #> 39 28    0    1 0.00000000 0.17277439 0.6548238 0.8275982  3.613415   2 #> 40 28    1    2 0.17277439 0.17844128 0.8275982 0.8332651  3.613415   2 #> 41 29    0    2 0.00000000 0.41708215 1.0315548 1.4486369  7.770879   2 #> 42 30    0    1 0.00000000 0.05264367 0.9757414 1.0283850 12.398919   2 #> 43 30    1    2 0.05264367 0.38904367 1.0283850 1.3647851 12.398919   2 #> 44 31    0    1 0.00000000 0.09280475 1.5675254 1.6603301  1.840354   2 #> 45 31    1 cens 0.09280475 0.27282821 1.6603301 1.8403536  1.840354   2 #> 46 32    0    1 0.00000000 0.41894244 1.0080013 1.4269437 20.215680   2 #> 47 32    1    2 0.41894244 0.68043948 1.4269437 1.6884408 20.215680   2 #> 48 33    0    2 0.00000000 0.39736600 1.6814041 2.0787701 17.231131   2 #> 49 34    0    2 0.00000000 0.02777484 2.5942043 2.6219791 34.867212   2 #> 50 35    0    1 0.00000000 0.52238592 1.2512069 1.7735928 50.060027   2 #> 51 35    1    2 0.52238592 0.59667484 1.7735928 1.8478818 50.060027   2 #> 52 36    0    2 0.00000000 0.58136902 2.1803972 2.7617662  8.645262   2 #> 53 37    0    2 0.00000000 0.01023474 2.4547162 2.4649509  6.553883   2 #> 54 38    0    2 0.00000000 0.61860015 1.1661620 1.7847622 51.228770   2 #> 55 39    0    2 0.00000000 0.19551571 1.6232195 1.8187352 42.039225   2 #> 56 40    0    2 0.00000000 0.01249644 0.3144476 0.3269440 23.696916   2 #>"},{"path":"https://insightsengineering.github.io/simIDM/reference/getDatasetWideFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of a Data Set from One Row per Transition to One Row per Patient — getDatasetWideFormat","title":"Conversion of a Data Set from One Row per Transition to One Row per Patient — getDatasetWideFormat","text":"Conversion Data Set One Row per Transition One Row per Patient","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getDatasetWideFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of a Data Set from One Row per Transition to One Row per Patient — getDatasetWideFormat","text":"","code":"getDatasetWideFormat(data)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getDatasetWideFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of a Data Set from One Row per Transition to One Row per Patient — getDatasetWideFormat","text":"data (data.frame) data frame containing entry exit times illness-death model. See getSimulatedData() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getDatasetWideFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of a Data Set from One Row per Transition to One Row per Patient — getDatasetWideFormat","text":"function returns data set one row per patient endpoints PFS OS.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getDatasetWideFormat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion of a Data Set from One Row per Transition to One Row per Patient — getDatasetWideFormat","text":"output data set contains following columns: id (integer): patient id. trt integer): treatment id. PFStime (numeric): event time PFS event. CensoredPFS (logical): censoring indicator PFS event. PFSevent (logical): event indicator PFS event. OStime (numeric): event time OS event. CensoredOS (logical): censoring indicator OS event. OSevent (logical): event indicator OS event. recruitTime (numeric): time recruitment. OStimeCal (numeric): OS event time calendar time scale. PFStimeCal (numeric): PFS event time calendar time scale.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getDatasetWideFormat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of a Data Set from One Row per Transition to One Row per Patient — getDatasetWideFormat","text":"","code":"transition1 <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) transition2 <- exponential_transition(h01 = 1, h02 = 1.3, h12 = 1.7) transition3 <- exponential_transition(h01 = 1.1, h02 = 1, h12 = 1.5) simData <- getOneClinicalTrial(   nPat = c(30, 20, 30), transitionByArm = list(transition1, transition2, transition3),   dropout = list(rate = 0, time = 12),   accrual = list(param = \"time\", value = 0) ) getDatasetWideFormat(simData) #>    id trt      PFStime CensoredPFS PFSevent       OStime CensoredOS OSevent #> 1   1   1 0.3223123286           0        1 0.3223123286          0       1 #> 2   2   1 0.7090484104           0        1 1.0449132260          0       1 #> 3   3   1 0.2966917416           0        1 1.8327935276          0       1 #> 4   4   1 0.0290521679           0        1 0.4014558005          0       1 #> 5   5   1 0.0984397000           0        1 0.0984397000          0       1 #> 6   6   1 0.0467190512           0        1 0.0467190512          0       1 #> 7   7   1 1.1970408702           0        1 1.1970408702          0       1 #> 8   8   1 0.0914600143           0        1 0.0914600143          0       1 #> 9   9   1 0.1740391511           0        1 0.4797561694          0       1 #> 10 10   1 0.0669849606           0        1 0.0669849606          0       1 #> 11 11   1 0.0183250973           0        1 0.0183250973          0       1 #> 12 12   1 0.0748979707           0        1 0.0748979707          0       1 #> 13 13   1 0.0378583541           0        1 1.0398236834          0       1 #> 14 14   1 0.8564882180           0        1 1.0781238692          0       1 #> 15 15   1 0.0740669305           0        1 0.5514924957          0       1 #> 16 16   1 0.2266543744           0        1 0.2266543744          0       1 #> 17 17   1 0.6146259754           0        1 0.7473521660          0       1 #> 18 18   1 0.1002014077           0        1 0.1002014077          0       1 #> 19 19   1 0.3708130248           0        1 1.1892153053          0       1 #> 20 20   1 0.5121405273           0        1 1.6026970664          0       1 #> 21 21   1 0.1249750119           0        1 0.1249750119          0       1 #> 22 22   1 0.3198303997           0        1 0.5965047805          0       1 #> 23 23   1 0.0101546944           0        1 0.0101546944          0       1 #> 24 24   1 0.0436662644           0        1 0.0436662644          0       1 #> 25 25   1 0.2434898709           0        1 0.2434898709          0       1 #> 26 26   1 0.1254999918           0        1 0.1254999918          0       1 #> 27 27   1 0.2292678100           0        1 0.2956419227          0       1 #> 28 28   1 0.4499335461           0        1 0.4499335461          0       1 #> 29 29   1 0.0007772943           0        1 0.0007772943          0       1 #> 30 30   1 1.3579126659           0        1 1.3579126659          0       1 #> 31 31   2 0.1631144539           0        1 0.8036697087          0       1 #> 32 32   2 0.1674414283           0        1 0.1674414283          0       1 #> 33 33   2 0.3812552098           0        1 1.3292929861          0       1 #> 34 34   2 0.4237612060           0        1 0.4237612060          0       1 #> 35 35   2 0.5834219837           0        1 0.6399333588          0       1 #> 36 36   2 0.2653941743           0        1 0.2653941743          0       1 #> 37 37   2 0.3727146459           0        1 0.3727146459          0       1 #> 38 38   2 0.3973146045           0        1 0.3973146045          0       1 #> 39 39   2 0.3667502014           0        1 0.3667502014          0       1 #> 40 40   2 0.0429461757           0        1 0.0429461757          0       1 #> 41 41   2 0.5443080149           0        1 0.5443080149          0       1 #> 42 42   2 0.1764437995           0        1 0.4117917707          0       1 #> 43 43   2 0.2352831257           0        1 0.2352831257          0       1 #> 44 44   2 0.0196460790           0        1 0.0271103262          0       1 #> 45 45   2 0.0804805123           0        1 0.1550929184          0       1 #> 46 46   2 0.0969404259           0        1 0.0969404259          0       1 #> 47 47   2 0.5627109950           0        1 0.6880157237          0       1 #> 48 48   2 0.9026030484           0        1 1.2719707752          0       1 #> 49 49   2 0.1235704054           0        1 0.1235704054          0       1 #> 50 50   2 0.3981708081           0        1 0.8624516616          0       1 #> 51 51   3 0.4594657688           0        1 0.4594657688          0       1 #> 52 52   3 0.1251391811           0        1 0.1262682581          0       1 #> 53 53   3 1.3438075372           0        1 1.3438075372          0       1 #> 54 54   3 0.7251947416           0        1 2.3865750257          0       1 #> 55 55   3 0.3043318314           0        1 0.6001784215          0       1 #> 56 56   3 1.1346912025           0        1 1.9114513094          0       1 #> 57 57   3 0.5212354515           0        1 0.5212354515          0       1 #> 58 58   3 0.1570238975           0        1 0.9953626874          0       1 #> 59 59   3 0.2994753927           0        1 0.3063574116          0       1 #> 60 60   3 0.4322770645           0        1 0.4322770645          0       1 #> 61 61   3 1.9834377047           0        1 2.0773792705          0       1 #> 62 62   3 1.0263111443           0        1 1.0263111443          0       1 #> 63 63   3 1.1442477067           0        1 2.6578470172          0       1 #> 64 64   3 0.9667957638           0        1 1.0897027185          0       1 #> 65 65   3 0.2497635085           0        1 0.6976538819          0       1 #> 66 66   3 0.1468731254           0        1 0.7709579604          0       1 #> 67 67   3 0.2840875130           0        1 0.7360299225          0       1 #> 68 68   3 0.1335834217           0        1 0.1335834217          0       1 #> 69 69   3 0.3219019261           0        1 0.3219019261          0       1 #> 70 70   3 0.1599954073           0        1 0.1599954073          0       1 #> 71 71   3 0.3750693657           0        1 0.3750693657          0       1 #> 72 72   3 0.2729358338           0        1 0.2729358338          0       1 #> 73 73   3 0.1604183449           0        1 0.1604183449          0       1 #> 74 74   3 0.2973777392           0        1 0.2973777392          0       1 #> 75 75   3 0.3617279388           0        1 0.3617279388          0       1 #> 76 76   3 0.7100506623           0        1 0.7100506623          0       1 #> 77 77   3 0.1327475743           0        1 0.1327475743          0       1 #> 78 78   3 0.0418417170           0        1 0.0418417170          0       1 #> 79 79   3 0.0698837055           0        1 0.0698837055          0       1 #> 80 80   3 0.5552120578           0        1 0.5552120578          0       1 #>    recruitTime    OStimeCal   PFStimeCal #> 1            0 0.3223123286 0.3223123286 #> 2            0 1.0449132260 0.7090484104 #> 3            0 1.8327935276 0.2966917416 #> 4            0 0.4014558005 0.0290521679 #> 5            0 0.0984397000 0.0984397000 #> 6            0 0.0467190512 0.0467190512 #> 7            0 1.1970408702 1.1970408702 #> 8            0 0.0914600143 0.0914600143 #> 9            0 0.4797561694 0.1740391511 #> 10           0 0.0669849606 0.0669849606 #> 11           0 0.0183250973 0.0183250973 #> 12           0 0.0748979707 0.0748979707 #> 13           0 1.0398236834 0.0378583541 #> 14           0 1.0781238692 0.8564882180 #> 15           0 0.5514924957 0.0740669305 #> 16           0 0.2266543744 0.2266543744 #> 17           0 0.7473521660 0.6146259754 #> 18           0 0.1002014077 0.1002014077 #> 19           0 1.1892153053 0.3708130248 #> 20           0 1.6026970664 0.5121405273 #> 21           0 0.1249750119 0.1249750119 #> 22           0 0.5965047805 0.3198303997 #> 23           0 0.0101546944 0.0101546944 #> 24           0 0.0436662644 0.0436662644 #> 25           0 0.2434898709 0.2434898709 #> 26           0 0.1254999918 0.1254999918 #> 27           0 0.2956419227 0.2292678100 #> 28           0 0.4499335461 0.4499335461 #> 29           0 0.0007772943 0.0007772943 #> 30           0 1.3579126659 1.3579126659 #> 31           0 0.8036697087 0.1631144539 #> 32           0 0.1674414283 0.1674414283 #> 33           0 1.3292929861 0.3812552098 #> 34           0 0.4237612060 0.4237612060 #> 35           0 0.6399333588 0.5834219837 #> 36           0 0.2653941743 0.2653941743 #> 37           0 0.3727146459 0.3727146459 #> 38           0 0.3973146045 0.3973146045 #> 39           0 0.3667502014 0.3667502014 #> 40           0 0.0429461757 0.0429461757 #> 41           0 0.5443080149 0.5443080149 #> 42           0 0.4117917707 0.1764437995 #> 43           0 0.2352831257 0.2352831257 #> 44           0 0.0271103262 0.0196460790 #> 45           0 0.1550929184 0.0804805123 #> 46           0 0.0969404259 0.0969404259 #> 47           0 0.6880157237 0.5627109950 #> 48           0 1.2719707752 0.9026030484 #> 49           0 0.1235704054 0.1235704054 #> 50           0 0.8624516616 0.3981708081 #> 51           0 0.4594657688 0.4594657688 #> 52           0 0.1262682581 0.1251391811 #> 53           0 1.3438075372 1.3438075372 #> 54           0 2.3865750257 0.7251947416 #> 55           0 0.6001784215 0.3043318314 #> 56           0 1.9114513094 1.1346912025 #> 57           0 0.5212354515 0.5212354515 #> 58           0 0.9953626874 0.1570238975 #> 59           0 0.3063574116 0.2994753927 #> 60           0 0.4322770645 0.4322770645 #> 61           0 2.0773792705 1.9834377047 #> 62           0 1.0263111443 1.0263111443 #> 63           0 2.6578470172 1.1442477067 #> 64           0 1.0897027185 0.9667957638 #> 65           0 0.6976538819 0.2497635085 #> 66           0 0.7709579604 0.1468731254 #> 67           0 0.7360299225 0.2840875130 #> 68           0 0.1335834217 0.1335834217 #> 69           0 0.3219019261 0.3219019261 #> 70           0 0.1599954073 0.1599954073 #> 71           0 0.3750693657 0.3750693657 #> 72           0 0.2729358338 0.2729358338 #> 73           0 0.1604183449 0.1604183449 #> 74           0 0.2973777392 0.2973777392 #> 75           0 0.3617279388 0.3617279388 #> 76           0 0.7100506623 0.7100506623 #> 77           0 0.1327475743 0.1327475743 #> 78           0 0.0418417170 0.0418417170 #> 79           0 0.0698837055 0.0698837055 #> 80           0 0.5552120578 0.5552120578"},{"path":"https://insightsengineering.github.io/simIDM/reference/getEventsAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of recruited/censored/ongoing Patients. — getEventsAll","title":"Number of recruited/censored/ongoing Patients. — getEventsAll","text":"Number recruited/censored/ongoing Patients.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getEventsAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of recruited/censored/ongoing Patients. — getEventsAll","text":"","code":"getEventsAll(data, t)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getEventsAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of recruited/censored/ongoing Patients. — getEventsAll","text":"data (data.frame) illness-death data set 1rowPatient format. t (numeric)  study time-point.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getEventsAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of recruited/censored/ongoing Patients. — getEventsAll","text":"function returns number recruited patients, number censored number patients observations.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getEventsAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of recruited/censored/ongoing Patients. — getEventsAll","text":"","code":"transition1 <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 0.8, p02 = 0.9, p12 = 1) transition2 <- weibull_transition(h01 = 1, h02 = 1.3, h12 = 1.7, p01 = 1.1, p02 = 0.9, p12 = 1.1)  simStudy <- getOneClinicalTrial(   nPat = c(20, 20), transitionByArm = list(transition1, transition2),   dropout = list(rate = 0.6, time = 10),   accrual = list(param = \"time\", value = 0) ) simStudyWide <- getDatasetWideFormat(simStudy) getEventsAll(data = simStudyWide, t = 1.5) #> Recruited  Censored  UnderObs  #>        40         1         8"},{"path":"https://insightsengineering.github.io/simIDM/reference/getInit.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Initial Parameter Vectors for Likelihood Maximization — getInit","title":"Retrieve Initial Parameter Vectors for Likelihood Maximization — getInit","text":"Retrieve Initial Parameter Vectors Likelihood Maximization","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getInit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Initial Parameter Vectors for Likelihood Maximization — getInit","text":"","code":"getInit(transition)  # S3 method for ExponentialTransition getInit(transition)  # S3 method for WeibullTransition getInit(transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getInit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Initial Parameter Vectors for Likelihood Maximization — getInit","text":"transition (ExponentialTransition WeibullTransition) containing initial parameters. See exponential_transition() weibull_transition() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getInit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Initial Parameter Vectors for Likelihood Maximization — getInit","text":"numeric vector initial parameters likelihood maximization.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getInit.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Retrieve Initial Parameter Vectors for Likelihood Maximization — getInit","text":"getInit(ExponentialTransition): Exponential Transition Model getInit(WeibullTransition): Weibull Transition Model","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getInit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Initial Parameter Vectors for Likelihood Maximization — getInit","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) getInit(transition) #> [1] 1.2 1.5 1.6 transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) getInit(transition) #> [1] 1.2 1.5 1.6 transition <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 2, p02 = 2.5, p12 = 3) getInit(transition) #> [1] 1.2 1.5 1.6 2.0 2.5 3.0"},{"path":"https://insightsengineering.github.io/simIDM/reference/getNumberEvents.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for trackEventsPerTrial — getNumberEvents","title":"Helper Function for trackEventsPerTrial — getNumberEvents","text":"Helper Function trackEventsPerTrial","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getNumberEvents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for trackEventsPerTrial — getNumberEvents","text":"","code":"getNumberEvents(event, time, t)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getNumberEvents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for trackEventsPerTrial — getNumberEvents","text":"event (numeric) event indicator. time (numeric)  event times. t (numeric)  study time-point.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getNumberEvents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for trackEventsPerTrial — getNumberEvents","text":"function returns number events occurred time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getNumberEvents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function for trackEventsPerTrial — getNumberEvents","text":"","code":"event <- c(0, 1, 1, 1, 0) time <- c(3, 3.4, 5, 6, 5.5) getNumberEvents(event = event, time = time, t = 5) #> [1] 2"},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneClinicalTrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of a Single Oncology Clinical Trial — getOneClinicalTrial","title":"Simulation of a Single Oncology Clinical Trial — getOneClinicalTrial","text":"function creates data set single simulated oncology clinical trial one row per transition based illness-death model. Studies arbitrary number treatment arms possible.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneClinicalTrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of a Single Oncology Clinical Trial — getOneClinicalTrial","text":"","code":"getOneClinicalTrial(   nPat,   transitionByArm,   dropout = list(rate = 0, time = 12),   accrual = list(param = \"time\", value = 0) )"},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneClinicalTrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of a Single Oncology Clinical Trial — getOneClinicalTrial","text":"nPat (integer) numbers patients per treatment arm. transitionByArm (list)  transition parameters treatment group. See exponential_transition(), piecewise_exponential() weibull_transition() details. dropout dropout (list) specifies drop-probability. See getSimulatedData() details. Can specified either one list applied treatment groups separate list treatment group. accrual accrual (list) specifies accrual intensity. See addStaggeredEntry() details. Can specified either one list applied treatment groups separate list treatment group.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneClinicalTrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of a Single Oncology Clinical Trial — getOneClinicalTrial","text":"returns data frame one simulated clinical trial multiple treatment arms. See getSimulatedData() explanation columns. column trt contains treatment indicator. helper function getClinicalTrials().","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneClinicalTrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation of a Single Oncology Clinical Trial — getOneClinicalTrial","text":"","code":"transition1 <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) transition2 <- exponential_transition(h01 = 1, h02 = 1.3, h12 = 1.7) transition3 <- exponential_transition(h01 = 1.1, h02 = 1, h12 = 1.5) getOneClinicalTrial(   nPat = c(30, 20, 30), transitionByArm = list(transition1, transition2, transition3),   dropout = list(rate = 0, time = 12),   accrual = list(param = \"time\", value = 0) ) #>     id from to       entry        exit    entryAct     exitAct censAct trt #> 1    1    0  1 0.000000000 1.041846534 0.000000000 1.041846534     Inf   1 #> 2    1    1  2 1.041846534 1.785545401 1.041846534 1.785545401     Inf   1 #> 3    2    0  2 0.000000000 0.477939717 0.000000000 0.477939717     Inf   1 #> 4    3    0  2 0.000000000 0.198632402 0.000000000 0.198632402     Inf   1 #> 5    4    0  1 0.000000000 0.836504820 0.000000000 0.836504820     Inf   1 #> 6    4    1  2 0.836504820 1.675281116 0.836504820 1.675281116     Inf   1 #> 7    5    0  1 0.000000000 0.144586256 0.000000000 0.144586256     Inf   1 #> 8    5    1  2 0.144586256 0.377156364 0.144586256 0.377156364     Inf   1 #> 9    6    0  2 0.000000000 0.738316279 0.000000000 0.738316279     Inf   1 #> 10   7    0  1 0.000000000 0.324248942 0.000000000 0.324248942     Inf   1 #> 11   7    1  2 0.324248942 0.584568619 0.324248942 0.584568619     Inf   1 #> 12   8    0  1 0.000000000 0.120698069 0.000000000 0.120698069     Inf   1 #> 13   8    1  2 0.120698069 0.239101297 0.120698069 0.239101297     Inf   1 #> 14   9    0  1 0.000000000 0.379847986 0.000000000 0.379847986     Inf   1 #> 15   9    1  2 0.379847986 2.304839337 0.379847986 2.304839337     Inf   1 #> 16  10    0  1 0.000000000 0.550436302 0.000000000 0.550436302     Inf   1 #> 17  10    1  2 0.550436302 0.954895366 0.550436302 0.954895366     Inf   1 #> 18  11    0  1 0.000000000 0.065405460 0.000000000 0.065405460     Inf   1 #> 19  11    1  2 0.065405460 0.432720658 0.065405460 0.432720658     Inf   1 #> 20  12    0  1 0.000000000 0.416168752 0.000000000 0.416168752     Inf   1 #> 21  12    1  2 0.416168752 0.425586299 0.416168752 0.425586299     Inf   1 #> 22  13    0  1 0.000000000 0.848635343 0.000000000 0.848635343     Inf   1 #> 23  13    1  2 0.848635343 1.345220684 0.848635343 1.345220684     Inf   1 #> 24  14    0  2 0.000000000 0.293636775 0.000000000 0.293636775     Inf   1 #> 25  15    0  1 0.000000000 0.190591749 0.000000000 0.190591749     Inf   1 #> 26  15    1  2 0.190591749 0.410027811 0.190591749 0.410027811     Inf   1 #> 27  16    0  2 0.000000000 0.074930422 0.000000000 0.074930422     Inf   1 #> 28  17    0  2 0.000000000 0.799729649 0.000000000 0.799729649     Inf   1 #> 29  18    0  1 0.000000000 0.473761520 0.000000000 0.473761520     Inf   1 #> 30  18    1  2 0.473761520 0.856473293 0.473761520 0.856473293     Inf   1 #> 31  19    0  2 0.000000000 0.623404745 0.000000000 0.623404745     Inf   1 #> 32  20    0  1 0.000000000 0.276036099 0.000000000 0.276036099     Inf   1 #> 33  20    1  2 0.276036099 0.378378385 0.276036099 0.378378385     Inf   1 #> 34  21    0  2 0.000000000 0.248112642 0.000000000 0.248112642     Inf   1 #> 35  22    0  2 0.000000000 0.166077237 0.000000000 0.166077237     Inf   1 #> 36  23    0  2 0.000000000 0.119202878 0.000000000 0.119202878     Inf   1 #> 37  24    0  1 0.000000000 0.638967936 0.000000000 0.638967936     Inf   1 #> 38  24    1  2 0.638967936 1.648969622 0.638967936 1.648969622     Inf   1 #> 39  25    0  1 0.000000000 0.485001721 0.000000000 0.485001721     Inf   1 #> 40  25    1  2 0.485001721 1.425102016 0.485001721 1.425102016     Inf   1 #> 41  26    0  2 0.000000000 0.677533459 0.000000000 0.677533459     Inf   1 #> 42  27    0  2 0.000000000 0.424758013 0.000000000 0.424758013     Inf   1 #> 43  28    0  1 0.000000000 0.612796632 0.000000000 0.612796632     Inf   1 #> 44  28    1  2 0.612796632 0.768975224 0.612796632 0.768975224     Inf   1 #> 45  29    0  2 0.000000000 0.063063325 0.000000000 0.063063325     Inf   1 #> 46  30    0  1 0.000000000 0.001675383 0.000000000 0.001675383     Inf   1 #> 47  30    1  2 0.001675383 0.014149445 0.001675383 0.014149445     Inf   1 #> 48  31    0  2 0.000000000 0.376999758 0.000000000 0.376999758     Inf   2 #> 49  32    0  1 0.000000000 0.004662485 0.000000000 0.004662485     Inf   2 #> 50  32    1  2 0.004662485 2.686381115 0.004662485 2.686381115     Inf   2 #> 51  33    0  2 0.000000000 0.549150618 0.000000000 0.549150618     Inf   2 #> 52  34    0  2 0.000000000 0.252850824 0.000000000 0.252850824     Inf   2 #> 53  35    0  2 0.000000000 0.048971014 0.000000000 0.048971014     Inf   2 #> 54  36    0  2 0.000000000 1.190994143 0.000000000 1.190994143     Inf   2 #> 55  37    0  1 0.000000000 0.387723021 0.000000000 0.387723021     Inf   2 #> 56  37    1  2 0.387723021 1.677378489 0.387723021 1.677378489     Inf   2 #> 57  38    0  2 0.000000000 0.153998393 0.000000000 0.153998393     Inf   2 #> 58  39    0  2 0.000000000 0.140612650 0.000000000 0.140612650     Inf   2 #> 59  40    0  2 0.000000000 0.115334711 0.000000000 0.115334711     Inf   2 #> 60  41    0  2 0.000000000 1.117426714 0.000000000 1.117426714     Inf   2 #> 61  42    0  2 0.000000000 0.369076069 0.000000000 0.369076069     Inf   2 #> 62  43    0  1 0.000000000 0.619694733 0.000000000 0.619694733     Inf   2 #> 63  43    1  2 0.619694733 0.747321687 0.619694733 0.747321687     Inf   2 #> 64  44    0  2 0.000000000 0.069418866 0.000000000 0.069418866     Inf   2 #> 65  45    0  2 0.000000000 0.018769671 0.000000000 0.018769671     Inf   2 #> 66  46    0  2 0.000000000 0.180340436 0.000000000 0.180340436     Inf   2 #> 67  47    0  1 0.000000000 0.748051530 0.000000000 0.748051530     Inf   2 #> 68  47    1  2 0.748051530 0.826597896 0.748051530 0.826597896     Inf   2 #> 69  48    0  2 0.000000000 1.073077454 0.000000000 1.073077454     Inf   2 #> 70  49    0  2 0.000000000 0.383623952 0.000000000 0.383623952     Inf   2 #> 71  50    0  2 0.000000000 0.341823002 0.000000000 0.341823002     Inf   2 #> 72  51    0  2 0.000000000 1.324966440 0.000000000 1.324966440     Inf   3 #> 73  52    0  1 0.000000000 0.227653135 0.000000000 0.227653135     Inf   3 #> 74  52    1  2 0.227653135 0.640835097 0.227653135 0.640835097     Inf   3 #> 75  53    0  1 0.000000000 0.026038723 0.000000000 0.026038723     Inf   3 #> 76  53    1  2 0.026038723 0.636689636 0.026038723 0.636689636     Inf   3 #> 77  54    0  2 0.000000000 0.155402816 0.000000000 0.155402816     Inf   3 #> 78  55    0  1 0.000000000 0.072191253 0.000000000 0.072191253     Inf   3 #> 79  55    1  2 0.072191253 0.556745505 0.072191253 0.556745505     Inf   3 #> 80  56    0  1 0.000000000 0.727734457 0.000000000 0.727734457     Inf   3 #> 81  56    1  2 0.727734457 1.128613158 0.727734457 1.128613158     Inf   3 #> 82  57    0  2 0.000000000 0.096652997 0.000000000 0.096652997     Inf   3 #> 83  58    0  2 0.000000000 1.041313011 0.000000000 1.041313011     Inf   3 #> 84  59    0  1 0.000000000 0.031554070 0.000000000 0.031554070     Inf   3 #> 85  59    1  2 0.031554070 0.378476550 0.031554070 0.378476550     Inf   3 #> 86  60    0  2 0.000000000 1.049345811 0.000000000 1.049345811     Inf   3 #> 87  61    0  2 0.000000000 1.274462026 0.000000000 1.274462026     Inf   3 #> 88  62    0  1 0.000000000 0.262239182 0.000000000 0.262239182     Inf   3 #> 89  62    1  2 0.262239182 1.185368013 0.262239182 1.185368013     Inf   3 #> 90  63    0  2 0.000000000 0.901371136 0.000000000 0.901371136     Inf   3 #> 91  64    0  2 0.000000000 0.009099860 0.000000000 0.009099860     Inf   3 #> 92  65    0  2 0.000000000 1.173042134 0.000000000 1.173042134     Inf   3 #> 93  66    0  2 0.000000000 0.218041763 0.000000000 0.218041763     Inf   3 #> 94  67    0  2 0.000000000 0.150703354 0.000000000 0.150703354     Inf   3 #> 95  68    0  2 0.000000000 0.176833163 0.000000000 0.176833163     Inf   3 #> 96  69    0  2 0.000000000 0.363713581 0.000000000 0.363713581     Inf   3 #> 97  70    0  2 0.000000000 0.290230965 0.000000000 0.290230965     Inf   3 #> 98  71    0  2 0.000000000 0.965436826 0.000000000 0.965436826     Inf   3 #> 99  72    0  2 0.000000000 1.290563037 0.000000000 1.290563037     Inf   3 #> 100 73    0  1 0.000000000 0.921337732 0.000000000 0.921337732     Inf   3 #> 101 73    1  2 0.921337732 1.411323176 0.921337732 1.411323176     Inf   3 #> 102 74    0  1 0.000000000 0.370194057 0.000000000 0.370194057     Inf   3 #> 103 74    1  2 0.370194057 0.998483516 0.370194057 0.998483516     Inf   3 #> 104 75    0  2 0.000000000 0.593267184 0.000000000 0.593267184     Inf   3 #> 105 76    0  2 0.000000000 0.087529620 0.000000000 0.087529620     Inf   3 #> 106 77    0  2 0.000000000 0.394015487 0.000000000 0.394015487     Inf   3 #> 107 78    0  1 0.000000000 0.473727459 0.000000000 0.473727459     Inf   3 #> 108 78    1  2 0.473727459 0.489373740 0.473727459 0.489373740     Inf   3 #> 109 79    0  1 0.000000000 0.062052474 0.000000000 0.062052474     Inf   3 #> 110 79    1  2 0.062052474 0.130825736 0.062052474 0.130825736     Inf   3 #> 111 80    0  1 0.000000000 0.138737238 0.000000000 0.138737238     Inf   3 #> 112 80    1  2 0.138737238 0.811405377 0.138737238 0.811405377     Inf   3"},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneToTwoRows.html","id":null,"dir":"Reference","previous_headings":"","what":"Transitions from the Intermediate State to the Absorbing State — getOneToTwoRows","title":"Transitions from the Intermediate State to the Absorbing State — getOneToTwoRows","text":"function creates transition entry exit times intermediate state absorbing state existing data frame containing exit times initial state.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneToTwoRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transitions from the Intermediate State to the Absorbing State — getOneToTwoRows","text":"","code":"getOneToTwoRows(simDataOne, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneToTwoRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transitions from the Intermediate State to the Absorbing State — getOneToTwoRows","text":"simDataOne (data.frame) data frame containing patients transitions intermediate state. See getSimulatedData() details. transition (TransitionParameters) transition parameters comprising hazards, corresponding intervals weibull_rates, see exponential_transition(), piecewise_exponential() weibull_transition() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneToTwoRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transitions from the Intermediate State to the Absorbing State — getOneToTwoRows","text":"returns data frame one row per patient second transition, .e. transition intermediate state. helper function getSimulatedData().","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getOneToTwoRows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transitions from the Intermediate State to the Absorbing State — getOneToTwoRows","text":"","code":"simDataOne <- data.frame(   id = c(1:3), to = c(1, 1, 1), from = c(0, 0, 0), entry = c(0, 0, 0),   exit = c(3, 5.6, 7.2), censTime = c(6.8, 5.9, 9.4) ) transition <- exponential_transition(1, 1.6, 0.3) getOneToTwoRows(simDataOne, transition) #>   id from   to entry     exit censTime #> 1  1    1    2   3.0 4.001717      6.8 #> 2  2    1 cens   5.6 5.900000      5.9 #> 3  3    1    2   7.2 8.366805      9.4"},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWDistr.html","id":null,"dir":"Reference","previous_headings":"","what":"Piecewise Exponentially Distributed Event Times — getPCWDistr","title":"Piecewise Exponentially Distributed Event Times — getPCWDistr","text":"returns event times distribution resulting piece-wise constant hazards using inversion method.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWDistr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Piecewise Exponentially Distributed Event Times — getPCWDistr","text":"","code":"getPCWDistr(U, haz, pw, t_0)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWDistr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Piecewise Exponentially Distributed Event Times — getPCWDistr","text":"U (numeric) uniformly distributed random variables. haz (numeric) piecewise constant hazard. pw (numeric) time intervals piecewise constant hazard. t_0 (numeric) starting times.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWDistr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Piecewise Exponentially Distributed Event Times — getPCWDistr","text":"returns vector event times.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWDistr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Piecewise Exponentially Distributed Event Times — getPCWDistr","text":"","code":"getPCWDistr(U = runif(3), haz = c(1.1, 0.5, 0.4), pw = c(0, 7, 10), t_0 = c(0, 1, 4.2)) #> [1] 0.338923881 0.265666910 0.001900963"},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWHazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Piecewise Constant Hazard Values — getPCWHazard","title":"Piecewise Constant Hazard Values — getPCWHazard","text":"returns piecewise constant hazard values specified time points.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWHazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Piecewise Constant Hazard Values — getPCWHazard","text":"","code":"getPCWHazard(haz, pw, x)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWHazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Piecewise Constant Hazard Values — getPCWHazard","text":"haz (numeric) piecewise constant input hazard. pw (numeric) time intervals piecewise constant hazard. x (numeric) time-points.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWHazard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Piecewise Constant Hazard Values — getPCWHazard","text":"Hazard values input time-points.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getPCWHazard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Piecewise Constant Hazard Values — getPCWHazard","text":"","code":"getPCWHazard(c(1, 1.2, 1.4), c(0, 2, 3), c(1, 4, 6)) #> [1] 1.0 1.4 1.4"},{"path":"https://insightsengineering.github.io/simIDM/reference/getResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Results of Parameter Estimation for Different Transition Models — getResults","title":"Format Results of Parameter Estimation for Different Transition Models — getResults","text":"Format Results Parameter Estimation Different Transition Models","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Results of Parameter Estimation for Different Transition Models — getResults","text":"","code":"getResults(transition, res)  # S3 method for ExponentialTransition getResults(transition, res)  # S3 method for WeibullTransition getResults(transition, res)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Results of Parameter Estimation for Different Transition Models — getResults","text":"transition (TransitionParameters) see exponential_transition() weibull_transition() details. res (numeric vector) vector parameter estimates likelihood maximization procedure.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Results of Parameter Estimation for Different Transition Models — getResults","text":"Returns TransitionParameters object parameter estimates.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getResults.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Format Results of Parameter Estimation for Different Transition Models — getResults","text":"getResults(ExponentialTransition): Exponential Transition Model getResults(WeibullTransition): Weibull Transition Model","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Results of Parameter Estimation for Different Transition Models — getResults","text":"","code":"results <- c(1.2, 1.5, 1.6) getResults(exponential_transition(), results) #> $hazards #> $hazards$h01 #> [1] 1.2 #>  #> $hazards$h02 #> [1] 1.5 #>  #> $hazards$h12 #> [1] 1.6 #>  #>  #> $intervals #> $intervals$pw01 #> [1] 0 #>  #> $intervals$pw02 #> [1] 0 #>  #> $intervals$pw12 #> [1] 0 #>  #>  #> $weibull_rates #> $weibull_rates$p01 #> [1] 1 #>  #> $weibull_rates$p02 #> [1] 1 #>  #> $weibull_rates$p12 #> [1] 1 #>  #>  #> $family #> [1] \"exponential\" #>  #> attr(,\"class\") #> [1] \"ExponentialTransition\" \"TransitionParameters\"  results <- c(1.2, 1.5, 1.6) getResults(exponential_transition(), results) #> $hazards #> $hazards$h01 #> [1] 1.2 #>  #> $hazards$h02 #> [1] 1.5 #>  #> $hazards$h12 #> [1] 1.6 #>  #>  #> $intervals #> $intervals$pw01 #> [1] 0 #>  #> $intervals$pw02 #> [1] 0 #>  #> $intervals$pw12 #> [1] 0 #>  #>  #> $weibull_rates #> $weibull_rates$p01 #> [1] 1 #>  #> $weibull_rates$p02 #> [1] 1 #>  #> $weibull_rates$p12 #> [1] 1 #>  #>  #> $family #> [1] \"exponential\" #>  #> attr(,\"class\") #> [1] \"ExponentialTransition\" \"TransitionParameters\"  results <- c(1.2, 1.5, 1.6, 2, 2.5, 1) getResults(weibull_transition(), results) #> $hazards #> $hazards$h01 #> [1] 1.2 #>  #> $hazards$h02 #> [1] 1.5 #>  #> $hazards$h12 #> [1] 1.6 #>  #>  #> $weibull_rates #> $weibull_rates$p01 #> [1] 2 #>  #> $weibull_rates$p02 #> [1] 2.5 #>  #> $weibull_rates$p12 #> [1] 1 #>  #>  #> $intervals #> $intervals$pw01 #> [1] 0 #>  #> $intervals$pw02 #> [1] 0 #>  #> $intervals$pw12 #> [1] 0 #>  #>  #> $family #> [1] \"Weibull\" #>  #> attr(,\"class\") #> [1] \"WeibullTransition\"    \"TransitionParameters\""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSimulatedData.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data Set from an Illness-Death Model — getSimulatedData","title":"Simulate Data Set from an Illness-Death Model — getSimulatedData","text":"function creates single simulated data set single treatment arm. simulates data illness-death model one row per transition subject.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSimulatedData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data Set from an Illness-Death Model — getSimulatedData","text":"","code":"getSimulatedData(   N,   transition = exponential_transition(h01 = 1, h02 = 1, h12 = 1),   dropout = list(rate = 0, time = 12),   accrual = list(param = \"time\", value = 0) )"},{"path":"https://insightsengineering.github.io/simIDM/reference/getSimulatedData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data Set from an Illness-Death Model — getSimulatedData","text":"N (int) number patients. transition (TransitionParameters) transition parameters comprising hazards, corresponding intervals weibull_rates, see exponential_transition(), piecewise_exponential() weibull_transition() details. dropout (list) specifies drop-probability. Random censoring times generated using exponential distribution. dropout$rate specifies drop-probability per dropout$time time units. dropout$rate equal 0, censoring applied. accrual (list) specifies accrual intensity. See addStaggeredEntry() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSimulatedData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data Set from an Illness-Death Model — getSimulatedData","text":"returns data frame one row per transition per individual.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSimulatedData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data Set from an Illness-Death Model — getSimulatedData","text":"output data set contains following columns: id (integer): patient id. (numeric): starting state transition. (character): final state transition. entry (numeric): entry time transition individual time scale. exit (numeric): exit time transition individual time scale. entryAct (numeric): entry time transition study time scale. exitAct (numeric):  exit time  transition study time scale. censAct (numeric):  censoring time individual study time scale.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSimulatedData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data Set from an Illness-Death Model — getSimulatedData","text":"","code":"getSimulatedData(   N = 10,   transition = exponential_transition(h01 = 1, h02 = 1.5, h12 = 1),   dropout = list(rate = 0.3, time = 1),   accrual = list(param = \"time\", value = 5) ) #>    id from to     entry        exit  entryAct   exitAct   censAct #> 1   1    0  1 0.0000000 0.620109694 2.2084749 2.8285846  4.641584 #> 2   1    1  2 0.6201097 1.133229600 2.8285846 3.3417045  4.641584 #> 3   2    0  2 0.0000000 0.008524979 4.7083564 4.7168814  7.666176 #> 4   3    0  1 0.0000000 0.179999738 4.4569281 4.6369278 10.992647 #> 5   3    1  2 0.1799997 2.352246465 4.6369278 6.8091746 10.992647 #> 6   4    0  2 0.0000000 0.100762491 0.7384638 0.8392262  9.039251 #> 7   5    0  2 0.0000000 0.269376008 2.7693123 3.0386883  3.476619 #> 8   6    0  2 0.0000000 0.251356782 4.2223962 4.4737530  9.877679 #> 9   7    0  2 0.0000000 0.895647415 2.6340240 3.5296714  7.783116 #> 10  8    0  2 0.0000000 0.099131641 3.7638254 3.8629571  4.624288 #> 11  9    0  1 0.0000000 0.522817343 1.2393274 1.7621448  3.094538 #> 12  9    1  2 0.5228173 1.329566488 1.7621448 2.5688939  3.094538 #> 13 10    0  1 0.0000000 0.126395549 3.1352993 3.2616948 16.829769 #> 14 10    1  2 0.1263955 0.478119852 3.2616948 3.6134191 16.829769"},{"path":"https://insightsengineering.github.io/simIDM/reference/getSumPCW.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum of Two Piecewise Constant Hazards — getSumPCW","title":"Sum of Two Piecewise Constant Hazards — getSumPCW","text":"returns sum two piecewise constant hazards per interval.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSumPCW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum of Two Piecewise Constant Hazards — getSumPCW","text":"","code":"getSumPCW(haz1, haz2, pw1, pw2)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getSumPCW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum of Two Piecewise Constant Hazards — getSumPCW","text":"haz1 (numeric) first summand (piecewise constant hazard). haz2 (numeric) second summand (piecewise constant hazard). pw1 (numeric) time intervals first summand. pw2 (numeric) time intervals second summand.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSumPCW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum of Two Piecewise Constant Hazards — getSumPCW","text":"List elements hazards intervals sum two piecewise constant hazards.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getSumPCW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum of Two Piecewise Constant Hazards — getSumPCW","text":"","code":"getSumPCW(c(1.2, 0.3, 0.6), c(1.2, 0.7, 1), c(0, 8, 9), c(0, 1, 4)) #> $hazards #> [1] 2.4 1.9 2.2 1.3 1.6 #>  #> $intervals #> [1] 0 1 4 8 9 #>"},{"path":"https://insightsengineering.github.io/simIDM/reference/getTarget.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the Target Function for Optimization — getTarget","title":"Generate the Target Function for Optimization — getTarget","text":"Generate Target Function Optimization","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTarget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the Target Function for Optimization — getTarget","text":"","code":"getTarget(transition)  # S3 method for ExponentialTransition getTarget(transition)  # S3 method for WeibullTransition getTarget(transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getTarget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the Target Function for Optimization — getTarget","text":"transition (TransitionParameters) specifying distribution family. See exponential_transition() weibull_transition() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTarget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the Target Function for Optimization — getTarget","text":"Function calculates negative log-likelihood given parameters.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTarget.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate the Target Function for Optimization — getTarget","text":"function creates target function optimization, computing negative log-likelihood given parameters, data, transition model type.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTarget.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Generate the Target Function for Optimization — getTarget","text":"getTarget(ExponentialTransition): Exponential Transition Model getTarget(WeibullTransition): Weibull Transition Model","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTarget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the Target Function for Optimization — getTarget","text":"","code":"transition <- exponential_transition(2, 1.3, 0.8) simData <- getOneClinicalTrial(   nPat = c(30), transitionByArm = list(transition),   dropout = list(rate = 0.8, time = 12),   accrual = list(param = \"time\", value = 1) ) params <- c(1.2, 1.5, 1.6) # For ExponentialTransition data <- prepareData(simData) transition <- exponential_transition() fun <- getTarget(transition) fun(params, data) #> [1] 45.08181 transition <- exponential_transition(2, 1.3, 0.8) simData <- getOneClinicalTrial(   nPat = c(30), transitionByArm = list(transition),   dropout = list(rate = 0.8, time = 12),   accrual = list(param = \"time\", value = 1) ) params <- c(1.2, 1.5, 1.6) data <- prepareData(simData) transition <- exponential_transition() target <- getTarget(transition) target(params, data) #> [1] 48.55708 transition <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 2, p02 = 2.5, p12 = 3) simData <- getOneClinicalTrial(   nPat = c(30), transitionByArm = list(transition),   dropout = list(rate = 0.8, time = 12),   accrual = list(param = \"time\", value = 1) ) params <- c(1.2, 1.5, 1.6, 0.8, 1.3, 1.1) data <- prepareData(simData) transition <- weibull_transition() target <- getTarget(transition) target(params, data) #> [1] 34.37237"},{"path":"https://insightsengineering.github.io/simIDM/reference/getTimePoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Time-point by which a specified number of events occurred. — getTimePoint","title":"Time-point by which a specified number of events occurred. — getTimePoint","text":"returns study time-point specified number events (PFS OS) occurred.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTimePoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time-point by which a specified number of events occurred. — getTimePoint","text":"","code":"getTimePoint(data, eventNum, typeEvent, byArm = FALSE)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getTimePoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time-point by which a specified number of events occurred. — getTimePoint","text":"data (data.frame) illness-death data set 1rowPatient format. eventNum (int) number events. typeEvent (string) type event. Possible values PFS OS. byArm (logical) TRUE time-point per treatment arm, else joint evaluation treatment arms.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTimePoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time-point by which a specified number of events occurred. — getTimePoint","text":"returns  time-point eventNum typeEvent-events occurred.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getTimePoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time-point by which a specified number of events occurred. — getTimePoint","text":"","code":"transition1 <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 0.8, p02 = 0.9, p12 = 1) transition2 <- weibull_transition(h01 = 1, h02 = 1.3, h12 = 1.7, p01 = 1.1, p02 = 0.9, p12 = 1.1)  simStudy <- getOneClinicalTrial(   nPat = c(20, 20), transitionByArm = list(transition1, transition2),   dropout = list(rate = 0.3, time = 10),   accrual = list(param = \"time\", value = 0) ) simStudyWide <- getDatasetWideFormat(simStudy) getTimePoint(simStudyWide, eventNum = 10, typeEvent = \"OS\", byArm = FALSE) #>      all  #> 0.124277"},{"path":"https://insightsengineering.github.io/simIDM/reference/getWaitTimeSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Times Distributed as Sum of Weibull — getWaitTimeSum","title":"Event Times Distributed as Sum of Weibull — getWaitTimeSum","text":"returns event times distribution resulting sum two Weibull distributed random variables using inversion method.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getWaitTimeSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Times Distributed as Sum of Weibull — getWaitTimeSum","text":"","code":"getWaitTimeSum(U, haz1, haz2, p1, p2, entry)"},{"path":"https://insightsengineering.github.io/simIDM/reference/getWaitTimeSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Times Distributed as Sum of Weibull — getWaitTimeSum","text":"U (numeric) uniformly distributed random variables. haz1 (positive number)  first summand (constant hazard). haz2 (positive number)  second summand (constant hazard). p1 (positive number) rate parameter Weibull distribution haz1. p2 (positive number) rate parameter Weibull distribution haz2. entry (numeric) entry times current state.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getWaitTimeSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Times Distributed as Sum of Weibull — getWaitTimeSum","text":"returns vector event times.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/getWaitTimeSum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Times Distributed as Sum of Weibull — getWaitTimeSum","text":"","code":"getWaitTimeSum(U = c(0.4, 0.5), haz1 = 0.8, haz2 = 1, p1 = 1.1, p2 = 1.5, entry = c(0, 0)) #> [1] 0.3803563 0.4820279"},{"path":"https://insightsengineering.github.io/simIDM/reference/haz.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard Function for Different Transition Models — haz","title":"Hazard Function for Different Transition Models — haz","text":"Hazard Function Different Transition Models","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/haz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard Function for Different Transition Models — haz","text":"","code":"haz(transition, t, trans)  # S3 method for ExponentialTransition haz(transition, t, trans)  # S3 method for WeibullTransition haz(transition, t, trans)  # S3 method for PWCTransition haz(transition, t, trans)"},{"path":"https://insightsengineering.github.io/simIDM/reference/haz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard Function for Different Transition Models — haz","text":"transition (ExponentialTransition WeibullTransition) see exponential_transition() weibull_transition() details. t (numeric) time hazard computed. trans (integer) index specifying transition type.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/haz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hazard Function for Different Transition Models — haz","text":"hazard rate specified transition time.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/haz.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Hazard Function for Different Transition Models — haz","text":"haz(ExponentialTransition): exponential transition model. haz(WeibullTransition): Weibull transition model. haz(PWCTransition): piecewise constant transition model.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/haz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hazard Function for Different Transition Models — haz","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) haz(transition, 0.4, 2) #> [1] 1.5 transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) haz(transition, 0.4, 2) #> [1] 1.5 transition <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 2, p02 = 2.5, p12 = 3) haz(transition, 0.4, 2) #> [1] 0.9486833 transition <- piecewise_exponential(   h01 = c(1, 1, 1), h02 = c(1.5, 0.5, 1), h12 = c(1, 1, 1),   pw01 = c(0, 3, 8), pw02 = c(0, 6, 7), pw12 = c(0, 8, 9) ) haz(transition, 6, 2) #> [1] 0.5"},{"path":"https://insightsengineering.github.io/simIDM/reference/integrateVector.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for Efficient Integration — integrateVector","title":"Helper for Efficient Integration — integrateVector","text":"Helper Efficient Integration","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/integrateVector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for Efficient Integration — integrateVector","text":"","code":"integrateVector(integrand, upper, ...)"},{"path":"https://insightsengineering.github.io/simIDM/reference/integrateVector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for Efficient Integration — integrateVector","text":"integrand (function)  integrated. upper (numeric) upper limits integration. ... additional arguments passed integrand.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/integrateVector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper for Efficient Integration — integrateVector","text":"function returns upper limit estimates integral.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/integrateVector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper for Efficient Integration — integrateVector","text":"","code":"integrand <- function(x) x^2 upper <- c(0, 1, 0.4, 2, 5, 2, 0.3, 0.4, 1) integrateVector(integrand, upper = upper) #> [1]  0.00000000  0.33333333  0.02133333  2.66666667 41.66666667  2.66666667 #> [7]  0.00900000  0.02133333  0.33333333"},{"path":"https://insightsengineering.github.io/simIDM/reference/logRankTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Rank Test for a Single Trial — logRankTest","title":"Log-Rank Test for a Single Trial — logRankTest","text":"function evaluates significance either PFS OS endpoints trial, based pre-specified critical value.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/logRankTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Rank Test for a Single Trial — logRankTest","text":"","code":"logRankTest(data, typeEvent = c(\"PFS\", \"OS\"), critical)"},{"path":"https://insightsengineering.github.io/simIDM/reference/logRankTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Rank Test for a Single Trial — logRankTest","text":"data (data.frame) data frame containing entry exit times illness-death model. See getSimulatedData() details. typeEvent (string) endpoint evaluated, possible values PFS OS. critical (positive number) critical value log-rank test.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/logRankTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-Rank Test for a Single Trial — logRankTest","text":"Logical value indicating log-rank test significance.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/logRankTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-Rank Test for a Single Trial — logRankTest","text":"","code":"transition1 <- exponential_transition(h01 = 0.06, h02 = 0.3, h12 = 0.3) transition2 <- exponential_transition(h01 = 0.1, h02 = 0.4, h12 = 0.3) simTrial <- getClinicalTrials(   nRep = 1, nPat = c(800, 800), seed = 1234, datType = \"1rowPatient\",   transitionByArm = list(transition1, transition2), dropout = list(rate = 0.5, time = 12),   accrual = list(param = \"intensity\", value = 7) )[[1]] #> Simulating 1 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% logRankTest(data = simTrial, typeEvent = \"OS\", critical = 3.4) #> [1] TRUE"},{"path":"https://insightsengineering.github.io/simIDM/reference/log_p11.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of Remaining in Progression Between Two Time Points for Different Transition Models. — log_p11","title":"Probability of Remaining in Progression Between Two Time Points for Different Transition Models. — log_p11","text":"Probability Remaining Progression Two Time Points Different Transition Models.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/log_p11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of Remaining in Progression Between Two Time Points for Different Transition Models. — log_p11","text":"","code":"log_p11(transition, s, t)"},{"path":"https://insightsengineering.github.io/simIDM/reference/log_p11.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of Remaining in Progression Between Two Time Points for Different Transition Models. — log_p11","text":"transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details. s (numeric) lower time point. t (numeric) higher time point.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/log_p11.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of Remaining in Progression Between Two Time Points for Different Transition Models. — log_p11","text":"returns natural logarithm probability remaining progression (state 1) two time points, conditional state 1 lower time point.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/log_p11.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of Remaining in Progression Between Two Time Points for Different Transition Models. — log_p11","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) log_p11(transition, 1, 3) #> [1] -3.2"},{"path":"https://insightsengineering.github.io/simIDM/reference/negLogLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Negative Log-Likelihood for a Given Data Set and Transition Model — negLogLik","title":"Compute the Negative Log-Likelihood for a Given Data Set and Transition Model — negLogLik","text":"Compute Negative Log-Likelihood Given Data Set Transition Model","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/negLogLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Negative Log-Likelihood for a Given Data Set and Transition Model — negLogLik","text":"","code":"negLogLik(transition, data)"},{"path":"https://insightsengineering.github.io/simIDM/reference/negLogLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Negative Log-Likelihood for a Given Data Set and Transition Model — negLogLik","text":"transition (ExponentialTransition WeibullTransition) see exponential_transition() weibull_transition() details. data (data.frame) format created prepareData().","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/negLogLik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Negative Log-Likelihood for a Given Data Set and Transition Model — negLogLik","text":"value negative log-likelihood.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/negLogLik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Negative Log-Likelihood for a Given Data Set and Transition Model — negLogLik","text":"Calculates negative log-likelihood given data set transition model. uses hazard survival functions specific transition model.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/negLogLik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Negative Log-Likelihood for a Given Data Set and Transition Model — negLogLik","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) simData <- getOneClinicalTrial(   nPat = c(30), transitionByArm = list(transition),   dropout = list(rate = 0.8, time = 12),   accrual = list(param = \"time\", value = 1) ) negLogLik(transition, prepareData(simData)) #> [1] 24.68872"},{"path":"https://insightsengineering.github.io/simIDM/reference/p11Integ.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for log_p11() — p11Integ","title":"Helper Function for log_p11() — p11Integ","text":"Helper Function log_p11()","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/p11Integ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for log_p11() — p11Integ","text":"","code":"p11Integ(x, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/p11Integ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for log_p11() — p11Integ","text":"x (numeric) variable integration. transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/p11Integ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for log_p11() — p11Integ","text":"Hazard rate specified time transition progression death.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/p11Integ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function for log_p11() — p11Integ","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) p11Integ(2, transition) #> [1] 1.6"},{"path":"https://insightsengineering.github.io/simIDM/reference/passedLogRank.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to conduct log-rank tests for either PFS or OS — passedLogRank","title":"Helper function to conduct log-rank tests for either PFS or OS — passedLogRank","text":"function evaluates significance either PFS OS endpoints trial list trials, based pre-specified critical value.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/passedLogRank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to conduct log-rank tests for either PFS or OS — passedLogRank","text":"","code":"passedLogRank(simTrials, typeEvent, eventNum, critical)"},{"path":"https://insightsengineering.github.io/simIDM/reference/passedLogRank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to conduct log-rank tests for either PFS or OS — passedLogRank","text":"simTrials (list) simulated trial data sets, see getClinicalTrials(). typeEvent (string) endpoint evaluated, possible values PFS OS. eventNum (integer) number events required trigger analysis. critical (positive number) critical value log-rank test.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/passedLogRank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to conduct log-rank tests for either PFS or OS — passedLogRank","text":"Logical vector indicating log-rank test significance trial.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/passedLogRank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to conduct log-rank tests for either PFS or OS — passedLogRank","text":"","code":"transition1 <- exponential_transition(h01 = 0.06, h02 = 0.3, h12 = 0.3) transition2 <- exponential_transition(h01 = 0.1, h02 = 0.4, h12 = 0.3) simTrials <- getClinicalTrials(   nRep = 50, nPat = c(800, 800), seed = 1234, datType = \"1rowPatient\",   transitionByArm = list(transition1, transition2), dropout = list(rate = 0.5, time = 12),   accrual = list(param = \"intensity\", value = 7) ) #> Simulating 50 trials: #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   2%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |======                                                                |   8%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  16%   |                                                                               |=============                                                         |  18%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  22%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  32%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  42%   |                                                                               |===============================                                       |  44%   |                                                                               |================================                                      |  46%   |                                                                               |==================================                                    |  48%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  52%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  56%   |                                                                               |=========================================                             |  58%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |================================================                      |  68%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  72%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  86%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |===================================================================   |  96%   |                                                                               |===================================================================== |  98%   |                                                                               |======================================================================| 100% passedLogRank(simTrials = simTrials, typeEvent = \"PFS\", eventNum = 300, critical = 2.4) #>  [1]  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE #> [13] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE #> [25] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE #> [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE #> [49]  TRUE  TRUE"},{"path":"https://insightsengineering.github.io/simIDM/reference/piecewise_exponential.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Hazards for Piecewise Exponential Event Times — piecewise_exponential","title":"Transition Hazards for Piecewise Exponential Event Times — piecewise_exponential","text":"creates list class TransitionParameters containing hazards, time intervals Weibull rates piecewise exponential event times illness-death model.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/piecewise_exponential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Hazards for Piecewise Exponential Event Times — piecewise_exponential","text":"","code":"piecewise_exponential(h01, h02, h12, pw01, pw02, pw12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/piecewise_exponential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Hazards for Piecewise Exponential Event Times — piecewise_exponential","text":"h01 (numeric vector) constant transition hazards 0 1 transition h02 (numeric vector)  constant transition hazards 0 2 transition h12 (numeric vector)  constant transition hazards 1 2 transition pw01 (numeric vector) time intervals piecewise constant hazards h01 pw02 (numeric vector) time intervals piecewise constant hazards h02 pw12 (numeric vector)  time intervals piecewise constant hazards h12","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/piecewise_exponential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Hazards for Piecewise Exponential Event Times — piecewise_exponential","text":"List elements hazards, intervals, weibull_rates family (piecewise exponential).","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/piecewise_exponential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition Hazards for Piecewise Exponential Event Times — piecewise_exponential","text":"","code":"piecewise_exponential(   h01 = c(1, 1, 1), h02 = c(1.5, 0.5, 1), h12 = c(1, 1, 1),   pw01 = c(0, 3, 8), pw02 = c(0, 6, 7), pw12 = c(0, 8, 9) ) #> $hazards #> $hazards$h01 #> [1] 1 1 1 #>  #> $hazards$h02 #> [1] 1.5 0.5 1.0 #>  #> $hazards$h12 #> [1] 1 1 1 #>  #>  #> $intervals #> $intervals$pw01 #> [1] 0 3 8 #>  #> $intervals$pw02 #> [1] 0 6 7 #>  #> $intervals$pw12 #> [1] 0 8 9 #>  #>  #> $weibull_rates #> $weibull_rates$p01 #> [1] 1 #>  #> $weibull_rates$p02 #> [1] 1 #>  #> $weibull_rates$p12 #> [1] 1 #>  #>  #> $family #> [1] \"piecewise exponential\" #>  #> attr(,\"class\") #> [1] \"PWCTransition\"        \"TransitionParameters\""},{"path":"https://insightsengineering.github.io/simIDM/reference/prepareData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparation of a Data Set to Compute Log-likelihood — prepareData","title":"Preparation of a Data Set to Compute Log-likelihood — prepareData","text":"Preparation Data Set Compute Log-likelihood","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/prepareData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparation of a Data Set to Compute Log-likelihood — prepareData","text":"","code":"prepareData(data)"},{"path":"https://insightsengineering.github.io/simIDM/reference/prepareData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparation of a Data Set to Compute Log-likelihood — prepareData","text":"data (data.frame) containing entry exit times illness-death model. See getOneClinicalTrial() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/prepareData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preparation of a Data Set to Compute Log-likelihood — prepareData","text":"function returns data set one row per patient transition, patient risk.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/prepareData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preparation of a Data Set to Compute Log-likelihood — prepareData","text":"output data set contains following columns: id (integer): patient id. (integer): start event state. (integer): end event state. trans (integer): transition (1, 2 3) identifier. entry (numeric): time patient begins risk transition. exit (numeric): time patient ends risk transition. status (logical): event indicator transition.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/prepareData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preparation of a Data Set to Compute Log-likelihood — prepareData","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) simData <- getOneClinicalTrial(   nPat = c(30), transitionByArm = list(transition),   dropout = list(rate = 0.8, time = 12),   accrual = list(param = \"time\", value = 1) ) prepareData(simData) #>    id from to trans      entry        exit status #> 1   1    1  2     1 0.00000000 0.066277129      0 #> 2   1    1  3     2 0.00000000 0.066277129      1 #> 3   2    1  2     1 0.00000000 0.582430280      0 #> 4   2    1  3     2 0.00000000 0.582430280      1 #> 5   3    1  2     1 0.00000000 1.089692162      0 #> 6   3    1  3     2 0.00000000 1.089692162      1 #> 7   4    1  2     1 0.00000000 0.003181653      0 #> 8   4    1  3     2 0.00000000 0.003181653      1 #> 9   5    1  2     1 0.00000000 0.101806397      0 #> 10  5    1  3     2 0.00000000 0.101806397      1 #> 11  6    1  2     1 0.00000000 0.045827971      0 #> 12  6    1  3     2 0.00000000 0.045827971      0 #> 13  7    1  2     1 0.00000000 0.153713905      0 #> 14  7    1  3     2 0.00000000 0.153713905      1 #> 15  8    1  2     1 0.00000000 0.212997515      1 #> 16  8    1  3     2 0.00000000 0.212997515      0 #> 17  8    2  3     3 0.21299752 0.298913236      1 #> 18  9    1  2     1 0.00000000 0.243098829      1 #> 19  9    1  3     2 0.00000000 0.243098829      0 #> 20  9    2  3     3 0.24309883 0.517737352      1 #> 21 10    1  2     1 0.00000000 0.443369615      1 #> 22 10    1  3     2 0.00000000 0.443369615      0 #> 23 10    2  3     3 0.44336962 0.523616153      1 #> 24 11    1  2     1 0.00000000 0.142387308      0 #> 25 11    1  3     2 0.00000000 0.142387308      1 #> 26 12    1  2     1 0.00000000 0.727902990      1 #> 27 12    1  3     2 0.00000000 0.727902990      0 #> 28 12    2  3     3 0.72790299 1.850785731      1 #> 29 13    1  2     1 0.00000000 0.093890872      0 #> 30 13    1  3     2 0.00000000 0.093890872      1 #> 31 14    1  2     1 0.00000000 0.925866670      0 #> 32 14    1  3     2 0.00000000 0.925866670      1 #> 33 15    1  2     1 0.00000000 0.010891613      1 #> 34 15    1  3     2 0.00000000 0.010891613      0 #> 35 15    2  3     3 0.01089161 1.301701664      1 #> 36 16    1  2     1 0.00000000 0.106896270      0 #> 37 16    1  3     2 0.00000000 0.106896270      0 #> 38 17    1  2     1 0.00000000 1.149721738      0 #> 39 17    1  3     2 0.00000000 1.149721738      1 #> 40 18    1  2     1 0.00000000 0.138002841      0 #> 41 18    1  3     2 0.00000000 0.138002841      1 #> 42 19    1  2     1 0.00000000 0.446380686      0 #> 43 19    1  3     2 0.00000000 0.446380686      1 #> 44 20    1  2     1 0.00000000 0.421717130      1 #> 45 20    1  3     2 0.00000000 0.421717130      0 #> 46 20    2  3     3 0.42171713 0.516007558      1 #> 47 21    1  2     1 0.00000000 0.361510937      1 #> 48 21    1  3     2 0.00000000 0.361510937      0 #> 49 21    2  3     3 0.36151094 0.575776916      0 #> 50 22    1  2     1 0.00000000 0.193843792      1 #> 51 22    1  3     2 0.00000000 0.193843792      0 #> 52 22    2  3     3 0.19384379 0.702382476      1 #> 53 23    1  2     1 0.00000000 0.608832711      1 #> 54 23    1  3     2 0.00000000 0.608832711      0 #> 55 23    2  3     3 0.60883271 0.828572235      0 #> 56 24    1  2     1 0.00000000 0.514600178      0 #> 57 24    1  3     2 0.00000000 0.514600178      1 #> 58 25    1  2     1 0.00000000 0.218239975      0 #> 59 25    1  3     2 0.00000000 0.218239975      1 #> 60 26    1  2     1 0.00000000 0.075526144      1 #> 61 26    1  3     2 0.00000000 0.075526144      0 #> 62 26    2  3     3 0.07552614 1.228833720      1 #> 63 27    1  2     1 0.00000000 0.245773869      1 #> 64 27    1  3     2 0.00000000 0.245773869      0 #> 65 27    2  3     3 0.24577387 1.304677951      1 #> 66 28    1  2     1 0.00000000 0.345940472      0 #> 67 28    1  3     2 0.00000000 0.345940472      1 #> 68 29    1  2     1 0.00000000 1.184450217      1 #> 69 29    1  3     2 0.00000000 1.184450217      0 #> 70 29    2  3     3 1.18445022 1.705445544      1 #> 71 30    1  2     1 0.00000000 0.046964496      0 #> 72 30    1  3     2 0.00000000 0.046964496      1"},{"path":"https://insightsengineering.github.io/simIDM/reference/pwA.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Hazard for Piecewise Constant Hazards — pwA","title":"Cumulative Hazard for Piecewise Constant Hazards — pwA","text":"Cumulative Hazard Piecewise Constant Hazards","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/pwA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Hazard for Piecewise Constant Hazards — pwA","text":"","code":"pwA(t, haz, pw)"},{"path":"https://insightsengineering.github.io/simIDM/reference/pwA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Hazard for Piecewise Constant Hazards — pwA","text":"t (numeric)  study time-points. haz (numeric vector) constant transition hazards. pw (numeric vector) time intervals piecewise constant hazards.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/pwA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Hazard for Piecewise Constant Hazards — pwA","text":"returns value cumulative hazard time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/pwA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Hazard for Piecewise Constant Hazards — pwA","text":"","code":"pwA(1:5, c(0.5, 0.9), c(0, 4)) #> [1] 0.5 1.0 1.5 2.0 2.9"},{"path":"https://insightsengineering.github.io/simIDM/reference/runTrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for Adding Progress Bar to Trial Simulation — runTrial","title":"Helper Function for Adding Progress Bar to Trial Simulation — runTrial","text":"Helper Function Adding Progress Bar Trial Simulation","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/runTrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for Adding Progress Bar to Trial Simulation — runTrial","text":"","code":"runTrial(x, pb, ...)"},{"path":"https://insightsengineering.github.io/simIDM/reference/runTrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for Adding Progress Bar to Trial Simulation — runTrial","text":"x (int) iteration index within lapply. ... parameters transferred getOneClinicalTrial(), see getOneClinicalTrial() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/runTrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for Adding Progress Bar to Trial Simulation — runTrial","text":"returns getOneClinicalTrial(), updates progress bar.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/simIDM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"simIDM Package — simIDM-package","title":"simIDM Package — simIDM-package","text":"simIDM simulates survival multistate model jointly models PFS OS.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/simIDM/reference/simIDM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"simIDM Package — simIDM-package","text":"Maintainer: Alexandra Erdmann alexandra.erdmann@uni-ulm.de Authors: Kaspar Rufibach kaspar.rufibach@roche.com Holger Loewe holger.loewe@roche.com Daniel Sabanes Bove daniel.sabanes_bove@roche.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder] University Ulm [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/singleExpQuantOS.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for Single Quantile for OS Survival Function — singleExpQuantOS","title":"Helper Function for Single Quantile for OS Survival Function — singleExpQuantOS","text":"Helper Function Single Quantile OS Survival Function","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/singleExpQuantOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for Single Quantile for OS Survival Function — singleExpQuantOS","text":"","code":"singleExpQuantOS(q, h01, h02, h12)"},{"path":"https://insightsengineering.github.io/simIDM/reference/singleExpQuantOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for Single Quantile for OS Survival Function — singleExpQuantOS","text":"q (number) single quantile compute event time. h01 (numeric vector) constant transition hazards 0 1 transition. h02 (numeric vector) constant transition hazards 0 2 transition. h12 (numeric vector) constant transition hazards 1 2 transition.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/singleExpQuantOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for Single Quantile for OS Survival Function — singleExpQuantOS","text":"Single time t OS survival function t equals q.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survOS.html","id":null,"dir":"Reference","previous_headings":"","what":"OS Survival Function for Different Transition Models — survOS","title":"OS Survival Function for Different Transition Models — survOS","text":"OS Survival Function Different Transition Models","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OS Survival Function for Different Transition Models — survOS","text":"","code":"survOS(transition, t)"},{"path":"https://insightsengineering.github.io/simIDM/reference/survOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OS Survival Function for Different Transition Models — survOS","text":"transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details. t (numeric) time value OS survival function computed.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OS Survival Function for Different Transition Models — survOS","text":"value survival function specified transition time.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OS Survival Function for Different Transition Models — survOS","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) survOS(transition, 0.4) #> [1] 0.5443558"},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFS.html","id":null,"dir":"Reference","previous_headings":"","what":"PFS Survival Function for Different Transition Models — survPFS","title":"PFS Survival Function for Different Transition Models — survPFS","text":"PFS Survival Function Different Transition Models","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PFS Survival Function for Different Transition Models — survPFS","text":"","code":"survPFS(transition, t)"},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PFS Survival Function for Different Transition Models — survPFS","text":"transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details. t (numeric) time value PFS survival function computed.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PFS Survival Function for Different Transition Models — survPFS","text":"value survival function specified transition time.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PFS Survival Function for Different Transition Models — survPFS","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) survPFS(transition, 0.4) #> [1] 0.3395955"},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFSOS.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Function of the Product PFS*OS for Different Transition Models — survPFSOS","title":"Survival Function of the Product PFS*OS for Different Transition Models — survPFSOS","text":"Survival Function Product PFS*OS Different Transition Models","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFSOS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Function of the Product PFS*OS for Different Transition Models — survPFSOS","text":"","code":"survPFSOS(t, transition)"},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFSOS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Function of the Product PFS*OS for Different Transition Models — survPFSOS","text":"t (numeric) time value PFS*OS survival function computed. transition (TransitionParameters) see exponential_transition(), weibull_transition() piecewise_exponential() details.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFSOS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Function of the Product PFS*OS for Different Transition Models — survPFSOS","text":"returns value PFS*OS survival function time t.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survPFSOS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Function of the Product PFS*OS for Different Transition Models — survPFSOS","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) survPFSOS(0.4, transition) #> [1] 0.2480364"},{"path":"https://insightsengineering.github.io/simIDM/reference/survTrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Function for Different Transition Models — survTrans","title":"Survival Function for Different Transition Models — survTrans","text":"Survival Function Different Transition Models","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survTrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Function for Different Transition Models — survTrans","text":"","code":"survTrans(transition, t, trans)  # S3 method for ExponentialTransition survTrans(transition, t, trans)  # S3 method for WeibullTransition survTrans(transition, t, trans)"},{"path":"https://insightsengineering.github.io/simIDM/reference/survTrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Function for Different Transition Models — survTrans","text":"transition (ExponentialTransition WeibullTransition) see exponential_transition() weibull_transition() details. t (numeric) time survival probability computed. trans (integer) index specifying transition type.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survTrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Function for Different Transition Models — survTrans","text":"survival probability specified transition time.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survTrans.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Survival Function for Different Transition Models — survTrans","text":"survTrans(ExponentialTransition): Exponential Transition Model survTrans(WeibullTransition): Weibull Transition Model","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/survTrans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival Function for Different Transition Models — survTrans","text":"","code":"transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) survTrans(transition, 0.4, 2) #> [1] 0.5488116 transition <- exponential_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6) survTrans(transition, 0.4, 2) #> [1] 0.5488116 transition <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 2, p02 = 2.5, p12 = 3) survTrans(transition, 0.4, 2) #> [1] 0.8591693"},{"path":"https://insightsengineering.github.io/simIDM/reference/trackEventsPerTrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Event tracking in an oncology trial. — trackEventsPerTrial","title":"Event tracking in an oncology trial. — trackEventsPerTrial","text":"Event tracking oncology trial.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/trackEventsPerTrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event tracking in an oncology trial. — trackEventsPerTrial","text":"","code":"trackEventsPerTrial(data, timeP, byArm = FALSE)"},{"path":"https://insightsengineering.github.io/simIDM/reference/trackEventsPerTrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event tracking in an oncology trial. — trackEventsPerTrial","text":"data (data.frame) illness-death data set 1rowPatient format. timeP (numeric)  vector study time-points. byArm (logical)  TRUE time-point per treatment arm, else joint evaluation treatment arms.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/trackEventsPerTrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event tracking in an oncology trial. — trackEventsPerTrial","text":"function returns data frame including number PFS events, number OS events, number recruited patients, number censored patients number ongoing patients timeP.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/trackEventsPerTrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event tracking in an oncology trial. — trackEventsPerTrial","text":"","code":"transition1 <- weibull_transition(h01 = 1.2, h02 = 1.5, h12 = 1.6, p01 = 0.8, p02 = 0.9, p12 = 1) transition2 <- weibull_transition(h01 = 1, h02 = 1.3, h12 = 1.7, p01 = 1.1, p02 = 0.9, p12 = 1.1)  simStudy <- getOneClinicalTrial(   nPat = c(20, 20), transitionByArm = list(transition1, transition2),   dropout = list(rate = 0.3, time = 10),   accrual = list(param = \"time\", value = 0) ) simStudyWide <- getDatasetWideFormat(simStudy) trackEventsPerTrial(data = simStudyWide, timeP = 1.5, byArm = FALSE) #> $all #>           Timepoint: 1.5 #> PFS                   38 #> OS                    36 #> Recruited             40 #> Censored               1 #> Ongoing                3 #>"},{"path":"https://insightsengineering.github.io/simIDM/reference/weibull_transition.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition Hazards for Weibull Distributed Event Times — weibull_transition","title":"Transition Hazards for Weibull Distributed Event Times — weibull_transition","text":"creates list class TransitionParameters containing hazards, time intervals Weibull rates Weibull distributed event times illness-death model.","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/weibull_transition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition Hazards for Weibull Distributed Event Times — weibull_transition","text":"","code":"weibull_transition(h01 = 1, h02 = 1, h12 = 1, p01 = 1, p02 = 1, p12 = 1)"},{"path":"https://insightsengineering.github.io/simIDM/reference/weibull_transition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition Hazards for Weibull Distributed Event Times — weibull_transition","text":"h01 (positive number) transition hazard 0 1 transition h02 (positive number) transition hazard 0 2 transition h12 (positive number) transition hazard 1 2 transition p01 (positive number) rate parameter Weibull distribution h01 p02 (positive number) rate parameter Weibull distribution h02 p12 (positive number) rate parameter Weibull distribution h12","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/weibull_transition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition Hazards for Weibull Distributed Event Times — weibull_transition","text":"List elements hazards, intervals, weibull_rates family (Weibull).","code":""},{"path":"https://insightsengineering.github.io/simIDM/reference/weibull_transition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition Hazards for Weibull Distributed Event Times — weibull_transition","text":"","code":"weibull_transition(h01 = 1, h02 = 1.3, h12 = 0.5, p01 = 1.2, p02 = 1.3, p12 = 0.5) #> $hazards #> $hazards$h01 #> [1] 1 #>  #> $hazards$h02 #> [1] 1.3 #>  #> $hazards$h12 #> [1] 0.5 #>  #>  #> $weibull_rates #> $weibull_rates$p01 #> [1] 1.2 #>  #> $weibull_rates$p02 #> [1] 1.3 #>  #> $weibull_rates$p12 #> [1] 0.5 #>  #>  #> $intervals #> $intervals$pw01 #> [1] 0 #>  #> $intervals$pw02 #> [1] 0 #>  #> $intervals$pw12 #> [1] 0 #>  #>  #> $family #> [1] \"Weibull\" #>  #> attr(,\"class\") #> [1] \"WeibullTransition\"    \"TransitionParameters\""},{"path":[]},{"path":"https://insightsengineering.github.io/simIDM/news/index.html","id":"new-features-0-0-5-9019","dir":"Changelog","previous_headings":"","what":"New Features","title":"simIDM 0.0.5.9019","text":"prepareData allows formatting trial data log-likelihood computation. estimateParams estimates parameters exponential Weibull transition hazards given data set.","code":""},{"path":"https://insightsengineering.github.io/simIDM/news/index.html","id":"bug-fixes-0-0-5-9019","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"simIDM 0.0.5.9019","text":"ExpSurvOS now returns 0 instead NaN large values t. WeibSurvOS now return error large values t. PWCSurvOS now return error large values t. getSimulatedData now also works transitions progression death, similarly getOneClinicalTrial (now warns transitions ).","code":""},{"path":"https://insightsengineering.github.io/simIDM/news/index.html","id":"simidm-005","dir":"Changelog","previous_headings":"","what":"simIDM 0.0.5","title":"simIDM 0.0.5","text":"CRAN release: 2023-01-27 First CRAN version package. package simulates illness-death models constant, Weibull piecewise constant transition hazards.","code":""},{"path":"https://insightsengineering.github.io/simIDM/news/index.html","id":"new-features-0-0-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"simIDM 0.0.5","text":"Exponentially, Weibull piecewise exponentially distributed survival times. Random censoring event-driven censoring pre-specified number PFS OS events. Arbitrary number treatment arms flexible randomization ratio. Staggered study entry. Derivation PFS OS survival functions transition hazards.","code":""}]
